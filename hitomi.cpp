/* Generated by Cython 0.29.24 */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_24"
#define CYTHON_HEX_VERSION 0x001D18F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__hitomipy
#define __PYX_HAVE_API__hitomipy
/* Early includes */
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"

    /* NumPy API declarations from "numpy/__init__.pxd" */
    
#include "cpp/fftlog.hpp"
#include "cpp/wigner.hpp"
#include "cpp/pk_lin.hpp"
#include "cpp/calc_P.hpp"
#include "cpp/calc_cov_PP.hpp"
#include "cpp/calc_cov_BB.hpp"
#include "cpp/calc_B.hpp"
#include "cpp/kernel.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 1
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING "utf8"
#define __Pyx_PyObject_FromString __Pyx_PyUnicode_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "hitomi.pyx",
  "__init__.pxd",
  "type.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":690
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":691
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":692
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":693
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":697
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":698
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":699
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":700
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":704
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":705
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":714
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":715
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":716
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":718
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":719
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":720
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":722
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":723
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":725
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":726
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":727
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":729
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":730
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":731
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":733
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

#define __Pyx_BufPtrCContig1d(type, buf, i0, s0) ((type)buf + i0)
/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_generic = 0;
static PyTypeObject *__pyx_ptype_5numpy_number = 0;
static PyTypeObject *__pyx_ptype_5numpy_integer = 0;
static PyTypeObject *__pyx_ptype_5numpy_signedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_unsignedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_inexact = 0;
static PyTypeObject *__pyx_ptype_5numpy_floating = 0;
static PyTypeObject *__pyx_ptype_5numpy_complexfloating = 0;
static PyTypeObject *__pyx_ptype_5numpy_flexible = 0;
static PyTypeObject *__pyx_ptype_5numpy_character = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;

/* Module declarations from 'hitomipy' */
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
#define __Pyx_MODULE_NAME "hitomipy"
extern int __pyx_module_is_main_hitomipy;
int __pyx_module_is_main_hitomipy = 0;

/* Implementation of 'hitomipy' */
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_N[] = "N";
static const char __pyx_k_R[] = "R";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_m[] = "m";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_b1[] = "b1";
static const char __pyx_k_b2[] = "b2";
static const char __pyx_k_b3[] = "b3";
static const char __pyx_k_bO[] = "bO";
static const char __pyx_k_c0[] = "c0";
static const char __pyx_k_c1[] = "c1";
static const char __pyx_k_c2[] = "c2";
static const char __pyx_k_fz[] = "fz";
static const char __pyx_k_k1[] = "k1";
static const char __pyx_k_ks[] = "ks";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_pk[] = "pk";
static const char __pyx_k_xi[] = "xi";
static const char __pyx_k_A02[] = "A02";
static const char __pyx_k_A03[] = "A03";
static const char __pyx_k_A04[] = "A04";
static const char __pyx_k_A11[] = "A11";
static const char __pyx_k_A12[] = "A12";
static const char __pyx_k_A13[] = "A13";
static const char __pyx_k_A20[] = "A20";
static const char __pyx_k_A21[] = "A21";
static const char __pyx_k_A22[] = "A22";
static const char __pyx_k_A30[] = "A30";
static const char __pyx_k_A31[] = "A31";
static const char __pyx_k_A40[] = "A40";
static const char __pyx_k_ELL[] = "ELL";
static const char __pyx_k_bDK[] = "bDK";
static const char __pyx_k_bG2[] = "bG2";
static const char __pyx_k_bK2[] = "bK2";
static const char __pyx_k_bK3[] = "bK3";
static const char __pyx_k_knl[] = "knl";
static const char __pyx_k_n_s[] = "n_s";
static const char __pyx_k_Tcmb[] = "Tcmb";
static const char __pyx_k_ell1[] = "ell1";
static const char __pyx_k_ell2[] = "ell2";
static const char __pyx_k_kbin[] = "kbin";
static const char __pyx_k_kmag[] = "kmag";
static const char __pyx_k_kmax[] = "kmax";
static const char __pyx_k_kmin[] = "kmin";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_ndim[] = "ndim";
static const char __pyx_k_rbao[] = "rbao";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_Bshot[] = "Bshot";
static const char __pyx_k_Pshot[] = "Pshot";
static const char __pyx_k_kmag1[] = "kmag1";
static const char __pyx_k_ncomp[] = "ncomp";
static const char __pyx_k_nmean[] = "nmean";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_pk_in[] = "pk_in";
static const char __pyx_k_xx_in[] = "xx_in";
static const char __pyx_k_DeltaK[] = "DeltaK";
static const char __pyx_k_Sigma2[] = "Sigma2";
static const char __pyx_k_b1_fid[] = "b1_fid";
static const char __pyx_k_ff_out[] = "ff_out";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_omega0[] = "omega0";
static const char __pyx_k_omegab[] = "omegab";
static const char __pyx_k_sigma8[] = "sigma8";
static const char __pyx_k_volume[] = "volume";
static const char __pyx_k_Sig2_py[] = "Sig2_py";
static const char __pyx_k_bGamma3[] = "bGamma3";
static const char __pyx_k_dSigma2[] = "dSigma2";
static const char __pyx_k_epsilon[] = "epsilon";
static const char __pyx_k_k1_dash[] = "k1_dash";
static const char __pyx_k_kbin_in[] = "kbin_in";
static const char __pyx_k_pk_0_in[] = "pk_0_in";
static const char __pyx_k_pk_2_in[] = "pk_2_in";
static const char __pyx_k_ELL_dash[] = "ELL_dash";
static const char __pyx_k_dSig2_py[] = "dSig2_py";
static const char __pyx_k_hitomipy[] = "hitomipy";
static const char __pyx_k_pk2xi_py[] = "pk2xi_py";
static const char __pyx_k_sigma2_b[] = "sigma2_b";
static const char __pyx_k_xi2pk_py[] = "xi2pk_py";
static const char __pyx_k_ell1_dash[] = "ell1_dash";
static const char __pyx_k_ell2_dash[] = "ell2_dash";
static const char __pyx_k_hankel_py[] = "hankel_py";
static const char __pyx_k_num_k_bin[] = "num_k_bin";
static const char __pyx_k_pk_num_in[] = "pk_num_in";
static const char __pyx_k_alpha_perp[] = "alpha_perp";
static const char __pyx_k_hitomi_pyx[] = "hitomi.pyx";
static const char __pyx_k_parameters[] = "parameters";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_num_epsilon[] = "num_epsilon";
static const char __pyx_k_set_kmax_py[] = "set_kmax_py";
static const char __pyx_k_set_kmin_py[] = "set_kmin_py";
static const char __pyx_k_sigma2_para[] = "sigma2_para";
static const char __pyx_k_sigma2_perp[] = "sigma2_perp";
static const char __pyx_k_alpha_parallel[] = "alpha_parallel";
static const char __pyx_k_setWigner3j_py[] = "setWigner3j_py";
static const char __pyx_k_calcSigma_dd_py[] = "calcSigma_dd_py";
static const char __pyx_k_integrand_SS_py[] = "integrand_SS_py";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_integrand_SSpow_py[] = "integrand_SSpow_py";
static const char __pyx_k_integrand_B_Tree_py[] = "integrand_B_Tree_py";
static const char __pyx_k_integrand_P_Tree_py[] = "integrand_P_Tree_py";
static const char __pyx_k_integrand_P_1loop_py[] = "integrand_P_1loop_py";
static const char __pyx_k_integrand_B_Kernel_py[] = "integrand_B_Kernel_py";
static const char __pyx_k_integrand_P_SigmaB_py[] = "integrand_P_SigmaB_py";
static const char __pyx_k_integrand_cov_BB_G_py[] = "integrand_cov_BB_G_py";
static const char __pyx_k_integrand_cov_PP_G_py[] = "integrand_cov_PP_G_py";
static const char __pyx_k_integrand_cov_PP_NG_py[] = "integrand_cov_PP_NG_py";
static const char __pyx_k_integrand_B_Tree_BAO_py[] = "integrand_B_Tree_BAO_py";
static const char __pyx_k_integrand_B_Tree_FoG_py[] = "integrand_B_Tree_FoG_py";
static const char __pyx_k_integrand_P_Tree_BAO_py[] = "integrand_P_Tree_BAO_py";
static const char __pyx_k_integrand_B_Kernel_SN_py[] = "integrand_B_Kernel_SN_py";
static const char __pyx_k_integrand_P_LocalMean_py[] = "integrand_P_LocalMean_py";
static const char __pyx_k_integrand_cov_PP_G_NL_py[] = "integrand_cov_PP_G_NL_py";
static const char __pyx_k_integrand_B_Tree_f_f_f_py[] = "integrand_B_Tree_f_f_f_py";
static const char __pyx_k_integrand_cov_PP_NG_b1_py[] = "integrand_cov_PP_NG_b1_py";
static const char __pyx_k_integrand_cov_PP_NG_b2_py[] = "integrand_cov_PP_NG_b2_py";
static const char __pyx_k_integrand_cov_PP_NG_b3_py[] = "integrand_cov_PP_NG_b3_py";
static const char __pyx_k_integrand_cov_PP_NG_bO_py[] = "integrand_cov_PP_NG_bO_py";
static const char __pyx_k_readInputPowerSpectrum_py[] = "readInputPowerSpectrum_py";
static const char __pyx_k_integrand_B_FoG_Damping_py[] = "integrand_B_FoG_Damping_py";
static const char __pyx_k_integrand_B_Kernel_diag_py[] = "integrand_B_Kernel_diag_py";
static const char __pyx_k_integrand_B_Tree_b1_f_f_py[] = "integrand_B_Tree_b1_f_f_py";
static const char __pyx_k_integrand_B_Tree_b2_f_f_py[] = "integrand_B_Tree_b2_f_f_py";
static const char __pyx_k_integrand_B_Tree_ff_f_f_py[] = "integrand_B_Tree_ff_f_f_py";
static const char __pyx_k_integrand_P_Counterterm_py[] = "integrand_P_Counterterm_py";
static const char __pyx_k_integrand_P_Kernel_Tree_py[] = "integrand_P_Kernel_Tree_py";
static const char __pyx_k_integrand_cov_BB_G_diag_py[] = "integrand_cov_BB_G_diag_py";
static const char __pyx_k_integrand_cov_PP_NG_bDK_py[] = "integrand_cov_PP_NG_bDK_py";
static const char __pyx_k_integrand_cov_PP_NG_bK2_py[] = "integrand_cov_PP_NG_bK2_py";
static const char __pyx_k_integrand_cov_PP_NG_bK3_py[] = "integrand_cov_PP_NG_bK3_py";
static const char __pyx_k_f_pk_no_wiggle_integrand_py[] = "f_pk_no_wiggle_integrand_py";
static const char __pyx_k_integrand_B_Tree_b1_b1_f_py[] = "integrand_B_Tree_b1_b1_f_py";
static const char __pyx_k_integrand_B_Tree_b1f_f_f_py[] = "integrand_B_Tree_b1f_f_f_py";
static const char __pyx_k_integrand_B_Tree_b2_b1_f_py[] = "integrand_B_Tree_b2_b1_f_py";
static const char __pyx_k_integrand_B_Tree_bK2_f_f_py[] = "integrand_B_Tree_bK2_f_f_py";
static const char __pyx_k_integrand_P_Damping_Tree_py[] = "integrand_P_Damping_Tree_py";
static const char __pyx_k_integrand_P_Tree_BAO_f_f_py[] = "integrand_P_Tree_BAO_f_f_py";
static const char __pyx_k_calcNormalizationNoWiggle_py[] = "calcNormalizationNoWiggle_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_py[] = "integrand_B_Tree_NoWiggle_py";
static const char __pyx_k_integrand_B_Tree_b1_b1_b1_py[] = "integrand_B_Tree_b1_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_b1f_b1_f_py[] = "integrand_B_Tree_b1f_b1_f_py";
static const char __pyx_k_integrand_B_Tree_b2_b1_b1_py[] = "integrand_B_Tree_b2_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_bK2_b1_f_py[] = "integrand_B_Tree_bK2_b1_f_py";
static const char __pyx_k_integrand_P_Damping_1loop_py[] = "integrand_P_Damping_1loop_py";
static const char __pyx_k_integrand_P_Tree_BAO_b1_f_py[] = "integrand_P_Tree_BAO_b1_f_py";
static const char __pyx_k_integrand_P_Tree_NoWiggle_py[] = "integrand_P_Tree_NoWiggle_py";
static const char __pyx_k_integrand_cov_PP_NG_b2_b2_py[] = "integrand_cov_PP_NG_b2_b2_py";
static const char __pyx_k_finalizeInputPowerSpectrum_py[] = "finalizeInputPowerSpectrum_py";
static const char __pyx_k_integrand_B_Kernel_SN_diag_py[] = "integrand_B_Kernel_SN_diag_py";
static const char __pyx_k_integrand_B_Tree_BAO_f_f_f_py[] = "integrand_B_Tree_BAO_f_f_f_py";
static const char __pyx_k_integrand_B_Tree_b1f_b1_b1_py[] = "integrand_B_Tree_b1f_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_bK2_b1_b1_py[] = "integrand_B_Tree_bK2_b1_b1_py";
static const char __pyx_k_integrand_P_Tree_BAO_b1_b1_py[] = "integrand_P_Tree_BAO_b1_b1_py";
static const char __pyx_k_integrand_cov_PP_NG_b2_bK2_py[] = "integrand_cov_PP_NG_b2_bK2_py";
static const char __pyx_k_readNonLinearPowerSpectrum_py[] = "readNonLinearPowerSpectrum_py";
static const char __pyx_k_integrand_B_Kernel_PNG_diag_py[] = "integrand_B_Kernel_PNG_diag_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1_f_f_py[] = "integrand_B_Tree_BAO_b1_f_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_b2_f_f_py[] = "integrand_B_Tree_BAO_b2_f_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_ff_f_f_py[] = "integrand_B_Tree_BAO_ff_f_f_py";
static const char __pyx_k_integrand_B_Tree_DampIvanov_py[] = "integrand_B_Tree_DampIvanov_py";
static const char __pyx_k_integrand_P_Kernel_1loop_13_py[] = "integrand_P_Kernel_1loop_13_py";
static const char __pyx_k_integrand_P_Kernel_1loop_22_py[] = "integrand_P_Kernel_1loop_22_py";
static const char __pyx_k_integrand_cov_PP_NG_bK2_bK2_py[] = "integrand_cov_PP_NG_bK2_bK2_py";
static const char __pyx_k_calcNormalizationUsingSigma8_py[] = "calcNormalizationUsingSigma8_py";
static const char __pyx_k_initializeInputPowerSpectrum_py[] = "initializeInputPowerSpectrum_py";
static const char __pyx_k_integrand_B_FoG_Damping_diag_py[] = "integrand_B_FoG_Damping_diag_py";
static const char __pyx_k_integrand_B_SN_FoG_Damping_diag[] = "integrand_B_SN_FoG_Damping_diag_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1_b1_f_py[] = "integrand_B_Tree_BAO_b1_b1_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1f_f_f_py[] = "integrand_B_Tree_BAO_b1f_f_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_b2_b1_f_py[] = "integrand_B_Tree_BAO_b2_b1_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_bK2_f_f_py[] = "integrand_B_Tree_BAO_bK2_f_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1_b1[] = "integrand_B_Tree_NoWiggle_b1_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1f_f[] = "integrand_B_Tree_NoWiggle_b1f_f_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b2_b1[] = "integrand_B_Tree_NoWiggle_b2_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_bK2_f[] = "integrand_B_Tree_NoWiggle_bK2_f_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_f_f_f[] = "integrand_B_Tree_NoWiggle_f_f_f_py";
static const char __pyx_k_integrand_P_Damping_Counterterm[] = "integrand_P_Damping_Counterterm_py";
static const char __pyx_k_integrand_P_NonLinearFitting_py[] = "integrand_P_NonLinearFitting_py";
static const char __pyx_k_integrand_P_Tree_BAO_Fitting_py[] = "integrand_P_Tree_BAO_Fitting_py";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_integrand_B_NonGaussian_Equilate[] = "integrand_B_NonGaussian_Equilateral_py";
static const char __pyx_k_integrand_B_NonGaussian_Local_py[] = "integrand_B_NonGaussian_Local_py";
static const char __pyx_k_integrand_B_NonGaussian_Orthogon[] = "integrand_B_NonGaussian_Orthogonal_py";
static const char __pyx_k_integrand_B_Tree_BAO_RealSpace_D[] = "integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py";
static const char __pyx_k_integrand_B_Tree_BAO_Template_py[] = "integrand_B_Tree_BAO_Template_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1_b1_b1_py[] = "integrand_B_Tree_BAO_b1_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1f_b1_b1_p[] = "integrand_B_Tree_BAO_b1f_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_BAO_b1f_b1_f_py[] = "integrand_B_Tree_BAO_b1f_b1_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_b2_b1_b1_py[] = "integrand_B_Tree_BAO_b2_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_BAO_bK2_b1_b1_p[] = "integrand_B_Tree_BAO_bK2_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_BAO_bK2_b1_f_py[] = "integrand_B_Tree_BAO_bK2_b1_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_RealSp[] = "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_Recons[] = "integrand_B_Tree_NoWiggle_Reconstructed_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1_f_f[] = "integrand_B_Tree_NoWiggle_b1_f_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1f_b1[] = "integrand_B_Tree_NoWiggle_b1f_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b2_f_f[] = "integrand_B_Tree_NoWiggle_b2_f_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_bK2_b1[] = "integrand_B_Tree_NoWiggle_bK2_b1_b1_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_ff_f_f[] = "integrand_B_Tree_NoWiggle_ff_f_f_py";
static const char __pyx_k_integrand_B_Tree_Reconstructed_p[] = "integrand_B_Tree_Reconstructed_py";
static const char __pyx_k_integrand_P_Kernel_1loop_22_norm[] = "integrand_P_Kernel_1loop_22_norm_py";
static const char __pyx_k_integrand_P_Kernel_Counterterm_p[] = "integrand_P_Kernel_Counterterm_py";
static const char __pyx_k_integrand_P_NonLinearFitting_Win[] = "integrand_P_NonLinearFitting_Window_py";
static const char __pyx_k_integrand_P_sigma2_para_Reconstr[] = "integrand_P_sigma2_para_Reconstructed_py";
static const char __pyx_k_integrand_P_sigma2_perp_Reconstr[] = "integrand_P_sigma2_perp_Reconstructed_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling[] = "integrand_cov_PP_NG_BeatCoupling_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_NL[] = "integrand_cov_PP_NG_LocalMean_NL_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_py[] = "integrand_cov_PP_NG_LocalMean_py";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_readInputNoWigglePowerSpectrum_p[] = "readInputNoWigglePowerSpectrum_py";
static const char __pyx_k_readInputPrimordialPowerSpectrum[] = "readInputPrimordialPowerSpectrum_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1_b1_2[] = "integrand_B_Tree_NoWiggle_b1_b1_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b2_b1_2[] = "integrand_B_Tree_NoWiggle_b2_b1_f_py";
static const char __pyx_k_integrand_B_Tree_BAO_RealSpace_D_2[] = "integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py";
static const char __pyx_k_integrand_B_Tree_BAO_RealSpace_D_3[] = "integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_RealSp_2[] = "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_RealSp_3[] = "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_b1f_b1_2[] = "integrand_B_Tree_NoWiggle_b1f_b1_f_py";
static const char __pyx_k_integrand_B_Tree_NoWiggle_bK2_b1_2[] = "integrand_B_Tree_NoWiggle_bK2_b1_f_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_2[] = "integrand_cov_PP_NG_BeatCoupling_b1_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_3[] = "integrand_cov_PP_NG_BeatCoupling_b2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_4[] = "integrand_cov_PP_NG_BeatCoupling_bK2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_5[] = "integrand_cov_PP_NG_BeatCoupling_b2_b2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_6[] = "integrand_cov_PP_NG_BeatCoupling_b2_bK2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_7[] = "integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_8[] = "integrand_cov_PP_NG_BeatCoupling_b3_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_9[] = "integrand_cov_PP_NG_BeatCoupling_bK3_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_NL_2[] = "integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_NL_3[] = "integrand_cov_PP_NG_LocalMean_NL_b1_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_NL_4[] = "integrand_cov_PP_NG_LocalMean_NL_b2_py";
static const char __pyx_k_integrand_cov_PP_NG_LocalMean_NL_5[] = "integrand_cov_PP_NG_LocalMean_NL_bK2_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_10[] = "integrand_cov_PP_NG_BeatCoupling_bDK_py";
static const char __pyx_k_integrand_cov_PP_NG_BeatCoupling_11[] = "integrand_cov_PP_NG_BeatCoupling_bO_py";
static PyObject *__pyx_n_s_A02;
static PyObject *__pyx_n_s_A03;
static PyObject *__pyx_n_s_A04;
static PyObject *__pyx_n_s_A11;
static PyObject *__pyx_n_s_A12;
static PyObject *__pyx_n_s_A13;
static PyObject *__pyx_n_s_A20;
static PyObject *__pyx_n_s_A21;
static PyObject *__pyx_n_s_A22;
static PyObject *__pyx_n_s_A30;
static PyObject *__pyx_n_s_A31;
static PyObject *__pyx_n_s_A40;
static PyObject *__pyx_n_s_Bshot;
static PyObject *__pyx_n_s_DeltaK;
static PyObject *__pyx_n_s_ELL;
static PyObject *__pyx_n_s_ELL_dash;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_n_s_N;
static PyObject *__pyx_n_s_Pshot;
static PyObject *__pyx_n_s_R;
static PyObject *__pyx_n_s_Sig2_py;
static PyObject *__pyx_n_s_Sigma2;
static PyObject *__pyx_n_s_Tcmb;
static PyObject *__pyx_n_s_alpha_parallel;
static PyObject *__pyx_n_s_alpha_perp;
static PyObject *__pyx_n_s_b1;
static PyObject *__pyx_n_s_b1_fid;
static PyObject *__pyx_n_s_b2;
static PyObject *__pyx_n_s_b3;
static PyObject *__pyx_n_s_bDK;
static PyObject *__pyx_n_s_bG2;
static PyObject *__pyx_n_s_bGamma3;
static PyObject *__pyx_n_s_bK2;
static PyObject *__pyx_n_s_bK3;
static PyObject *__pyx_n_s_bO;
static PyObject *__pyx_n_s_c0;
static PyObject *__pyx_n_s_c1;
static PyObject *__pyx_n_s_c2;
static PyObject *__pyx_n_s_calcNormalizationNoWiggle_py;
static PyObject *__pyx_n_s_calcNormalizationUsingSigma8_py;
static PyObject *__pyx_n_s_calcSigma_dd_py;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_dSig2_py;
static PyObject *__pyx_n_s_dSigma2;
static PyObject *__pyx_n_s_ell1;
static PyObject *__pyx_n_s_ell1_dash;
static PyObject *__pyx_n_s_ell2;
static PyObject *__pyx_n_s_ell2_dash;
static PyObject *__pyx_n_s_epsilon;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_s_f_pk_no_wiggle_integrand_py;
static PyObject *__pyx_n_s_ff_out;
static PyObject *__pyx_n_s_finalizeInputPowerSpectrum_py;
static PyObject *__pyx_n_s_fz;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_hankel_py;
static PyObject *__pyx_kp_s_hitomi_pyx;
static PyObject *__pyx_n_s_hitomipy;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_initializeInputPowerSpectrum_py;
static PyObject *__pyx_n_s_integrand_B_FoG_Damping_diag_py;
static PyObject *__pyx_n_s_integrand_B_FoG_Damping_py;
static PyObject *__pyx_n_s_integrand_B_Kernel_PNG_diag_py;
static PyObject *__pyx_n_s_integrand_B_Kernel_SN_diag_py;
static PyObject *__pyx_n_s_integrand_B_Kernel_SN_py;
static PyObject *__pyx_n_s_integrand_B_Kernel_diag_py;
static PyObject *__pyx_n_s_integrand_B_Kernel_py;
static PyObject *__pyx_n_s_integrand_B_NonGaussian_Equilate;
static PyObject *__pyx_n_s_integrand_B_NonGaussian_Local_py;
static PyObject *__pyx_n_s_integrand_B_NonGaussian_Orthogon;
static PyObject *__pyx_n_s_integrand_B_SN_FoG_Damping_diag;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_2;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_3;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_Template_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1f_b1_b1_p;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1f_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b1f_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b2_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b2_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_b2_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_bK2_b1_b1_p;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_bK2_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_bK2_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_f_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_ff_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_BAO_py;
static PyObject *__pyx_n_s_integrand_B_Tree_DampIvanov_py;
static PyObject *__pyx_n_s_integrand_B_Tree_FoG_py;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_2;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_3;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_Recons;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1_2;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1_f_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1_2;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1_2;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_b2_f_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1_2;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_f_f_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_ff_f_f;
static PyObject *__pyx_n_s_integrand_B_Tree_NoWiggle_py;
static PyObject *__pyx_n_s_integrand_B_Tree_Reconstructed_p;
static PyObject *__pyx_n_s_integrand_B_Tree_b1_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b1_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b1_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b1f_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b1f_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b1f_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b2_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b2_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_b2_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_bK2_b1_b1_py;
static PyObject *__pyx_n_s_integrand_B_Tree_bK2_b1_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_bK2_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_f_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_ff_f_f_py;
static PyObject *__pyx_n_s_integrand_B_Tree_py;
static PyObject *__pyx_n_s_integrand_P_1loop_py;
static PyObject *__pyx_n_s_integrand_P_Counterterm_py;
static PyObject *__pyx_n_s_integrand_P_Damping_1loop_py;
static PyObject *__pyx_n_s_integrand_P_Damping_Counterterm;
static PyObject *__pyx_n_s_integrand_P_Damping_Tree_py;
static PyObject *__pyx_n_s_integrand_P_Kernel_1loop_13_py;
static PyObject *__pyx_n_s_integrand_P_Kernel_1loop_22_norm;
static PyObject *__pyx_n_s_integrand_P_Kernel_1loop_22_py;
static PyObject *__pyx_n_s_integrand_P_Kernel_Counterterm_p;
static PyObject *__pyx_n_s_integrand_P_Kernel_Tree_py;
static PyObject *__pyx_n_s_integrand_P_LocalMean_py;
static PyObject *__pyx_n_s_integrand_P_NonLinearFitting_Win;
static PyObject *__pyx_n_s_integrand_P_NonLinearFitting_py;
static PyObject *__pyx_n_s_integrand_P_SigmaB_py;
static PyObject *__pyx_n_s_integrand_P_Tree_BAO_Fitting_py;
static PyObject *__pyx_n_s_integrand_P_Tree_BAO_b1_b1_py;
static PyObject *__pyx_n_s_integrand_P_Tree_BAO_b1_f_py;
static PyObject *__pyx_n_s_integrand_P_Tree_BAO_f_f_py;
static PyObject *__pyx_n_s_integrand_P_Tree_BAO_py;
static PyObject *__pyx_n_s_integrand_P_Tree_NoWiggle_py;
static PyObject *__pyx_n_s_integrand_P_Tree_py;
static PyObject *__pyx_n_s_integrand_P_sigma2_para_Reconstr;
static PyObject *__pyx_n_s_integrand_P_sigma2_perp_Reconstr;
static PyObject *__pyx_n_s_integrand_SS_py;
static PyObject *__pyx_n_s_integrand_SSpow_py;
static PyObject *__pyx_n_s_integrand_cov_BB_G_diag_py;
static PyObject *__pyx_n_s_integrand_cov_BB_G_py;
static PyObject *__pyx_n_s_integrand_cov_PP_G_NL_py;
static PyObject *__pyx_n_s_integrand_cov_PP_G_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_10;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_11;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_2;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_3;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_4;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_5;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_6;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_7;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_8;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_9;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_2;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_3;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_4;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_5;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_LocalMean_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_b1_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_b2_b2_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_b2_bK2_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_b2_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_b3_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_bDK_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_bK2_bK2_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_bK2_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_bK3_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_bO_py;
static PyObject *__pyx_n_s_integrand_cov_PP_NG_py;
static PyObject *__pyx_n_s_k;
static PyObject *__pyx_n_s_k1;
static PyObject *__pyx_n_s_k1_dash;
static PyObject *__pyx_n_s_kbin;
static PyObject *__pyx_n_s_kbin_in;
static PyObject *__pyx_n_s_kmag;
static PyObject *__pyx_n_s_kmag1;
static PyObject *__pyx_n_s_kmax;
static PyObject *__pyx_n_s_kmin;
static PyObject *__pyx_n_s_knl;
static PyObject *__pyx_n_s_ks;
static PyObject *__pyx_n_s_l;
static PyObject *__pyx_n_s_m;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_n_s;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_ncomp;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_n_s_nmean;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_num_epsilon;
static PyObject *__pyx_n_s_num_k_bin;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_omega0;
static PyObject *__pyx_n_s_omegab;
static PyObject *__pyx_n_s_parameters;
static PyObject *__pyx_n_s_pk;
static PyObject *__pyx_n_s_pk2xi_py;
static PyObject *__pyx_n_s_pk_0_in;
static PyObject *__pyx_n_s_pk_2_in;
static PyObject *__pyx_n_s_pk_in;
static PyObject *__pyx_n_s_pk_num_in;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_rbao;
static PyObject *__pyx_n_s_readInputNoWigglePowerSpectrum_p;
static PyObject *__pyx_n_s_readInputPowerSpectrum_py;
static PyObject *__pyx_n_s_readInputPrimordialPowerSpectrum;
static PyObject *__pyx_n_s_readNonLinearPowerSpectrum_py;
static PyObject *__pyx_n_s_setWigner3j_py;
static PyObject *__pyx_n_s_set_kmax_py;
static PyObject *__pyx_n_s_set_kmin_py;
static PyObject *__pyx_n_s_sigma2_b;
static PyObject *__pyx_n_s_sigma2_para;
static PyObject *__pyx_n_s_sigma2_perp;
static PyObject *__pyx_n_s_sigma8;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_volume;
static PyObject *__pyx_n_s_xi;
static PyObject *__pyx_n_s_xi2pk_py;
static PyObject *__pyx_n_s_xx_in;
static PyObject *__pyx_pf_8hitomipy_pk2xi_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_N, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi); /* proto */
static PyObject *__pyx_pf_8hitomipy_2xi2pk_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_N, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk); /* proto */
static PyObject *__pyx_pf_8hitomipy_4hankel_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_l, int __pyx_v_m, int __pyx_v_N, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi); /* proto */
static PyObject *__pyx_pf_8hitomipy_6setWigner3j_py(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_8hitomipy_8f_pk_no_wiggle_integrand_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmag, double __pyx_v_h, double __pyx_v_omegab, double __pyx_v_omega0, double __pyx_v_Tcmb, double __pyx_v_n_s); /* proto */
static PyObject *__pyx_pf_8hitomipy_10calcSigma_dd_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8); /* proto */
static PyObject *__pyx_pf_8hitomipy_12readInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in); /* proto */
static PyObject *__pyx_pf_8hitomipy_14readInputNoWigglePowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in); /* proto */
static PyObject *__pyx_pf_8hitomipy_16readInputPrimordialPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in); /* proto */
static PyObject *__pyx_pf_8hitomipy_18readNonLinearPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_0_in, PyArrayObject *__pyx_v_pk_2_in, int __pyx_v_pk_num_in); /* proto */
static PyObject *__pyx_pf_8hitomipy_20initializeInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_8hitomipy_22finalizeInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_8hitomipy_24calcNormalizationUsingSigma8_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8); /* proto */
static PyObject *__pyx_pf_8hitomipy_26calcNormalizationNoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8, double __pyx_v_h, double __pyx_v_omegab, double __pyx_v_omega0, double __pyx_v_Tcmb, double __pyx_v_n_s); /* proto */
static PyObject *__pyx_pf_8hitomipy_28set_kmin_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmin); /* proto */
static PyObject *__pyx_pf_8hitomipy_30set_kmax_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmax); /* proto */
static PyObject *__pyx_pf_8hitomipy_32Sig2_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_rbao, double __pyx_v_ks); /* proto */
static PyObject *__pyx_pf_8hitomipy_34dSig2_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_rbao, double __pyx_v_ks); /* proto */
static PyObject *__pyx_pf_8hitomipy_36integrand_P_LocalMean_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_38integrand_P_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1); /* proto */
static PyObject *__pyx_pf_8hitomipy_40integrand_P_Damping_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_42integrand_P_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c0, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl); /* proto */
static PyObject *__pyx_pf_8hitomipy_44integrand_P_Damping_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c0, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_46integrand_P_1loop_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_bGamma3); /* proto */
static PyObject *__pyx_pf_8hitomipy_48integrand_P_Damping_1loop_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_bGamma3, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_50integrand_P_Kernel_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_52integrand_P_Kernel_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_54integrand_P_Kernel_1loop_22_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_56integrand_P_Kernel_1loop_22_norm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_58integrand_P_Kernel_1loop_13_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_60integrand_P_Tree_NoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1); /* proto */
static PyObject *__pyx_pf_8hitomipy_62integrand_P_Tree_BAO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_64integrand_P_Tree_BAO_Fitting_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_A20, double __pyx_v_A11, double __pyx_v_A02, double __pyx_v_A30, double __pyx_v_A21, double __pyx_v_A12, double __pyx_v_A03, double __pyx_v_A40, double __pyx_v_A31, double __pyx_v_A22, double __pyx_v_A13, double __pyx_v_A04); /* proto */
static PyObject *__pyx_pf_8hitomipy_66integrand_P_NonLinearFitting_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_68integrand_P_NonLinearFitting_Window_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_70integrand_P_SigmaB_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_72integrand_P_sigma2_perp_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b1_fid, double __pyx_v_R); /* proto */
static PyObject *__pyx_pf_8hitomipy_74integrand_P_sigma2_para_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b1_fid, double __pyx_v_R); /* proto */
static PyObject *__pyx_pf_8hitomipy_76integrand_P_Tree_BAO_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_78integrand_P_Tree_BAO_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_80integrand_P_Tree_BAO_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_82integrand_cov_PP_G_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_84integrand_cov_PP_NG_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_86integrand_cov_PP_G_NL_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_88integrand_cov_PP_NG_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_90integrand_cov_PP_NG_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_92integrand_cov_PP_NG_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_94integrand_cov_PP_NG_b2_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_96integrand_cov_PP_NG_b2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_98integrand_cov_PP_NG_bK2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_100integrand_cov_PP_NG_b3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_102integrand_cov_PP_NG_bK3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_104integrand_cov_PP_NG_bDK_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_106integrand_cov_PP_NG_bO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_108integrand_cov_PP_NG_BeatCoupling_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_110integrand_cov_PP_NG_BeatCoupling_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_112integrand_cov_PP_NG_BeatCoupling_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_114integrand_cov_PP_NG_BeatCoupling_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_116integrand_cov_PP_NG_BeatCoupling_b2_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_118integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_120integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_122integrand_cov_PP_NG_BeatCoupling_b3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_124integrand_cov_PP_NG_BeatCoupling_bK3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_126integrand_cov_PP_NG_BeatCoupling_bDK_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_128integrand_cov_PP_NG_BeatCoupling_bO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_130integrand_cov_PP_NG_LocalMean_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_132integrand_cov_PP_NG_LocalMean_NL_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_134integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume, double __pyx_v_sigma2_b); /* proto */
static PyObject *__pyx_pf_8hitomipy_136integrand_cov_PP_NG_LocalMean_NL_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_138integrand_cov_PP_NG_LocalMean_NL_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_140integrand_cov_PP_NG_LocalMean_NL_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_142integrand_B_NonGaussian_Local_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1); /* proto */
static PyObject *__pyx_pf_8hitomipy_144integrand_B_NonGaussian_Equilateral_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1); /* proto */
static PyObject *__pyx_pf_8hitomipy_146integrand_B_NonGaussian_Orthogonal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1); /* proto */
static PyObject *__pyx_pf_8hitomipy_148integrand_B_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2); /* proto */
static PyObject *__pyx_pf_8hitomipy_150integrand_B_Tree_FoG_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl); /* proto */
static PyObject *__pyx_pf_8hitomipy_152integrand_B_Tree_DampIvanov_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_rbao, double __pyx_v_ks); /* proto */
static PyObject *__pyx_pf_8hitomipy_154integrand_B_FoG_Damping_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, double __pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_156integrand_B_FoG_Damping_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, double __pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_158integrand_B_SN_FoG_Damping_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Pshot, double __pyx_v_Bshot, double __pyx_v_Sigma2, double __pyx_v_dSigma2); /* proto */
static PyObject *__pyx_pf_8hitomipy_160integrand_B_Tree_NoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2); /* proto */
static PyObject *__pyx_pf_8hitomipy_162integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8); /* proto */
static PyObject *__pyx_pf_8hitomipy_164integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8); /* proto */
static PyObject *__pyx_pf_8hitomipy_166integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8); /* proto */
static PyObject *__pyx_pf_8hitomipy_168integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp); /* proto */
static PyObject *__pyx_pf_8hitomipy_170integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp); /* proto */
static PyObject *__pyx_pf_8hitomipy_172integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp); /* proto */
static PyObject *__pyx_pf_8hitomipy_174integrand_B_Tree_BAO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_176integrand_B_Tree_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_b1_fid, double __pyx_v_R); /* proto */
static PyObject *__pyx_pf_8hitomipy_178integrand_B_Tree_NoWiggle_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_b1_fid, double __pyx_v_R); /* proto */
static PyObject *__pyx_pf_8hitomipy_180integrand_B_Tree_BAO_Template_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_182integrand_B_Tree_BAO_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_184integrand_B_Tree_BAO_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_186integrand_B_Tree_BAO_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_188integrand_B_Tree_BAO_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_190integrand_B_Tree_BAO_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_192integrand_B_Tree_BAO_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_194integrand_B_Tree_BAO_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_196integrand_B_Tree_BAO_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_198integrand_B_Tree_BAO_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_200integrand_B_Tree_BAO_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_202integrand_B_Tree_BAO_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_204integrand_B_Tree_BAO_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_206integrand_B_Tree_BAO_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_208integrand_B_Tree_BAO_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para); /* proto */
static PyObject *__pyx_pf_8hitomipy_210integrand_B_Tree_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_212integrand_B_Tree_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_214integrand_B_Tree_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_216integrand_B_Tree_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_218integrand_B_Tree_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_220integrand_B_Tree_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_222integrand_B_Tree_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_224integrand_B_Tree_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_226integrand_B_Tree_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_228integrand_B_Tree_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_230integrand_B_Tree_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_232integrand_B_Tree_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_234integrand_B_Tree_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_236integrand_B_Tree_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_238integrand_B_Tree_NoWiggle_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_240integrand_B_Tree_NoWiggle_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_242integrand_B_Tree_NoWiggle_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_244integrand_B_Tree_NoWiggle_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_246integrand_B_Tree_NoWiggle_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_248integrand_B_Tree_NoWiggle_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_250integrand_B_Tree_NoWiggle_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_252integrand_B_Tree_NoWiggle_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_254integrand_B_Tree_NoWiggle_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_256integrand_B_Tree_NoWiggle_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_258integrand_B_Tree_NoWiggle_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_260integrand_B_Tree_NoWiggle_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_262integrand_B_Tree_NoWiggle_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_264integrand_B_Tree_NoWiggle_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel); /* proto */
static PyObject *__pyx_pf_8hitomipy_266integrand_SS_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, int __pyx_v_n, int __pyx_v_m, PyArrayObject *__pyx_v_epsilon, int __pyx_v_num_epsilon); /* proto */
static PyObject *__pyx_pf_8hitomipy_268integrand_SSpow_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, int __pyx_v_ELL, int __pyx_v_ELL_dash, int __pyx_v_n, PyArrayObject *__pyx_v_epsilon, int __pyx_v_num_epsilon); /* proto */
static PyObject *__pyx_pf_8hitomipy_270integrand_cov_BB_G_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, double __pyx_v_k1, double __pyx_v_k1_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_272integrand_cov_BB_G_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, double __pyx_v_k1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume); /* proto */
static PyObject *__pyx_pf_8hitomipy_274integrand_B_Kernel_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_276integrand_B_Kernel_SN_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_278integrand_B_Kernel_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_280integrand_B_Kernel_SN_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_8hitomipy_282integrand_B_Kernel_PNG_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters); /* proto */
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__6;
static PyObject *__pyx_codeobj__8;
static PyObject *__pyx_codeobj__9;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__110;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__114;
static PyObject *__pyx_tuple__116;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__120;
static PyObject *__pyx_tuple__122;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__126;
static PyObject *__pyx_tuple__128;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__132;
static PyObject *__pyx_tuple__134;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__138;
static PyObject *__pyx_tuple__140;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__144;
static PyObject *__pyx_tuple__146;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__150;
static PyObject *__pyx_tuple__152;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__156;
static PyObject *__pyx_tuple__158;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__162;
static PyObject *__pyx_tuple__164;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__168;
static PyObject *__pyx_tuple__170;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__174;
static PyObject *__pyx_tuple__176;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__180;
static PyObject *__pyx_tuple__182;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__186;
static PyObject *__pyx_tuple__188;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_tuple__192;
static PyObject *__pyx_tuple__194;
static PyObject *__pyx_tuple__196;
static PyObject *__pyx_tuple__198;
static PyObject *__pyx_tuple__200;
static PyObject *__pyx_tuple__202;
static PyObject *__pyx_tuple__204;
static PyObject *__pyx_tuple__206;
static PyObject *__pyx_tuple__208;
static PyObject *__pyx_tuple__210;
static PyObject *__pyx_tuple__212;
static PyObject *__pyx_tuple__214;
static PyObject *__pyx_tuple__216;
static PyObject *__pyx_tuple__218;
static PyObject *__pyx_tuple__220;
static PyObject *__pyx_tuple__222;
static PyObject *__pyx_tuple__224;
static PyObject *__pyx_tuple__226;
static PyObject *__pyx_tuple__228;
static PyObject *__pyx_tuple__230;
static PyObject *__pyx_tuple__232;
static PyObject *__pyx_tuple__234;
static PyObject *__pyx_tuple__236;
static PyObject *__pyx_tuple__238;
static PyObject *__pyx_tuple__240;
static PyObject *__pyx_tuple__242;
static PyObject *__pyx_tuple__244;
static PyObject *__pyx_tuple__246;
static PyObject *__pyx_tuple__248;
static PyObject *__pyx_tuple__250;
static PyObject *__pyx_tuple__252;
static PyObject *__pyx_tuple__254;
static PyObject *__pyx_tuple__256;
static PyObject *__pyx_tuple__258;
static PyObject *__pyx_tuple__260;
static PyObject *__pyx_tuple__262;
static PyObject *__pyx_tuple__264;
static PyObject *__pyx_tuple__266;
static PyObject *__pyx_tuple__268;
static PyObject *__pyx_tuple__270;
static PyObject *__pyx_tuple__272;
static PyObject *__pyx_tuple__274;
static PyObject *__pyx_tuple__276;
static PyObject *__pyx_tuple__278;
static PyObject *__pyx_tuple__280;
static PyObject *__pyx_tuple__282;
static PyObject *__pyx_codeobj__11;
static PyObject *__pyx_codeobj__13;
static PyObject *__pyx_codeobj__15;
static PyObject *__pyx_codeobj__17;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__21;
static PyObject *__pyx_codeobj__22;
static PyObject *__pyx_codeobj__23;
static PyObject *__pyx_codeobj__25;
static PyObject *__pyx_codeobj__27;
static PyObject *__pyx_codeobj__29;
static PyObject *__pyx_codeobj__31;
static PyObject *__pyx_codeobj__33;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
static PyObject *__pyx_codeobj__67;
static PyObject *__pyx_codeobj__69;
static PyObject *__pyx_codeobj__71;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__75;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__79;
static PyObject *__pyx_codeobj__81;
static PyObject *__pyx_codeobj__83;
static PyObject *__pyx_codeobj__85;
static PyObject *__pyx_codeobj__87;
static PyObject *__pyx_codeobj__89;
static PyObject *__pyx_codeobj__91;
static PyObject *__pyx_codeobj__93;
static PyObject *__pyx_codeobj__95;
static PyObject *__pyx_codeobj__97;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__103;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__107;
static PyObject *__pyx_codeobj__109;
static PyObject *__pyx_codeobj__111;
static PyObject *__pyx_codeobj__113;
static PyObject *__pyx_codeobj__115;
static PyObject *__pyx_codeobj__117;
static PyObject *__pyx_codeobj__119;
static PyObject *__pyx_codeobj__121;
static PyObject *__pyx_codeobj__123;
static PyObject *__pyx_codeobj__125;
static PyObject *__pyx_codeobj__127;
static PyObject *__pyx_codeobj__129;
static PyObject *__pyx_codeobj__131;
static PyObject *__pyx_codeobj__133;
static PyObject *__pyx_codeobj__135;
static PyObject *__pyx_codeobj__137;
static PyObject *__pyx_codeobj__139;
static PyObject *__pyx_codeobj__141;
static PyObject *__pyx_codeobj__143;
static PyObject *__pyx_codeobj__145;
static PyObject *__pyx_codeobj__147;
static PyObject *__pyx_codeobj__149;
static PyObject *__pyx_codeobj__151;
static PyObject *__pyx_codeobj__153;
static PyObject *__pyx_codeobj__155;
static PyObject *__pyx_codeobj__157;
static PyObject *__pyx_codeobj__159;
static PyObject *__pyx_codeobj__161;
static PyObject *__pyx_codeobj__163;
static PyObject *__pyx_codeobj__165;
static PyObject *__pyx_codeobj__167;
static PyObject *__pyx_codeobj__169;
static PyObject *__pyx_codeobj__171;
static PyObject *__pyx_codeobj__173;
static PyObject *__pyx_codeobj__175;
static PyObject *__pyx_codeobj__177;
static PyObject *__pyx_codeobj__179;
static PyObject *__pyx_codeobj__181;
static PyObject *__pyx_codeobj__183;
static PyObject *__pyx_codeobj__185;
static PyObject *__pyx_codeobj__187;
static PyObject *__pyx_codeobj__189;
static PyObject *__pyx_codeobj__191;
static PyObject *__pyx_codeobj__193;
static PyObject *__pyx_codeobj__195;
static PyObject *__pyx_codeobj__197;
static PyObject *__pyx_codeobj__199;
static PyObject *__pyx_codeobj__201;
static PyObject *__pyx_codeobj__203;
static PyObject *__pyx_codeobj__205;
static PyObject *__pyx_codeobj__207;
static PyObject *__pyx_codeobj__209;
static PyObject *__pyx_codeobj__211;
static PyObject *__pyx_codeobj__213;
static PyObject *__pyx_codeobj__215;
static PyObject *__pyx_codeobj__217;
static PyObject *__pyx_codeobj__219;
static PyObject *__pyx_codeobj__221;
static PyObject *__pyx_codeobj__223;
static PyObject *__pyx_codeobj__225;
static PyObject *__pyx_codeobj__227;
static PyObject *__pyx_codeobj__229;
static PyObject *__pyx_codeobj__231;
static PyObject *__pyx_codeobj__233;
static PyObject *__pyx_codeobj__235;
static PyObject *__pyx_codeobj__237;
static PyObject *__pyx_codeobj__239;
static PyObject *__pyx_codeobj__241;
static PyObject *__pyx_codeobj__243;
static PyObject *__pyx_codeobj__245;
static PyObject *__pyx_codeobj__247;
static PyObject *__pyx_codeobj__249;
static PyObject *__pyx_codeobj__251;
static PyObject *__pyx_codeobj__253;
static PyObject *__pyx_codeobj__255;
static PyObject *__pyx_codeobj__257;
static PyObject *__pyx_codeobj__259;
static PyObject *__pyx_codeobj__261;
static PyObject *__pyx_codeobj__263;
static PyObject *__pyx_codeobj__265;
static PyObject *__pyx_codeobj__267;
static PyObject *__pyx_codeobj__269;
static PyObject *__pyx_codeobj__271;
static PyObject *__pyx_codeobj__273;
static PyObject *__pyx_codeobj__275;
static PyObject *__pyx_codeobj__277;
static PyObject *__pyx_codeobj__279;
static PyObject *__pyx_codeobj__281;
static PyObject *__pyx_codeobj__283;
/* Late includes */

/* "hitomi.pyx":13
 *     int fftlog_ComputeXiLM(int l, int m, int N, double * k, double * pk, double * r, double * xi)
 * 
 * def pk2xi_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_1pk2xi_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_1pk2xi_py = {"pk2xi_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_1pk2xi_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_1pk2xi_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_N;
  PyArrayObject *__pyx_v_k = 0;
  PyArrayObject *__pyx_v_pk = 0;
  PyArrayObject *__pyx_v_r = 0;
  PyArrayObject *__pyx_v_xi = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pk2xi_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_N,&__pyx_n_s_k,&__pyx_n_s_pk,&__pyx_n_s_r,&__pyx_n_s_xi,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_N)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pk2xi_py", 1, 5, 5, 1); __PYX_ERR(0, 13, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pk2xi_py", 1, 5, 5, 2); __PYX_ERR(0, 13, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pk2xi_py", 1, 5, 5, 3); __PYX_ERR(0, 13, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("pk2xi_py", 1, 5, 5, 4); __PYX_ERR(0, 13, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "pk2xi_py") < 0)) __PYX_ERR(0, 13, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_N = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_N == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 14, __pyx_L3_error)
    __pyx_v_k = ((PyArrayObject *)values[1]);
    __pyx_v_pk = ((PyArrayObject *)values[2]);
    __pyx_v_r = ((PyArrayObject *)values[3]);
    __pyx_v_xi = ((PyArrayObject *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pk2xi_py", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 13, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.pk2xi_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_k), __pyx_ptype_5numpy_ndarray, 0, "k", 0))) __PYX_ERR(0, 15, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk), __pyx_ptype_5numpy_ndarray, 0, "pk", 0))) __PYX_ERR(0, 16, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r), __pyx_ptype_5numpy_ndarray, 0, "r", 0))) __PYX_ERR(0, 17, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xi), __pyx_ptype_5numpy_ndarray, 0, "xi", 0))) __PYX_ERR(0, 18, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_pk2xi_py(__pyx_self, __pyx_v_N, __pyx_v_k, __pyx_v_pk, __pyx_v_r, __pyx_v_xi);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_pk2xi_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_N, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_k;
  __Pyx_Buffer __pyx_pybuffer_k;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk;
  __Pyx_Buffer __pyx_pybuffer_pk;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r;
  __Pyx_Buffer __pyx_pybuffer_r;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xi;
  __Pyx_Buffer __pyx_pybuffer_xi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pk2xi_py", 0);
  __pyx_pybuffer_k.pybuffer.buf = NULL;
  __pyx_pybuffer_k.refcount = 0;
  __pyx_pybuffernd_k.data = NULL;
  __pyx_pybuffernd_k.rcbuffer = &__pyx_pybuffer_k;
  __pyx_pybuffer_pk.pybuffer.buf = NULL;
  __pyx_pybuffer_pk.refcount = 0;
  __pyx_pybuffernd_pk.data = NULL;
  __pyx_pybuffernd_pk.rcbuffer = &__pyx_pybuffer_pk;
  __pyx_pybuffer_r.pybuffer.buf = NULL;
  __pyx_pybuffer_r.refcount = 0;
  __pyx_pybuffernd_r.data = NULL;
  __pyx_pybuffernd_r.rcbuffer = &__pyx_pybuffer_r;
  __pyx_pybuffer_xi.pybuffer.buf = NULL;
  __pyx_pybuffer_xi.refcount = 0;
  __pyx_pybuffernd_xi.data = NULL;
  __pyx_pybuffernd_xi.rcbuffer = &__pyx_pybuffer_xi;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_k.rcbuffer->pybuffer, (PyObject*)__pyx_v_k, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 13, __pyx_L1_error)
  }
  __pyx_pybuffernd_k.diminfo[0].strides = __pyx_pybuffernd_k.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_k.diminfo[0].shape = __pyx_pybuffernd_k.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 13, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk.diminfo[0].strides = __pyx_pybuffernd_pk.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk.diminfo[0].shape = __pyx_pybuffernd_pk.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r.rcbuffer->pybuffer, (PyObject*)__pyx_v_r, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 13, __pyx_L1_error)
  }
  __pyx_pybuffernd_r.diminfo[0].strides = __pyx_pybuffernd_r.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r.diminfo[0].shape = __pyx_pybuffernd_r.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xi.rcbuffer->pybuffer, (PyObject*)__pyx_v_xi, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 13, __pyx_L1_error)
  }
  __pyx_pybuffernd_xi.diminfo[0].strides = __pyx_pybuffernd_xi.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xi.diminfo[0].shape = __pyx_pybuffernd_xi.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":20
 *         np.ndarray[double, ndim=1, mode="c"] xi not None
 *         ):
 *     return pk2xi(N, & k[0], & pk[0], & r[0], & xi[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_k.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_k.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 20, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 20, __pyx_L1_error)
  }
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_r.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_r.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 20, __pyx_L1_error)
  }
  __pyx_t_5 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_xi.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_xi.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 20, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyInt_From_int(pk2xi(__pyx_v_N, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_k.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_k.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_r.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_r.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xi.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_xi.diminfo[0].strides))))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":13
 *     int fftlog_ComputeXiLM(int l, int m, int N, double * k, double * pk, double * r, double * xi)
 * 
 * def pk2xi_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.pk2xi_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":23
 * 
 * 
 * def xi2pk_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] r not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_3xi2pk_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_3xi2pk_py = {"xi2pk_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_3xi2pk_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_3xi2pk_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_N;
  PyArrayObject *__pyx_v_r = 0;
  PyArrayObject *__pyx_v_xi = 0;
  PyArrayObject *__pyx_v_k = 0;
  PyArrayObject *__pyx_v_pk = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("xi2pk_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_N,&__pyx_n_s_r,&__pyx_n_s_xi,&__pyx_n_s_k,&__pyx_n_s_pk,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_N)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xi2pk_py", 1, 5, 5, 1); __PYX_ERR(0, 23, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xi2pk_py", 1, 5, 5, 2); __PYX_ERR(0, 23, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xi2pk_py", 1, 5, 5, 3); __PYX_ERR(0, 23, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("xi2pk_py", 1, 5, 5, 4); __PYX_ERR(0, 23, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "xi2pk_py") < 0)) __PYX_ERR(0, 23, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
    }
    __pyx_v_N = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_N == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 24, __pyx_L3_error)
    __pyx_v_r = ((PyArrayObject *)values[1]);
    __pyx_v_xi = ((PyArrayObject *)values[2]);
    __pyx_v_k = ((PyArrayObject *)values[3]);
    __pyx_v_pk = ((PyArrayObject *)values[4]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("xi2pk_py", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 23, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.xi2pk_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r), __pyx_ptype_5numpy_ndarray, 0, "r", 0))) __PYX_ERR(0, 25, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xi), __pyx_ptype_5numpy_ndarray, 0, "xi", 0))) __PYX_ERR(0, 26, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_k), __pyx_ptype_5numpy_ndarray, 0, "k", 0))) __PYX_ERR(0, 27, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk), __pyx_ptype_5numpy_ndarray, 0, "pk", 0))) __PYX_ERR(0, 28, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_2xi2pk_py(__pyx_self, __pyx_v_N, __pyx_v_r, __pyx_v_xi, __pyx_v_k, __pyx_v_pk);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_2xi2pk_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_N, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_k;
  __Pyx_Buffer __pyx_pybuffer_k;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk;
  __Pyx_Buffer __pyx_pybuffer_pk;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r;
  __Pyx_Buffer __pyx_pybuffer_r;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xi;
  __Pyx_Buffer __pyx_pybuffer_xi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("xi2pk_py", 0);
  __pyx_pybuffer_r.pybuffer.buf = NULL;
  __pyx_pybuffer_r.refcount = 0;
  __pyx_pybuffernd_r.data = NULL;
  __pyx_pybuffernd_r.rcbuffer = &__pyx_pybuffer_r;
  __pyx_pybuffer_xi.pybuffer.buf = NULL;
  __pyx_pybuffer_xi.refcount = 0;
  __pyx_pybuffernd_xi.data = NULL;
  __pyx_pybuffernd_xi.rcbuffer = &__pyx_pybuffer_xi;
  __pyx_pybuffer_k.pybuffer.buf = NULL;
  __pyx_pybuffer_k.refcount = 0;
  __pyx_pybuffernd_k.data = NULL;
  __pyx_pybuffernd_k.rcbuffer = &__pyx_pybuffer_k;
  __pyx_pybuffer_pk.pybuffer.buf = NULL;
  __pyx_pybuffer_pk.refcount = 0;
  __pyx_pybuffernd_pk.data = NULL;
  __pyx_pybuffernd_pk.rcbuffer = &__pyx_pybuffer_pk;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r.rcbuffer->pybuffer, (PyObject*)__pyx_v_r, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 23, __pyx_L1_error)
  }
  __pyx_pybuffernd_r.diminfo[0].strides = __pyx_pybuffernd_r.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r.diminfo[0].shape = __pyx_pybuffernd_r.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xi.rcbuffer->pybuffer, (PyObject*)__pyx_v_xi, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 23, __pyx_L1_error)
  }
  __pyx_pybuffernd_xi.diminfo[0].strides = __pyx_pybuffernd_xi.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xi.diminfo[0].shape = __pyx_pybuffernd_xi.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_k.rcbuffer->pybuffer, (PyObject*)__pyx_v_k, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 23, __pyx_L1_error)
  }
  __pyx_pybuffernd_k.diminfo[0].strides = __pyx_pybuffernd_k.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_k.diminfo[0].shape = __pyx_pybuffernd_k.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 23, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk.diminfo[0].strides = __pyx_pybuffernd_pk.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk.diminfo[0].shape = __pyx_pybuffernd_pk.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":30
 *         np.ndarray[double, ndim=1, mode="c"] pk not None
 *         ):
 *     return xi2pk(N, & r[0], & xi[0], & k[0], & pk[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_r.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_r.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 30, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_xi.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_xi.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 30, __pyx_L1_error)
  }
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_k.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_k.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 30, __pyx_L1_error)
  }
  __pyx_t_5 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_pk.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_pk.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 30, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyInt_From_int(xi2pk(__pyx_v_N, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_r.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_r.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xi.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_xi.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_k.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_k.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_pk.diminfo[0].strides))))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":23
 * 
 * 
 * def xi2pk_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] r not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.xi2pk_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":33
 * 
 * 
 * def hankel_py(             # <<<<<<<<<<<<<<
 *         int l, int m, int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_5hankel_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_5hankel_py = {"hankel_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_5hankel_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_5hankel_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_l;
  int __pyx_v_m;
  int __pyx_v_N;
  PyArrayObject *__pyx_v_k = 0;
  PyArrayObject *__pyx_v_pk = 0;
  PyArrayObject *__pyx_v_r = 0;
  PyArrayObject *__pyx_v_xi = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("hankel_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_l,&__pyx_n_s_m,&__pyx_n_s_N,&__pyx_n_s_k,&__pyx_n_s_pk,&__pyx_n_s_r,&__pyx_n_s_xi,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_l)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 1); __PYX_ERR(0, 33, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_N)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 2); __PYX_ERR(0, 33, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 3); __PYX_ERR(0, 33, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 4); __PYX_ERR(0, 33, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_r)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 5); __PYX_ERR(0, 33, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, 6); __PYX_ERR(0, 33, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "hankel_py") < 0)) __PYX_ERR(0, 33, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 7) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
    }
    __pyx_v_l = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_l == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 34, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 34, __pyx_L3_error)
    __pyx_v_N = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_N == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 34, __pyx_L3_error)
    __pyx_v_k = ((PyArrayObject *)values[3]);
    __pyx_v_pk = ((PyArrayObject *)values[4]);
    __pyx_v_r = ((PyArrayObject *)values[5]);
    __pyx_v_xi = ((PyArrayObject *)values[6]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("hankel_py", 1, 7, 7, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 33, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.hankel_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_k), __pyx_ptype_5numpy_ndarray, 0, "k", 0))) __PYX_ERR(0, 35, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk), __pyx_ptype_5numpy_ndarray, 0, "pk", 0))) __PYX_ERR(0, 36, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_r), __pyx_ptype_5numpy_ndarray, 0, "r", 0))) __PYX_ERR(0, 37, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xi), __pyx_ptype_5numpy_ndarray, 0, "xi", 0))) __PYX_ERR(0, 38, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_4hankel_py(__pyx_self, __pyx_v_l, __pyx_v_m, __pyx_v_N, __pyx_v_k, __pyx_v_pk, __pyx_v_r, __pyx_v_xi);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_4hankel_py(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_l, int __pyx_v_m, int __pyx_v_N, PyArrayObject *__pyx_v_k, PyArrayObject *__pyx_v_pk, PyArrayObject *__pyx_v_r, PyArrayObject *__pyx_v_xi) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_k;
  __Pyx_Buffer __pyx_pybuffer_k;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk;
  __Pyx_Buffer __pyx_pybuffer_pk;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_r;
  __Pyx_Buffer __pyx_pybuffer_r;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xi;
  __Pyx_Buffer __pyx_pybuffer_xi;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("hankel_py", 0);
  __pyx_pybuffer_k.pybuffer.buf = NULL;
  __pyx_pybuffer_k.refcount = 0;
  __pyx_pybuffernd_k.data = NULL;
  __pyx_pybuffernd_k.rcbuffer = &__pyx_pybuffer_k;
  __pyx_pybuffer_pk.pybuffer.buf = NULL;
  __pyx_pybuffer_pk.refcount = 0;
  __pyx_pybuffernd_pk.data = NULL;
  __pyx_pybuffernd_pk.rcbuffer = &__pyx_pybuffer_pk;
  __pyx_pybuffer_r.pybuffer.buf = NULL;
  __pyx_pybuffer_r.refcount = 0;
  __pyx_pybuffernd_r.data = NULL;
  __pyx_pybuffernd_r.rcbuffer = &__pyx_pybuffer_r;
  __pyx_pybuffer_xi.pybuffer.buf = NULL;
  __pyx_pybuffer_xi.refcount = 0;
  __pyx_pybuffernd_xi.data = NULL;
  __pyx_pybuffernd_xi.rcbuffer = &__pyx_pybuffer_xi;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_k.rcbuffer->pybuffer, (PyObject*)__pyx_v_k, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 33, __pyx_L1_error)
  }
  __pyx_pybuffernd_k.diminfo[0].strides = __pyx_pybuffernd_k.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_k.diminfo[0].shape = __pyx_pybuffernd_k.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 33, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk.diminfo[0].strides = __pyx_pybuffernd_pk.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk.diminfo[0].shape = __pyx_pybuffernd_pk.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_r.rcbuffer->pybuffer, (PyObject*)__pyx_v_r, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 33, __pyx_L1_error)
  }
  __pyx_pybuffernd_r.diminfo[0].strides = __pyx_pybuffernd_r.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_r.diminfo[0].shape = __pyx_pybuffernd_r.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xi.rcbuffer->pybuffer, (PyObject*)__pyx_v_xi, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 33, __pyx_L1_error)
  }
  __pyx_pybuffernd_xi.diminfo[0].strides = __pyx_pybuffernd_xi.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xi.diminfo[0].shape = __pyx_pybuffernd_xi.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":40
 *         np.ndarray[double, ndim=1, mode="c"] xi not None
 *         ):
 *     return fftlog_ComputeXiLM(l, m, N, & k[0], & pk[0], & r[0], & xi[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_k.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_k.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_r.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_r.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  __pyx_t_5 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_xi.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_xi.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 40, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyInt_From_int(fftlog_ComputeXiLM(__pyx_v_l, __pyx_v_m, __pyx_v_N, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_k.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_k.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_r.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_r.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xi.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_xi.diminfo[0].strides))))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":33
 * 
 * 
 * def hankel_py(             # <<<<<<<<<<<<<<
 *         int l, int m, int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.hankel_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_k.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_r.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xi.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":47
 *     int setWigner3j()
 * 
 * def setWigner3j_py():             # <<<<<<<<<<<<<<
 *     return setWigner3j()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_7setWigner3j_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_7setWigner3j_py = {"setWigner3j_py", (PyCFunction)__pyx_pw_8hitomipy_7setWigner3j_py, METH_NOARGS, 0};
static PyObject *__pyx_pw_8hitomipy_7setWigner3j_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWigner3j_py (wrapper)", 0);
  __pyx_r = __pyx_pf_8hitomipy_6setWigner3j_py(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_6setWigner3j_py(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setWigner3j_py", 0);

  /* "hitomi.pyx":48
 * 
 * def setWigner3j_py():
 *     return setWigner3j()             # <<<<<<<<<<<<<<
 * 
 * # distutils: sources=["cpp/pk_lin.hpp"]
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(setWigner3j()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":47
 *     int setWigner3j()
 * 
 * def setWigner3j_py():             # <<<<<<<<<<<<<<
 *     return setWigner3j()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.setWigner3j_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":68
 * 
 * 
 * def f_pk_no_wiggle_integrand_py(double kmag, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_9f_pk_no_wiggle_integrand_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_9f_pk_no_wiggle_integrand_py = {"f_pk_no_wiggle_integrand_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_9f_pk_no_wiggle_integrand_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_9f_pk_no_wiggle_integrand_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_kmag;
  double __pyx_v_h;
  double __pyx_v_omegab;
  double __pyx_v_omega0;
  double __pyx_v_Tcmb;
  double __pyx_v_n_s;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("f_pk_no_wiggle_integrand_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kmag,&__pyx_n_s_h,&__pyx_n_s_omegab,&__pyx_n_s_omega0,&__pyx_n_s_Tcmb,&__pyx_n_s_n_s,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, 1); __PYX_ERR(0, 68, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_omegab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, 2); __PYX_ERR(0, 68, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_omega0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, 3); __PYX_ERR(0, 68, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Tcmb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, 4); __PYX_ERR(0, 68, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, 5); __PYX_ERR(0, 68, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "f_pk_no_wiggle_integrand_py") < 0)) __PYX_ERR(0, 68, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_kmag = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_kmag == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
    __pyx_v_h = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_h == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
    __pyx_v_omegab = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_omegab == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
    __pyx_v_omega0 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_omega0 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
    __pyx_v_Tcmb = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_Tcmb == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
    __pyx_v_n_s = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_n_s == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 68, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("f_pk_no_wiggle_integrand_py", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 68, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.f_pk_no_wiggle_integrand_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_8f_pk_no_wiggle_integrand_py(__pyx_self, __pyx_v_kmag, __pyx_v_h, __pyx_v_omegab, __pyx_v_omega0, __pyx_v_Tcmb, __pyx_v_n_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_8f_pk_no_wiggle_integrand_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmag, double __pyx_v_h, double __pyx_v_omegab, double __pyx_v_omega0, double __pyx_v_Tcmb, double __pyx_v_n_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("f_pk_no_wiggle_integrand_py", 0);

  /* "hitomi.pyx":69
 * 
 * def f_pk_no_wiggle_integrand_py(double kmag, double h, double omegab, double omega0, double Tcmb, double n_s):
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)             # <<<<<<<<<<<<<<
 * 
 * def calcSigma_dd_py(double sigma8):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(f_pk_no_wiggle_integrand(__pyx_v_kmag, __pyx_v_h, __pyx_v_omegab, __pyx_v_omega0, __pyx_v_Tcmb, __pyx_v_n_s)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":68
 * 
 * 
 * def f_pk_no_wiggle_integrand_py(double kmag, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.f_pk_no_wiggle_integrand_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":71
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 * def calcSigma_dd_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcSigma_dd(sigma8)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_11calcSigma_dd_py(PyObject *__pyx_self, PyObject *__pyx_arg_sigma8); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_11calcSigma_dd_py = {"calcSigma_dd_py", (PyCFunction)__pyx_pw_8hitomipy_11calcSigma_dd_py, METH_O, 0};
static PyObject *__pyx_pw_8hitomipy_11calcSigma_dd_py(PyObject *__pyx_self, PyObject *__pyx_arg_sigma8) {
  double __pyx_v_sigma8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calcSigma_dd_py (wrapper)", 0);
  assert(__pyx_arg_sigma8); {
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(__pyx_arg_sigma8); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 71, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.calcSigma_dd_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_10calcSigma_dd_py(__pyx_self, ((double)__pyx_v_sigma8));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_10calcSigma_dd_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calcSigma_dd_py", 0);

  /* "hitomi.pyx":72
 * 
 * def calcSigma_dd_py(double sigma8):
 *     return calcSigma_dd(sigma8)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(calcSigma_dd(__pyx_v_sigma8)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":71
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 * def calcSigma_dd_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcSigma_dd(sigma8)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.calcSigma_dd_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":75
 * 
 * 
 * def readInputPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_13readInputPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_13readInputPowerSpectrum_py = {"readInputPowerSpectrum_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_13readInputPowerSpectrum_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_13readInputPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_kbin_in = 0;
  PyArrayObject *__pyx_v_pk_in = 0;
  int __pyx_v_pk_num_in;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readInputPowerSpectrum_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kbin_in,&__pyx_n_s_pk_in,&__pyx_n_s_pk_num_in,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputPowerSpectrum_py", 1, 3, 3, 1); __PYX_ERR(0, 75, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_num_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputPowerSpectrum_py", 1, 3, 3, 2); __PYX_ERR(0, 75, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readInputPowerSpectrum_py") < 0)) __PYX_ERR(0, 75, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_kbin_in = ((PyArrayObject *)values[0]);
    __pyx_v_pk_in = ((PyArrayObject *)values[1]);
    __pyx_v_pk_num_in = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_pk_num_in == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readInputPowerSpectrum_py", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 75, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.readInputPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin_in), __pyx_ptype_5numpy_ndarray, 0, "kbin_in", 0))) __PYX_ERR(0, 76, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk_in), __pyx_ptype_5numpy_ndarray, 0, "pk_in", 0))) __PYX_ERR(0, 77, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_12readInputPowerSpectrum_py(__pyx_self, __pyx_v_kbin_in, __pyx_v_pk_in, __pyx_v_pk_num_in);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_12readInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin_in;
  __Pyx_Buffer __pyx_pybuffer_kbin_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk_in;
  __Pyx_Buffer __pyx_pybuffer_pk_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("readInputPowerSpectrum_py", 0);
  __pyx_pybuffer_kbin_in.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin_in.refcount = 0;
  __pyx_pybuffernd_kbin_in.data = NULL;
  __pyx_pybuffernd_kbin_in.rcbuffer = &__pyx_pybuffer_kbin_in;
  __pyx_pybuffer_pk_in.pybuffer.buf = NULL;
  __pyx_pybuffer_pk_in.refcount = 0;
  __pyx_pybuffernd_pk_in.data = NULL;
  __pyx_pybuffernd_pk_in.rcbuffer = &__pyx_pybuffer_pk_in;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 75, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin_in.diminfo[0].strides = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin_in.diminfo[0].shape = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 75, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk_in.diminfo[0].strides = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk_in.diminfo[0].shape = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":80
 *         int pk_num_in
 *         ):
 *     return readInputPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)             # <<<<<<<<<<<<<<
 * 
 * def readInputNoWigglePowerSpectrum_py(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_kbin_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_kbin_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 80, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk_in.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 80, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(readInputPowerSpectrum((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_kbin_in.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk_in.diminfo[0].strides))), __pyx_v_pk_num_in)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":75
 * 
 * 
 * def readInputPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.readInputPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":82
 *     return readInputPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)
 * 
 * def readInputNoWigglePowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_15readInputNoWigglePowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_15readInputNoWigglePowerSpectrum_py = {"readInputNoWigglePowerSpectrum_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_15readInputNoWigglePowerSpectrum_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_15readInputNoWigglePowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_kbin_in = 0;
  PyArrayObject *__pyx_v_pk_in = 0;
  int __pyx_v_pk_num_in;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readInputNoWigglePowerSpectrum_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kbin_in,&__pyx_n_s_pk_in,&__pyx_n_s_pk_num_in,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputNoWigglePowerSpectrum_py", 1, 3, 3, 1); __PYX_ERR(0, 82, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_num_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputNoWigglePowerSpectrum_py", 1, 3, 3, 2); __PYX_ERR(0, 82, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readInputNoWigglePowerSpectrum_py") < 0)) __PYX_ERR(0, 82, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_kbin_in = ((PyArrayObject *)values[0]);
    __pyx_v_pk_in = ((PyArrayObject *)values[1]);
    __pyx_v_pk_num_in = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_pk_num_in == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 85, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readInputNoWigglePowerSpectrum_py", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 82, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.readInputNoWigglePowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin_in), __pyx_ptype_5numpy_ndarray, 0, "kbin_in", 0))) __PYX_ERR(0, 83, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk_in), __pyx_ptype_5numpy_ndarray, 0, "pk_in", 0))) __PYX_ERR(0, 84, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_14readInputNoWigglePowerSpectrum_py(__pyx_self, __pyx_v_kbin_in, __pyx_v_pk_in, __pyx_v_pk_num_in);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_14readInputNoWigglePowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin_in;
  __Pyx_Buffer __pyx_pybuffer_kbin_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk_in;
  __Pyx_Buffer __pyx_pybuffer_pk_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("readInputNoWigglePowerSpectrum_py", 0);
  __pyx_pybuffer_kbin_in.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin_in.refcount = 0;
  __pyx_pybuffernd_kbin_in.data = NULL;
  __pyx_pybuffernd_kbin_in.rcbuffer = &__pyx_pybuffer_kbin_in;
  __pyx_pybuffer_pk_in.pybuffer.buf = NULL;
  __pyx_pybuffer_pk_in.refcount = 0;
  __pyx_pybuffernd_pk_in.data = NULL;
  __pyx_pybuffernd_pk_in.rcbuffer = &__pyx_pybuffer_pk_in;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 82, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin_in.diminfo[0].strides = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin_in.diminfo[0].shape = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 82, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk_in.diminfo[0].strides = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk_in.diminfo[0].shape = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":87
 *         int pk_num_in
 *         ):
 *     return readInputNoWigglePowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_kbin_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_kbin_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 87, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk_in.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 87, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(readInputNoWigglePowerSpectrum((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_kbin_in.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk_in.diminfo[0].strides))), __pyx_v_pk_num_in)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":82
 *     return readInputPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)
 * 
 * def readInputNoWigglePowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.readInputNoWigglePowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":90
 * 
 * 
 * def readInputPrimordialPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_17readInputPrimordialPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_17readInputPrimordialPowerSpectrum_py = {"readInputPrimordialPowerSpectrum_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_17readInputPrimordialPowerSpectrum_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_17readInputPrimordialPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_kbin_in = 0;
  PyArrayObject *__pyx_v_pk_in = 0;
  int __pyx_v_pk_num_in;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readInputPrimordialPowerSpectrum_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kbin_in,&__pyx_n_s_pk_in,&__pyx_n_s_pk_num_in,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputPrimordialPowerSpectrum_py", 1, 3, 3, 1); __PYX_ERR(0, 90, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_num_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readInputPrimordialPowerSpectrum_py", 1, 3, 3, 2); __PYX_ERR(0, 90, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readInputPrimordialPowerSpectrum_py") < 0)) __PYX_ERR(0, 90, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_kbin_in = ((PyArrayObject *)values[0]);
    __pyx_v_pk_in = ((PyArrayObject *)values[1]);
    __pyx_v_pk_num_in = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_pk_num_in == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readInputPrimordialPowerSpectrum_py", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 90, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.readInputPrimordialPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin_in), __pyx_ptype_5numpy_ndarray, 0, "kbin_in", 0))) __PYX_ERR(0, 91, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk_in), __pyx_ptype_5numpy_ndarray, 0, "pk_in", 0))) __PYX_ERR(0, 92, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_16readInputPrimordialPowerSpectrum_py(__pyx_self, __pyx_v_kbin_in, __pyx_v_pk_in, __pyx_v_pk_num_in);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_16readInputPrimordialPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_in, int __pyx_v_pk_num_in) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin_in;
  __Pyx_Buffer __pyx_pybuffer_kbin_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk_in;
  __Pyx_Buffer __pyx_pybuffer_pk_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("readInputPrimordialPowerSpectrum_py", 0);
  __pyx_pybuffer_kbin_in.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin_in.refcount = 0;
  __pyx_pybuffernd_kbin_in.data = NULL;
  __pyx_pybuffernd_kbin_in.rcbuffer = &__pyx_pybuffer_kbin_in;
  __pyx_pybuffer_pk_in.pybuffer.buf = NULL;
  __pyx_pybuffer_pk_in.refcount = 0;
  __pyx_pybuffernd_pk_in.data = NULL;
  __pyx_pybuffernd_pk_in.rcbuffer = &__pyx_pybuffer_pk_in;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 90, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin_in.diminfo[0].strides = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin_in.diminfo[0].shape = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 90, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk_in.diminfo[0].strides = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk_in.diminfo[0].shape = __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":95
 *         int pk_num_in
 *         ):
 *     return readInputPrimordialPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_kbin_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_kbin_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 95, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk_in.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 95, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyInt_From_int(readInputPrimordialPowerSpectrum((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_kbin_in.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk_in.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk_in.diminfo[0].strides))), __pyx_v_pk_num_in)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":90
 * 
 * 
 * def readInputPrimordialPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.readInputPrimordialPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":98
 * 
 * 
 * def readNonLinearPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_0_in not None,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_19readNonLinearPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_19readNonLinearPowerSpectrum_py = {"readNonLinearPowerSpectrum_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_19readNonLinearPowerSpectrum_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_19readNonLinearPowerSpectrum_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_kbin_in = 0;
  PyArrayObject *__pyx_v_pk_0_in = 0;
  PyArrayObject *__pyx_v_pk_2_in = 0;
  int __pyx_v_pk_num_in;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("readNonLinearPowerSpectrum_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kbin_in,&__pyx_n_s_pk_0_in,&__pyx_n_s_pk_2_in,&__pyx_n_s_pk_num_in,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_0_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readNonLinearPowerSpectrum_py", 1, 4, 4, 1); __PYX_ERR(0, 98, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_2_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readNonLinearPowerSpectrum_py", 1, 4, 4, 2); __PYX_ERR(0, 98, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pk_num_in)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("readNonLinearPowerSpectrum_py", 1, 4, 4, 3); __PYX_ERR(0, 98, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "readNonLinearPowerSpectrum_py") < 0)) __PYX_ERR(0, 98, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_kbin_in = ((PyArrayObject *)values[0]);
    __pyx_v_pk_0_in = ((PyArrayObject *)values[1]);
    __pyx_v_pk_2_in = ((PyArrayObject *)values[2]);
    __pyx_v_pk_num_in = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_pk_num_in == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 102, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("readNonLinearPowerSpectrum_py", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 98, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.readNonLinearPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin_in), __pyx_ptype_5numpy_ndarray, 0, "kbin_in", 0))) __PYX_ERR(0, 99, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk_0_in), __pyx_ptype_5numpy_ndarray, 0, "pk_0_in", 0))) __PYX_ERR(0, 100, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_pk_2_in), __pyx_ptype_5numpy_ndarray, 0, "pk_2_in", 0))) __PYX_ERR(0, 101, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_18readNonLinearPowerSpectrum_py(__pyx_self, __pyx_v_kbin_in, __pyx_v_pk_0_in, __pyx_v_pk_2_in, __pyx_v_pk_num_in);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_18readNonLinearPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_kbin_in, PyArrayObject *__pyx_v_pk_0_in, PyArrayObject *__pyx_v_pk_2_in, int __pyx_v_pk_num_in) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin_in;
  __Pyx_Buffer __pyx_pybuffer_kbin_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk_0_in;
  __Pyx_Buffer __pyx_pybuffer_pk_0_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_pk_2_in;
  __Pyx_Buffer __pyx_pybuffer_pk_2_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("readNonLinearPowerSpectrum_py", 0);
  __pyx_pybuffer_kbin_in.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin_in.refcount = 0;
  __pyx_pybuffernd_kbin_in.data = NULL;
  __pyx_pybuffernd_kbin_in.rcbuffer = &__pyx_pybuffer_kbin_in;
  __pyx_pybuffer_pk_0_in.pybuffer.buf = NULL;
  __pyx_pybuffer_pk_0_in.refcount = 0;
  __pyx_pybuffernd_pk_0_in.data = NULL;
  __pyx_pybuffernd_pk_0_in.rcbuffer = &__pyx_pybuffer_pk_0_in;
  __pyx_pybuffer_pk_2_in.pybuffer.buf = NULL;
  __pyx_pybuffer_pk_2_in.refcount = 0;
  __pyx_pybuffernd_pk_2_in.data = NULL;
  __pyx_pybuffernd_pk_2_in.rcbuffer = &__pyx_pybuffer_pk_2_in;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 98, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin_in.diminfo[0].strides = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin_in.diminfo[0].shape = __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk_0_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 98, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk_0_in.diminfo[0].strides = __pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk_0_in.diminfo[0].shape = __pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_pk_2_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 98, __pyx_L1_error)
  }
  __pyx_pybuffernd_pk_2_in.diminfo[0].strides = __pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_pk_2_in.diminfo[0].shape = __pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":104
 *         int pk_num_in
 *         ):
 *     return readNonLinearPowerSpectrum(& kbin_in[0], & pk_0_in[0], & pk_2_in[0], pk_num_in)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_kbin_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_kbin_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 104, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_pk_0_in.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_pk_0_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 104, __pyx_L1_error)
  }
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_pk_2_in.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_pk_2_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 104, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyInt_From_int(readNonLinearPowerSpectrum((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_kbin_in.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_pk_0_in.diminfo[0].strides))), (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_pk_2_in.diminfo[0].strides))), __pyx_v_pk_num_in)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":98
 * 
 * 
 * def readNonLinearPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_0_in not None,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.readNonLinearPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_0_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_pk_2_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":107
 * 
 * 
 * def initializeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return initializeInputPowerSpectrum()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_21initializeInputPowerSpectrum_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_21initializeInputPowerSpectrum_py = {"initializeInputPowerSpectrum_py", (PyCFunction)__pyx_pw_8hitomipy_21initializeInputPowerSpectrum_py, METH_NOARGS, 0};
static PyObject *__pyx_pw_8hitomipy_21initializeInputPowerSpectrum_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initializeInputPowerSpectrum_py (wrapper)", 0);
  __pyx_r = __pyx_pf_8hitomipy_20initializeInputPowerSpectrum_py(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_20initializeInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initializeInputPowerSpectrum_py", 0);

  /* "hitomi.pyx":108
 * 
 * def initializeInputPowerSpectrum_py():
 *     return initializeInputPowerSpectrum()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(initializeInputPowerSpectrum()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":107
 * 
 * 
 * def initializeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return initializeInputPowerSpectrum()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.initializeInputPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":111
 * 
 * 
 * def finalizeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return finalizeInputPowerSpectrum()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_23finalizeInputPowerSpectrum_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_23finalizeInputPowerSpectrum_py = {"finalizeInputPowerSpectrum_py", (PyCFunction)__pyx_pw_8hitomipy_23finalizeInputPowerSpectrum_py, METH_NOARGS, 0};
static PyObject *__pyx_pw_8hitomipy_23finalizeInputPowerSpectrum_py(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("finalizeInputPowerSpectrum_py (wrapper)", 0);
  __pyx_r = __pyx_pf_8hitomipy_22finalizeInputPowerSpectrum_py(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_22finalizeInputPowerSpectrum_py(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("finalizeInputPowerSpectrum_py", 0);

  /* "hitomi.pyx":112
 * 
 * def finalizeInputPowerSpectrum_py():
 *     return finalizeInputPowerSpectrum()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(finalizeInputPowerSpectrum()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":111
 * 
 * 
 * def finalizeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return finalizeInputPowerSpectrum()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.finalizeInputPowerSpectrum_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":115
 * 
 * 
 * def calcNormalizationUsingSigma8_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcNormalizationUsingSigma8(sigma8)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_25calcNormalizationUsingSigma8_py(PyObject *__pyx_self, PyObject *__pyx_arg_sigma8); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_25calcNormalizationUsingSigma8_py = {"calcNormalizationUsingSigma8_py", (PyCFunction)__pyx_pw_8hitomipy_25calcNormalizationUsingSigma8_py, METH_O, 0};
static PyObject *__pyx_pw_8hitomipy_25calcNormalizationUsingSigma8_py(PyObject *__pyx_self, PyObject *__pyx_arg_sigma8) {
  double __pyx_v_sigma8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calcNormalizationUsingSigma8_py (wrapper)", 0);
  assert(__pyx_arg_sigma8); {
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(__pyx_arg_sigma8); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 115, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.calcNormalizationUsingSigma8_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_24calcNormalizationUsingSigma8_py(__pyx_self, ((double)__pyx_v_sigma8));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_24calcNormalizationUsingSigma8_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calcNormalizationUsingSigma8_py", 0);

  /* "hitomi.pyx":116
 * 
 * def calcNormalizationUsingSigma8_py(double sigma8):
 *     return calcNormalizationUsingSigma8(sigma8)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(calcNormalizationUsingSigma8(__pyx_v_sigma8)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":115
 * 
 * 
 * def calcNormalizationUsingSigma8_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcNormalizationUsingSigma8(sigma8)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.calcNormalizationUsingSigma8_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":119
 * 
 * 
 * def calcNormalizationNoWiggle_py(double sigma8, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return calcNormalizationNoWiggle(sigma8, h, omegab, omega0, Tcmb, n_s)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_27calcNormalizationNoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_27calcNormalizationNoWiggle_py = {"calcNormalizationNoWiggle_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_27calcNormalizationNoWiggle_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_27calcNormalizationNoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_sigma8;
  double __pyx_v_h;
  double __pyx_v_omegab;
  double __pyx_v_omega0;
  double __pyx_v_Tcmb;
  double __pyx_v_n_s;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calcNormalizationNoWiggle_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sigma8,&__pyx_n_s_h,&__pyx_n_s_omegab,&__pyx_n_s_omega0,&__pyx_n_s_Tcmb,&__pyx_n_s_n_s,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_h)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, 1); __PYX_ERR(0, 119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_omegab)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, 2); __PYX_ERR(0, 119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_omega0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, 3); __PYX_ERR(0, 119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Tcmb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, 4); __PYX_ERR(0, 119, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_s)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, 5); __PYX_ERR(0, 119, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "calcNormalizationNoWiggle_py") < 0)) __PYX_ERR(0, 119, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
    __pyx_v_h = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_h == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
    __pyx_v_omegab = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_omegab == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
    __pyx_v_omega0 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_omega0 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
    __pyx_v_Tcmb = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_Tcmb == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
    __pyx_v_n_s = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_n_s == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calcNormalizationNoWiggle_py", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 119, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.calcNormalizationNoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_26calcNormalizationNoWiggle_py(__pyx_self, __pyx_v_sigma8, __pyx_v_h, __pyx_v_omegab, __pyx_v_omega0, __pyx_v_Tcmb, __pyx_v_n_s);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_26calcNormalizationNoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_sigma8, double __pyx_v_h, double __pyx_v_omegab, double __pyx_v_omega0, double __pyx_v_Tcmb, double __pyx_v_n_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calcNormalizationNoWiggle_py", 0);

  /* "hitomi.pyx":120
 * 
 * def calcNormalizationNoWiggle_py(double sigma8, double h, double omegab, double omega0, double Tcmb, double n_s):
 *     return calcNormalizationNoWiggle(sigma8, h, omegab, omega0, Tcmb, n_s)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_void_to_None(calcNormalizationNoWiggle(__pyx_v_sigma8, __pyx_v_h, __pyx_v_omegab, __pyx_v_omega0, __pyx_v_Tcmb, __pyx_v_n_s)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":119
 * 
 * 
 * def calcNormalizationNoWiggle_py(double sigma8, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return calcNormalizationNoWiggle(sigma8, h, omegab, omega0, Tcmb, n_s)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.calcNormalizationNoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":123
 * 
 * 
 * def set_kmin_py(double kmin):             # <<<<<<<<<<<<<<
 *     return set_kmin(kmin)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_29set_kmin_py(PyObject *__pyx_self, PyObject *__pyx_arg_kmin); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_29set_kmin_py = {"set_kmin_py", (PyCFunction)__pyx_pw_8hitomipy_29set_kmin_py, METH_O, 0};
static PyObject *__pyx_pw_8hitomipy_29set_kmin_py(PyObject *__pyx_self, PyObject *__pyx_arg_kmin) {
  double __pyx_v_kmin;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kmin_py (wrapper)", 0);
  assert(__pyx_arg_kmin); {
    __pyx_v_kmin = __pyx_PyFloat_AsDouble(__pyx_arg_kmin); if (unlikely((__pyx_v_kmin == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.set_kmin_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_28set_kmin_py(__pyx_self, ((double)__pyx_v_kmin));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_28set_kmin_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmin) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_kmin_py", 0);

  /* "hitomi.pyx":124
 * 
 * def set_kmin_py(double kmin):
 *     return set_kmin(kmin)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(set_kmin(__pyx_v_kmin)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":123
 * 
 * 
 * def set_kmin_py(double kmin):             # <<<<<<<<<<<<<<
 *     return set_kmin(kmin)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.set_kmin_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":127
 * 
 * 
 * def set_kmax_py(double kmax):             # <<<<<<<<<<<<<<
 *     return set_kmax(kmax)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_31set_kmax_py(PyObject *__pyx_self, PyObject *__pyx_arg_kmax); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_31set_kmax_py = {"set_kmax_py", (PyCFunction)__pyx_pw_8hitomipy_31set_kmax_py, METH_O, 0};
static PyObject *__pyx_pw_8hitomipy_31set_kmax_py(PyObject *__pyx_self, PyObject *__pyx_arg_kmax) {
  double __pyx_v_kmax;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kmax_py (wrapper)", 0);
  assert(__pyx_arg_kmax); {
    __pyx_v_kmax = __pyx_PyFloat_AsDouble(__pyx_arg_kmax); if (unlikely((__pyx_v_kmax == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 127, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.set_kmax_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_30set_kmax_py(__pyx_self, ((double)__pyx_v_kmax));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_30set_kmax_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_kmax) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_kmax_py", 0);

  /* "hitomi.pyx":128
 * 
 * def set_kmax_py(double kmax):
 *     return set_kmax(kmax)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(set_kmax(__pyx_v_kmax)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":127
 * 
 * 
 * def set_kmax_py(double kmax):             # <<<<<<<<<<<<<<
 *     return set_kmax(kmax)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.set_kmax_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":912
 *     double dSig2(double rbao, double ks)
 * 
 * def Sig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return Sig2(rbao, ks)
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_33Sig2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_33Sig2_py = {"Sig2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_33Sig2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_33Sig2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_rbao;
  double __pyx_v_ks;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Sig2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rbao,&__pyx_n_s_ks,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rbao)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ks)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Sig2_py", 1, 2, 2, 1); __PYX_ERR(0, 912, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Sig2_py") < 0)) __PYX_ERR(0, 912, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_rbao = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_rbao == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 913, __pyx_L3_error)
    __pyx_v_ks = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_ks == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 913, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Sig2_py", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 912, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.Sig2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_32Sig2_py(__pyx_self, __pyx_v_rbao, __pyx_v_ks);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_32Sig2_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_rbao, double __pyx_v_ks) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Sig2_py", 0);

  /* "hitomi.pyx":914
 * def Sig2_py(
 *         double rbao, double ks):
 *     return Sig2(rbao, ks)             # <<<<<<<<<<<<<<
 * 
 * def dSig2_py(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(Sig2(__pyx_v_rbao, __pyx_v_ks)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":912
 *     double dSig2(double rbao, double ks)
 * 
 * def Sig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return Sig2(rbao, ks)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.Sig2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":916
 *     return Sig2(rbao, ks)
 * 
 * def dSig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return dSig2(rbao, ks)
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_35dSig2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_35dSig2_py = {"dSig2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_35dSig2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_35dSig2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_rbao;
  double __pyx_v_ks;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dSig2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rbao,&__pyx_n_s_ks,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rbao)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ks)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("dSig2_py", 1, 2, 2, 1); __PYX_ERR(0, 916, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "dSig2_py") < 0)) __PYX_ERR(0, 916, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_rbao = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_rbao == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 917, __pyx_L3_error)
    __pyx_v_ks = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_ks == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 917, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("dSig2_py", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 916, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.dSig2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_8hitomipy_34dSig2_py(__pyx_self, __pyx_v_rbao, __pyx_v_ks);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_34dSig2_py(CYTHON_UNUSED PyObject *__pyx_self, double __pyx_v_rbao, double __pyx_v_ks) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dSig2_py", 0);

  /* "hitomi.pyx":918
 * def dSig2_py(
 *         double rbao, double ks):
 *     return dSig2(rbao, ks)             # <<<<<<<<<<<<<<
 * 
 * def integrand_P_LocalMean_py(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(dSig2(__pyx_v_rbao, __pyx_v_ks)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":916
 *     return Sig2(rbao, ks)
 * 
 * def dSig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return dSig2(rbao, ks)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("hitomipy.dSig2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":920
 *     return dSig2(rbao, ks)
 * 
 * def integrand_P_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_37integrand_P_LocalMean_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_37integrand_P_LocalMean_py = {"integrand_P_LocalMean_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_37integrand_P_LocalMean_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_37integrand_P_LocalMean_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_LocalMean_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[18] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 1); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 2); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 3); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 4); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 5); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 6); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 7); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 8); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 9); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 10); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 11); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 12); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 13); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 14); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 15); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 16); __PYX_ERR(0, 920, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, 17); __PYX_ERR(0, 920, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_LocalMean_py") < 0)) __PYX_ERR(0, 920, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 18) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 921, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 922, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 924, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 924, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 925, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 925, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_LocalMean_py", 1, 18, 18, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 920, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_LocalMean_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 921, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 921, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 922, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_36integrand_P_LocalMean_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_36integrand_P_LocalMean_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_LocalMean_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 920, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 920, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 920, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":927
 *         double nmean, double volume
 *         ):
 *     return integrand_P_LocalMean(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":928
 *         ):
 *     return integrand_P_LocalMean(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1, b2, bK2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 928, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 928, __pyx_L1_error)
  }

  /* "hitomi.pyx":929
 *     return integrand_P_LocalMean(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1, b2, bK2,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 929, __pyx_L1_error)
  }

  /* "hitomi.pyx":927
 *         double nmean, double volume
 *         ):
 *     return integrand_P_LocalMean(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_LocalMean((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":920
 *     return dSig2(rbao, ks)
 * 
 * def integrand_P_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_LocalMean_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":934
 *             nmean, volume)
 * 
 * def integrand_P_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_39integrand_P_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_39integrand_P_Tree_py = {"integrand_P_Tree_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_39integrand_P_Tree_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_39integrand_P_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 1); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 2); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 3); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 4); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 5); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 6); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 7); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 8); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 9); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, 10); __PYX_ERR(0, 934, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_py") < 0)) __PYX_ERR(0, 934, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 935, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 935, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 934, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 935, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 935, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 936, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_38integrand_P_Tree_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_38integrand_P_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 934, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 934, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 934, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":939
 *         double alpha_perp, double alpha_parallel, double f, double b1
 *         ):
 *     return integrand_P_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":940
 *         ):
 *     return integrand_P_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 940, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 940, __pyx_L1_error)
  }

  /* "hitomi.pyx":941
 *     return integrand_P_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 941, __pyx_L1_error)
  }

  /* "hitomi.pyx":939
 *         double alpha_perp, double alpha_parallel, double f, double b1
 *         ):
 *     return integrand_P_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":934
 *             nmean, volume)
 * 
 * def integrand_P_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":944
 *             alpha_perp, alpha_parallel, f, b1)
 * 
 * def integrand_P_Damping_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_41integrand_P_Damping_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_41integrand_P_Damping_Tree_py = {"integrand_P_Damping_Tree_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_41integrand_P_Damping_Tree_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_41integrand_P_Damping_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Damping_Tree_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 1); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 2); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 3); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 4); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 5); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 6); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 7); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 8); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 9); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 10); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 11); __PYX_ERR(0, 944, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, 12); __PYX_ERR(0, 944, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Damping_Tree_py") < 0)) __PYX_ERR(0, 944, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 945, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 945, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L3_error)
    __pyx_v_dSigma2 = values[12];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Tree_py", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 944, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 945, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 945, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 946, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_40integrand_P_Damping_Tree_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_40integrand_P_Damping_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Damping_Tree_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 944, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 944, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 944, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":949
 *         double alpha_perp, double alpha_parallel, double f, double b1, double Sigma2, dSigma2
 *         ):
 *     return integrand_P_Damping_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":950
 *         ):
 *     return integrand_P_Damping_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 950, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 950, __pyx_L1_error)
  }

  /* "hitomi.pyx":951
 *     return integrand_P_Damping_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 951, __pyx_L1_error)
  }

  /* "hitomi.pyx":952
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)             # <<<<<<<<<<<<<<
 * 
 * def integrand_P_Counterterm_py(
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 952, __pyx_L1_error)

  /* "hitomi.pyx":949
 *         double alpha_perp, double alpha_parallel, double f, double b1, double Sigma2, dSigma2
 *         ):
 *     return integrand_P_Damping_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Damping_Tree((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_Sigma2, __pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":944
 *             alpha_perp, alpha_parallel, f, b1)
 * 
 * def integrand_P_Damping_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":954
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 * 
 * def integrand_P_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_43integrand_P_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_43integrand_P_Counterterm_py = {"integrand_P_Counterterm_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_43integrand_P_Counterterm_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_43integrand_P_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_c0;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Counterterm_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_c0,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 1); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 2); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 3); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 4); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 5); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 6); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 7); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 8); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 9); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 10); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 11); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 12); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 13); __PYX_ERR(0, 954, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, 14); __PYX_ERR(0, 954, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Counterterm_py") < 0)) __PYX_ERR(0, 954, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 956, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 956, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L3_error)
    __pyx_v_c0 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_c0 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Counterterm_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 954, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 955, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 955, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 956, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_42integrand_P_Counterterm_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c0, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_42integrand_P_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c0, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Counterterm_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 954, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 954, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 954, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":960
 *         double c0, double c1, double c2, double knl,
 *         ):
 *     return integrand_P_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":961
 *         ):
 *     return integrand_P_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 961, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 961, __pyx_L1_error)
  }

  /* "hitomi.pyx":962
 *     return integrand_P_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1,
 *             c0, c1, c2, knl)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 962, __pyx_L1_error)
  }

  /* "hitomi.pyx":960
 *         double c0, double c1, double c2, double knl,
 *         ):
 *     return integrand_P_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Counterterm((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c0, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":954
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 * 
 * def integrand_P_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":966
 *             c0, c1, c2, knl)
 * 
 * def integrand_P_Damping_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_45integrand_P_Damping_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_45integrand_P_Damping_Counterterm_py = {"integrand_P_Damping_Counterterm_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_45integrand_P_Damping_Counterterm_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_45integrand_P_Damping_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_c0;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Damping_Counterterm_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_c0,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 1); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 2); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 3); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 4); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 5); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 6); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 7); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 8); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 9); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 10); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 11); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 12); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 13); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 14); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 15); __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, 16); __PYX_ERR(0, 966, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Damping_Counterterm_py") < 0)) __PYX_ERR(0, 966, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 967, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 967, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 968, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 968, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L3_error)
    __pyx_v_c0 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_c0 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 970, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 970, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 970, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 970, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 971, __pyx_L3_error)
    __pyx_v_dSigma2 = values[16];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_Counterterm_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 966, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 967, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 967, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 968, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_44integrand_P_Damping_Counterterm_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c0, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_44integrand_P_Damping_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c0, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Damping_Counterterm_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 966, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 966, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 966, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":973
 *         double Sigma2, dSigma2,
 *         ):
 *     return integrand_P_Damping_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":974
 *         ):
 *     return integrand_P_Damping_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 974, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 974, __pyx_L1_error)
  }

  /* "hitomi.pyx":975
 *     return integrand_P_Damping_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1,
 *             c0, c1, c2, knl,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 975, __pyx_L1_error)
  }

  /* "hitomi.pyx":978
 *             alpha_perp, alpha_parallel, f, b1,
 *             c0, c1, c2, knl,
 *             Sigma2, dSigma2)             # <<<<<<<<<<<<<<
 * 
 * def integrand_P_1loop_py(
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 978, __pyx_L1_error)

  /* "hitomi.pyx":973
 *         double Sigma2, dSigma2,
 *         ):
 *     return integrand_P_Damping_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Damping_Counterterm((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c0, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":966
 *             c0, c1, c2, knl)
 * 
 * def integrand_P_Damping_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":980
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_47integrand_P_1loop_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_47integrand_P_1loop_py = {"integrand_P_1loop_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_47integrand_P_1loop_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_47integrand_P_1loop_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bG2;
  double __pyx_v_bGamma3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_1loop_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bG2,&__pyx_n_s_bGamma3,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 1); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 2); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 3); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 4); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 5); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 6); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 7); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 8); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 9); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 10); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 11); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bG2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 12); __PYX_ERR(0, 980, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bGamma3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, 13); __PYX_ERR(0, 980, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_1loop_py") < 0)) __PYX_ERR(0, 980, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 981, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 981, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 982, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 983, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 983, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 983, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 983, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 984, __pyx_L3_error)
    __pyx_v_bG2 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_bG2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 984, __pyx_L3_error)
    __pyx_v_bGamma3 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_bGamma3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 984, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_1loop_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 980, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_1loop_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 981, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 981, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 982, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_46integrand_P_1loop_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_bGamma3);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_46integrand_P_1loop_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_bGamma3) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_1loop_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 980, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 980, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 980, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":986
 *         double b2, double bG2, double bGamma3,
 *         ):
 *     return integrand_P_1loop(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":987
 *         ):
 *     return integrand_P_1loop(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 987, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 987, __pyx_L1_error)
  }

  /* "hitomi.pyx":988
 *     return integrand_P_1loop(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1,
 *             b2, bG2, bGamma3)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 988, __pyx_L1_error)
  }

  /* "hitomi.pyx":986
 *         double b2, double bG2, double bGamma3,
 *         ):
 *     return integrand_P_1loop(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_1loop((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_bGamma3)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 986, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":980
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_1loop_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":992
 *             b2, bG2, bGamma3)
 * 
 * def integrand_P_Damping_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_49integrand_P_Damping_1loop_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_49integrand_P_Damping_1loop_py = {"integrand_P_Damping_1loop_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_49integrand_P_Damping_1loop_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_49integrand_P_Damping_1loop_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bG2;
  double __pyx_v_bGamma3;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Damping_1loop_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bG2,&__pyx_n_s_bGamma3,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 1); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 2); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 3); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 4); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 5); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 6); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 7); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 8); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 9); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 10); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 11); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bG2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 12); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bGamma3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 13); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 14); __PYX_ERR(0, 992, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, 15); __PYX_ERR(0, 992, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Damping_1loop_py") < 0)) __PYX_ERR(0, 992, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L3_error)
    __pyx_v_bG2 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_bG2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L3_error)
    __pyx_v_bGamma3 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_bGamma3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 997, __pyx_L3_error)
    __pyx_v_dSigma2 = values[15];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Damping_1loop_py", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 992, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_1loop_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 993, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 993, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 994, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_48integrand_P_Damping_1loop_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_bGamma3, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_48integrand_P_Damping_1loop_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_bGamma3, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Damping_1loop_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 992, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 992, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 992, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":999
 *         double Sigma2, dSigma2,
 *         ):
 *     return integrand_P_Damping_1loop(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1000
 *         ):
 *     return integrand_P_Damping_1loop(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1000, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1000, __pyx_L1_error)
  }

  /* "hitomi.pyx":1001
 *     return integrand_P_Damping_1loop(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, f, b1,
 *             b2, bG2, bGamma3,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1001, __pyx_L1_error)
  }

  /* "hitomi.pyx":1004
 *             alpha_perp, alpha_parallel, f, b1,
 *             b2, bG2, bGamma3,
 *             Sigma2, dSigma2)             # <<<<<<<<<<<<<<
 * 
 * def integrand_P_Kernel_Tree_py(
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1004, __pyx_L1_error)

  /* "hitomi.pyx":999
 *         double Sigma2, dSigma2,
 *         ):
 *     return integrand_P_Damping_1loop(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Damping_1loop((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_bGamma3, __pyx_v_Sigma2, __pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 999, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":992
 *             b2, bG2, bGamma3)
 * 
 * def integrand_P_Damping_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Damping_1loop_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1006
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_51integrand_P_Kernel_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_51integrand_P_Kernel_Tree_py = {"integrand_P_Kernel_Tree_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_51integrand_P_Kernel_Tree_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_51integrand_P_Kernel_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Kernel_Tree_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 1); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 2); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 3); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 4); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 5); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 6); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 7); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 8); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 9); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, 10); __PYX_ERR(0, 1006, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Kernel_Tree_py") < 0)) __PYX_ERR(0, 1006, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1007, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1007, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1008, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1008, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
    __pyx_v_dSigma2 = values[9];
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[10]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 1009, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Tree_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1006, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1007, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1007, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1008, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_50integrand_P_Kernel_Tree_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_50integrand_P_Kernel_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Kernel_Tree_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1006, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1006, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1006, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1011
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1012
 *         ):
 *     return integrand_P_Kernel_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1012, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1012, __pyx_L1_error)
  }

  /* "hitomi.pyx":1013
 *     return integrand_P_Kernel_Tree(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1013, __pyx_L1_error)
  }

  /* "hitomi.pyx":1014
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1014, __pyx_L1_error)

  /* "hitomi.pyx":1011
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Kernel_Tree((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_t_5, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1011, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1006
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1017
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_53integrand_P_Kernel_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_53integrand_P_Kernel_Counterterm_py = {"integrand_P_Kernel_Counterterm_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_53integrand_P_Kernel_Counterterm_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_53integrand_P_Kernel_Counterterm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Kernel_Counterterm_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 1); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 2); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 3); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 4); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 5); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 6); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 7); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 8); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 9); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, 10); __PYX_ERR(0, 1017, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Kernel_Counterterm_py") < 0)) __PYX_ERR(0, 1017, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1018, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1018, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1019, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1019, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1020, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1020, __pyx_L3_error)
    __pyx_v_dSigma2 = values[9];
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[10]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 1020, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_Counterterm_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1017, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1018, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1018, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1019, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_52integrand_P_Kernel_Counterterm_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_52integrand_P_Kernel_Counterterm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Kernel_Counterterm_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1022
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1023
 *         ):
 *     return integrand_P_Kernel_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1023, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1023, __pyx_L1_error)
  }

  /* "hitomi.pyx":1024
 *     return integrand_P_Kernel_Counterterm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1024, __pyx_L1_error)
  }

  /* "hitomi.pyx":1025
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L1_error)

  /* "hitomi.pyx":1022
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_Counterterm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Kernel_Counterterm((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_t_5, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1017
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_Counterterm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1028
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_55integrand_P_Kernel_1loop_22_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_55integrand_P_Kernel_1loop_22_py = {"integrand_P_Kernel_1loop_22_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_55integrand_P_Kernel_1loop_22_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_55integrand_P_Kernel_1loop_22_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_22_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 1); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 2); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 3); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 4); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 5); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 6); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 7); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 8); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 9); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, 10); __PYX_ERR(0, 1028, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Kernel_1loop_22_py") < 0)) __PYX_ERR(0, 1028, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1029, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1029, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1030, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1030, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1031, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1031, __pyx_L3_error)
    __pyx_v_dSigma2 = values[9];
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[10]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 1031, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1028, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_22_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1029, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1029, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1030, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_54integrand_P_Kernel_1loop_22_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_54integrand_P_Kernel_1loop_22_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_22_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1033
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_1loop_22(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1034
 *         ):
 *     return integrand_P_Kernel_1loop_22(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1034, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1034, __pyx_L1_error)
  }

  /* "hitomi.pyx":1035
 *     return integrand_P_Kernel_1loop_22(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1035, __pyx_L1_error)
  }

  /* "hitomi.pyx":1036
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L1_error)

  /* "hitomi.pyx":1033
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_1loop_22(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Kernel_1loop_22((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_t_5, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1028
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_22_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1039
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_norm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_57integrand_P_Kernel_1loop_22_norm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_57integrand_P_Kernel_1loop_22_norm_py = {"integrand_P_Kernel_1loop_22_norm_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_57integrand_P_Kernel_1loop_22_norm_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_57integrand_P_Kernel_1loop_22_norm_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_22_norm_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 1); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 2); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 3); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 4); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 5); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 6); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 7); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 8); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, 9); __PYX_ERR(0, 1039, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Kernel_1loop_22_norm_py") < 0)) __PYX_ERR(0, 1039, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 10) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1040, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1040, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1041, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1041, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1042, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1042, __pyx_L3_error)
    __pyx_v_dSigma2 = values[9];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_22_norm_py", 1, 10, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1039, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_22_norm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1040, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1040, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1041, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_56integrand_P_Kernel_1loop_22_norm_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_56integrand_P_Kernel_1loop_22_norm_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_22_norm_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1044
 *         double f, double Sigma2, dSigma2
 *         ):
 *     return integrand_P_Kernel_1loop_22_norm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1045
 *         ):
 *     return integrand_P_Kernel_1loop_22_norm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1045, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1045, __pyx_L1_error)
  }

  /* "hitomi.pyx":1046
 *     return integrand_P_Kernel_1loop_22_norm(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             f, Sigma2, dSigma2)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1046, __pyx_L1_error)
  }

  /* "hitomi.pyx":1047
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2)             # <<<<<<<<<<<<<<
 * 
 * def integrand_P_Kernel_1loop_13_py(
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L1_error)

  /* "hitomi.pyx":1044
 *         double f, double Sigma2, dSigma2
 *         ):
 *     return integrand_P_Kernel_1loop_22_norm(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Kernel_1loop_22_norm((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_t_5)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1044, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1039
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_norm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_22_norm_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1049
 *             f, Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_1loop_13_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_59integrand_P_Kernel_1loop_13_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_59integrand_P_Kernel_1loop_13_py = {"integrand_P_Kernel_1loop_13_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_59integrand_P_Kernel_1loop_13_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_59integrand_P_Kernel_1loop_13_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  PyObject *__pyx_v_dSigma2 = 0;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_13_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 1); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 2); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 3); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 4); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 5); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 6); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 7); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 8); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 9); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, 10); __PYX_ERR(0, 1049, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Kernel_1loop_13_py") < 0)) __PYX_ERR(0, 1049, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1050, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1050, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1052, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1052, __pyx_L3_error)
    __pyx_v_dSigma2 = values[9];
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[10]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 1052, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Kernel_1loop_13_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1049, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_13_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1050, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1050, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1051, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_58integrand_P_Kernel_1loop_13_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_58integrand_P_Kernel_1loop_13_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, PyObject *__pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  double __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Kernel_1loop_13_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1049, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1049, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1049, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1054
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_1loop_13(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1055
 *         ):
 *     return integrand_P_Kernel_1loop_13(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1055, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1055, __pyx_L1_error)
  }

  /* "hitomi.pyx":1056
 *     return integrand_P_Kernel_1loop_13(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1056, __pyx_L1_error)
  }

  /* "hitomi.pyx":1057
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 *             f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_dSigma2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1057, __pyx_L1_error)

  /* "hitomi.pyx":1054
 *         double f, double Sigma2, dSigma2,  char * parameters
 *         ):
 *     return integrand_P_Kernel_1loop_13(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_6 = __Pyx_PyInt_From_int(integrand_P_Kernel_1loop_13((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_t_5, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1049
 *             f, Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_1loop_13_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Kernel_1loop_13_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1060
 *             &parameters[0])
 * 
 * def integrand_P_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_61integrand_P_Tree_NoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_61integrand_P_Tree_NoWiggle_py = {"integrand_P_Tree_NoWiggle_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_61integrand_P_Tree_NoWiggle_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_61integrand_P_Tree_NoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_NoWiggle_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 1); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 2); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 3); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 4); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 5); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 6); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 7); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 8); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 9); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 10); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, 11); __PYX_ERR(0, 1060, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_NoWiggle_py") < 0)) __PYX_ERR(0, 1060, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1061, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1061, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1062, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1062, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1063, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_NoWiggle_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1060, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_NoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1061, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1061, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1062, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_60integrand_P_Tree_NoWiggle_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_60integrand_P_Tree_NoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_NoWiggle_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1065
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1
 *         ):
 *     return integrand_P_Tree_NoWiggle(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1066
 *         ):
 *     return integrand_P_Tree_NoWiggle(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1066, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1066, __pyx_L1_error)
  }

  /* "hitomi.pyx":1067
 *     return integrand_P_Tree_NoWiggle(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1067, __pyx_L1_error)
  }

  /* "hitomi.pyx":1065
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1
 *         ):
 *     return integrand_P_Tree_NoWiggle(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_NoWiggle((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1060
 *             &parameters[0])
 * 
 * def integrand_P_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_NoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1070
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_P_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_63integrand_P_Tree_BAO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_63integrand_P_Tree_BAO_py = {"integrand_P_Tree_BAO_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_63integrand_P_Tree_BAO_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_63integrand_P_Tree_BAO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 1); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 2); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 3); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 4); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 5); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 6); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 7); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 8); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 9); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 10); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 11); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 12); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, 13); __PYX_ERR(0, 1070, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_BAO_py") < 0)) __PYX_ERR(0, 1070, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1072, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1072, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1070, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1071, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1071, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1072, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_62integrand_P_Tree_BAO_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_62integrand_P_Tree_BAO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1070, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1070, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1070, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1075
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1,
 *         double sigma2_perp, double sigma2_para):
 *     return integrand_P_Tree_BAO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1076
 *         double sigma2_perp, double sigma2_para):
 *     return integrand_P_Tree_BAO(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1076, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1076, __pyx_L1_error)
  }

  /* "hitomi.pyx":1077
 *     return integrand_P_Tree_BAO(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1077, __pyx_L1_error)
  }

  /* "hitomi.pyx":1075
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1,
 *         double sigma2_perp, double sigma2_para):
 *     return integrand_P_Tree_BAO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_BAO((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1075, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1070
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_P_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1081
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_P_Tree_BAO_Fitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_65integrand_P_Tree_BAO_Fitting_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_65integrand_P_Tree_BAO_Fitting_py = {"integrand_P_Tree_BAO_Fitting_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_65integrand_P_Tree_BAO_Fitting_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_65integrand_P_Tree_BAO_Fitting_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_A20;
  double __pyx_v_A11;
  double __pyx_v_A02;
  double __pyx_v_A30;
  double __pyx_v_A21;
  double __pyx_v_A12;
  double __pyx_v_A03;
  double __pyx_v_A40;
  double __pyx_v_A31;
  double __pyx_v_A22;
  double __pyx_v_A13;
  double __pyx_v_A04;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_Fitting_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_A20,&__pyx_n_s_A11,&__pyx_n_s_A02,&__pyx_n_s_A30,&__pyx_n_s_A21,&__pyx_n_s_A12,&__pyx_n_s_A03,&__pyx_n_s_A40,&__pyx_n_s_A31,&__pyx_n_s_A22,&__pyx_n_s_A13,&__pyx_n_s_A04,0};
    PyObject* values[26] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 26: values[25] = PyTuple_GET_ITEM(__pyx_args, 25);
        CYTHON_FALLTHROUGH;
        case 25: values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
        CYTHON_FALLTHROUGH;
        case 24: values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
        CYTHON_FALLTHROUGH;
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 1); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 2); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 3); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 4); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 5); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 6); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 7); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 8); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 9); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 10); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 11); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 12); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 13); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A20)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 14); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A11)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 15); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A02)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 16); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A30)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 17); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A21)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 18); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A12)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 19); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A03)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 20); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A40)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 21); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A31)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 22); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 23:
        if (likely((values[23] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A22)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 23); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 24:
        if (likely((values[24] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A13)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 24); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 25:
        if (likely((values[25] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_A04)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, 25); __PYX_ERR(0, 1081, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_BAO_Fitting_py") < 0)) __PYX_ERR(0, 1081, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 26) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
      values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
      values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
      values[25] = PyTuple_GET_ITEM(__pyx_args, 25);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1083, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1083, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1085, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1085, __pyx_L3_error)
    __pyx_v_A20 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_A20 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1086, __pyx_L3_error)
    __pyx_v_A11 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_A11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1086, __pyx_L3_error)
    __pyx_v_A02 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_A02 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1086, __pyx_L3_error)
    __pyx_v_A30 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_A30 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1087, __pyx_L3_error)
    __pyx_v_A21 = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_A21 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1087, __pyx_L3_error)
    __pyx_v_A12 = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_A12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1087, __pyx_L3_error)
    __pyx_v_A03 = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_A03 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1087, __pyx_L3_error)
    __pyx_v_A40 = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_A40 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
    __pyx_v_A31 = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_A31 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
    __pyx_v_A22 = __pyx_PyFloat_AsDouble(values[23]); if (unlikely((__pyx_v_A22 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
    __pyx_v_A13 = __pyx_PyFloat_AsDouble(values[24]); if (unlikely((__pyx_v_A13 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
    __pyx_v_A04 = __pyx_PyFloat_AsDouble(values[25]); if (unlikely((__pyx_v_A04 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1088, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_Fitting_py", 1, 26, 26, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1081, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_Fitting_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1082, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1082, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1083, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_64integrand_P_Tree_BAO_Fitting_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_A20, __pyx_v_A11, __pyx_v_A02, __pyx_v_A30, __pyx_v_A21, __pyx_v_A12, __pyx_v_A03, __pyx_v_A40, __pyx_v_A31, __pyx_v_A22, __pyx_v_A13, __pyx_v_A04);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_64integrand_P_Tree_BAO_Fitting_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_A20, double __pyx_v_A11, double __pyx_v_A02, double __pyx_v_A30, double __pyx_v_A21, double __pyx_v_A12, double __pyx_v_A03, double __pyx_v_A40, double __pyx_v_A31, double __pyx_v_A22, double __pyx_v_A13, double __pyx_v_A04) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_Fitting_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1089
 *         double A30, double A21, double A12, double A03,
 *         double A40, double A31, double A22, double A13, double A04):
 *     return integrand_P_Tree_BAO_Fitting(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1090
 *         double A40, double A31, double A22, double A13, double A04):
 *     return integrand_P_Tree_BAO_Fitting(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1090, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1090, __pyx_L1_error)
  }

  /* "hitomi.pyx":1091
 *     return integrand_P_Tree_BAO_Fitting(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1091, __pyx_L1_error)
  }

  /* "hitomi.pyx":1089
 *         double A30, double A21, double A12, double A03,
 *         double A40, double A31, double A22, double A13, double A04):
 *     return integrand_P_Tree_BAO_Fitting(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_BAO_Fitting((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_A20, __pyx_v_A11, __pyx_v_A02, __pyx_v_A30, __pyx_v_A21, __pyx_v_A12, __pyx_v_A03, __pyx_v_A40, __pyx_v_A31, __pyx_v_A22, __pyx_v_A13, __pyx_v_A04)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1081
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_P_Tree_BAO_Fitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_Fitting_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1099
 * 
 * 
 * def integrand_P_NonLinearFitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_67integrand_P_NonLinearFitting_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_67integrand_P_NonLinearFitting_py = {"integrand_P_NonLinearFitting_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_67integrand_P_NonLinearFitting_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_67integrand_P_NonLinearFitting_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_NonLinearFitting_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 1); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 2); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 3); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 4); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 5); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 6); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 7); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 8); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 9); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 10); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 11); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 12); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, 13); __PYX_ERR(0, 1099, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_NonLinearFitting_py") < 0)) __PYX_ERR(0, 1099, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1100, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1100, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1101, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1101, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1102, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1103, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1103, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1099, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_NonLinearFitting_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1100, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1100, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1101, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_66integrand_P_NonLinearFitting_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_66integrand_P_NonLinearFitting_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_NonLinearFitting_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1105
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_NonLinearFitting(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1106
 *         ):
 *     return integrand_P_NonLinearFitting(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1106, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1106, __pyx_L1_error)
  }

  /* "hitomi.pyx":1107
 *     return integrand_P_NonLinearFitting(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1107, __pyx_L1_error)
  }

  /* "hitomi.pyx":1105
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_NonLinearFitting(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_NonLinearFitting((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1099
 * 
 * 
 * def integrand_P_NonLinearFitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_NonLinearFitting_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1112
 * 
 * 
 * def integrand_P_NonLinearFitting_Window_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_69integrand_P_NonLinearFitting_Window_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_69integrand_P_NonLinearFitting_Window_py = {"integrand_P_NonLinearFitting_Window_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_69integrand_P_NonLinearFitting_Window_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_69integrand_P_NonLinearFitting_Window_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_NonLinearFitting_Window_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_volume,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 1); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 2); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 3); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 4); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 5); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 6); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 7); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 8); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 9); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 10); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 11); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 12); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 13); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, 14); __PYX_ERR(0, 1112, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_NonLinearFitting_Window_py") < 0)) __PYX_ERR(0, 1112, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1113, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1113, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1117, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_NonLinearFitting_Window_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1112, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_NonLinearFitting_Window_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1113, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1113, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1114, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_68integrand_P_NonLinearFitting_Window_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_68integrand_P_NonLinearFitting_Window_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_NonLinearFitting_Window_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1112, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1112, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1112, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1119
 *         double volume
 *         ):
 *     return integrand_P_NonLinearFitting_Window(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1120
 *         ):
 *     return integrand_P_NonLinearFitting_Window(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1120, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1120, __pyx_L1_error)
  }

  /* "hitomi.pyx":1121
 *     return integrand_P_NonLinearFitting_Window(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1121, __pyx_L1_error)
  }

  /* "hitomi.pyx":1119
 *         double volume
 *         ):
 *     return integrand_P_NonLinearFitting_Window(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_NonLinearFitting_Window((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1112
 * 
 * 
 * def integrand_P_NonLinearFitting_Window_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_NonLinearFitting_Window_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1126
 *             volume)
 * 
 * def integrand_P_SigmaB_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_71integrand_P_SigmaB_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_71integrand_P_SigmaB_py = {"integrand_P_SigmaB_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_71integrand_P_SigmaB_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_71integrand_P_SigmaB_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_SigmaB_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 1); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 2); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 3); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 4); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 5); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 6); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 7); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 8); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 9); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 10); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 11); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 12); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 13); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, 14); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_SigmaB_py") < 0)) __PYX_ERR(0, 1126, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1127, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1127, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1128, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1129, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1130, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1130, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1131, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1131, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_SigmaB_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1126, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_SigmaB_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1127, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1127, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1128, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_70integrand_P_SigmaB_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_70integrand_P_SigmaB_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_SigmaB_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1126, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1126, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1126, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1133
 *         double nmean, double volume
 *         ):
 *     return integrand_P_SigmaB(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1134
 *         ):
 *     return integrand_P_SigmaB(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1134, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1134, __pyx_L1_error)
  }

  /* "hitomi.pyx":1135
 *     return integrand_P_SigmaB(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1135, __pyx_L1_error)
  }

  /* "hitomi.pyx":1133
 *         double nmean, double volume
 *         ):
 *     return integrand_P_SigmaB(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_SigmaB((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1126
 *             volume)
 * 
 * def integrand_P_SigmaB_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_SigmaB_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1141
 * 
 * 
 * def integrand_P_sigma2_perp_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_73integrand_P_sigma2_perp_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_73integrand_P_sigma2_perp_Reconstructed_py = {"integrand_P_sigma2_perp_Reconstructed_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_73integrand_P_sigma2_perp_Reconstructed_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_73integrand_P_sigma2_perp_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b1_fid;
  double __pyx_v_R;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_sigma2_perp_Reconstructed_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b1_fid,&__pyx_n_s_R,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 1); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 2); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 3); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 4); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 5); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 6); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 7); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 8); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1_fid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 9); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_R)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, 10); __PYX_ERR(0, 1141, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_sigma2_perp_Reconstructed_py") < 0)) __PYX_ERR(0, 1141, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1142, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1142, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1143, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1144, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1144, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1144, __pyx_L3_error)
    __pyx_v_b1_fid = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_b1_fid == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
    __pyx_v_R = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_R == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_perp_Reconstructed_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1141, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_sigma2_perp_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1142, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1142, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1143, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_72integrand_P_sigma2_perp_Reconstructed_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b1_fid, __pyx_v_R);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_72integrand_P_sigma2_perp_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b1_fid, double __pyx_v_R) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_sigma2_perp_Reconstructed_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1141, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1141, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1141, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1147
 *         double b1_fid, double R
 *         ):
 *     return integrand_P_sigma2_perp_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1148
 *         ):
 *     return integrand_P_sigma2_perp_Reconstructed(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin,
 *             sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1148, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1148, __pyx_L1_error)
  }

  /* "hitomi.pyx":1149
 *     return integrand_P_sigma2_perp_Reconstructed(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,             # <<<<<<<<<<<<<<
 *             sigma8, fz, b1,
 *             b1_fid, R)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1149, __pyx_L1_error)
  }

  /* "hitomi.pyx":1147
 *         double b1_fid, double R
 *         ):
 *     return integrand_P_sigma2_perp_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_sigma2_perp_Reconstructed((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b1_fid, __pyx_v_R)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1141
 * 
 * 
 * def integrand_P_sigma2_perp_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_sigma2_perp_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1154
 * 
 * 
 * def integrand_P_sigma2_para_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_75integrand_P_sigma2_para_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_75integrand_P_sigma2_para_Reconstructed_py = {"integrand_P_sigma2_para_Reconstructed_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_75integrand_P_sigma2_para_Reconstructed_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_75integrand_P_sigma2_para_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b1_fid;
  double __pyx_v_R;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_sigma2_para_Reconstructed_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b1_fid,&__pyx_n_s_R,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 1); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 2); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 3); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 4); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 5); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 6); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 7); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 8); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1_fid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 9); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_R)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, 10); __PYX_ERR(0, 1154, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_sigma2_para_Reconstructed_py") < 0)) __PYX_ERR(0, 1154, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1155, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1155, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1156, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1157, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1157, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1157, __pyx_L3_error)
    __pyx_v_b1_fid = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_b1_fid == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1158, __pyx_L3_error)
    __pyx_v_R = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_R == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1158, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_sigma2_para_Reconstructed_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1154, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_sigma2_para_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1155, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1155, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1156, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_74integrand_P_sigma2_para_Reconstructed_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b1_fid, __pyx_v_R);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_74integrand_P_sigma2_para_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b1_fid, double __pyx_v_R) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_sigma2_para_Reconstructed_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1154, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1154, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1154, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1160
 *         double b1_fid, double R
 *         ):
 *     return integrand_P_sigma2_para_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1161
 *         ):
 *     return integrand_P_sigma2_para_Reconstructed(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin,
 *             sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1161, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1161, __pyx_L1_error)
  }

  /* "hitomi.pyx":1162
 *     return integrand_P_sigma2_para_Reconstructed(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,             # <<<<<<<<<<<<<<
 *             sigma8, fz, b1,
 *             b1_fid, R)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1162, __pyx_L1_error)
  }

  /* "hitomi.pyx":1160
 *         double b1_fid, double R
 *         ):
 *     return integrand_P_sigma2_para_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_sigma2_para_Reconstructed((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b1_fid, __pyx_v_R)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1154
 * 
 * 
 * def integrand_P_sigma2_para_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_sigma2_para_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1183
 * #
 * #
 * def integrand_P_Tree_BAO_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_77integrand_P_Tree_BAO_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_77integrand_P_Tree_BAO_b1_b1_py = {"integrand_P_Tree_BAO_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_77integrand_P_Tree_BAO_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_77integrand_P_Tree_BAO_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 1); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 2); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 3); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 4); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 5); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 6); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 7); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 8); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 9); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, 10); __PYX_ERR(0, 1183, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_BAO_b1_b1_py") < 0)) __PYX_ERR(0, 1183, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1185, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1185, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1186, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1187, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_b1_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1183, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1184, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1184, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1185, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_76integrand_P_Tree_BAO_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_76integrand_P_Tree_BAO_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1183, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1183, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1183, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1189
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1190
 *         ):
 *     return integrand_P_Tree_BAO_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1190, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1190, __pyx_L1_error)
  }

  /* "hitomi.pyx":1191
 *     return integrand_P_Tree_BAO_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1191, __pyx_L1_error)
  }

  /* "hitomi.pyx":1189
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_BAO_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1183
 * #
 * #
 * def integrand_P_Tree_BAO_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1196
 * 
 * 
 * def integrand_P_Tree_BAO_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_79integrand_P_Tree_BAO_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_79integrand_P_Tree_BAO_b1_f_py = {"integrand_P_Tree_BAO_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_79integrand_P_Tree_BAO_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_79integrand_P_Tree_BAO_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 1); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 2); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 3); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 4); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 5); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 6); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 7); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 8); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 9); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, 10); __PYX_ERR(0, 1196, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_BAO_b1_f_py") < 0)) __PYX_ERR(0, 1196, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1197, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1199, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1199, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1200, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1200, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_b1_f_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1196, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1197, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1197, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1198, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_78integrand_P_Tree_BAO_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_78integrand_P_Tree_BAO_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1196, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1196, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1196, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1202
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1203
 *         ):
 *     return integrand_P_Tree_BAO_b1_f(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1203, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1203, __pyx_L1_error)
  }

  /* "hitomi.pyx":1204
 *     return integrand_P_Tree_BAO_b1_f(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1204, __pyx_L1_error)
  }

  /* "hitomi.pyx":1202
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_BAO_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1196
 * 
 * 
 * def integrand_P_Tree_BAO_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1209
 * 
 * 
 * def integrand_P_Tree_BAO_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_81integrand_P_Tree_BAO_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_81integrand_P_Tree_BAO_f_f_py = {"integrand_P_Tree_BAO_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_81integrand_P_Tree_BAO_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_81integrand_P_Tree_BAO_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 1); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 2); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 3); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 4); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 5); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 6); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 7); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 8); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 9); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, 10); __PYX_ERR(0, 1209, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_P_Tree_BAO_f_f_py") < 0)) __PYX_ERR(0, 1209, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1210, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1210, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1211, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1211, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1212, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1212, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1213, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1213, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_P_Tree_BAO_f_f_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1209, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1210, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1210, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1211, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_80integrand_P_Tree_BAO_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_80integrand_P_Tree_BAO_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_P_Tree_BAO_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1215
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1216
 *         ):
 *     return integrand_P_Tree_BAO_f_f(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1216, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1216, __pyx_L1_error)
  }

  /* "hitomi.pyx":1217
 *     return integrand_P_Tree_BAO_f_f(
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1217, __pyx_L1_error)
  }

  /* "hitomi.pyx":1215
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_P_Tree_BAO_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, & ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_P_Tree_BAO_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1209
 * 
 * 
 * def integrand_P_Tree_BAO_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_P_Tree_BAO_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1387
 * 
 * 
 * def integrand_cov_PP_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_83integrand_cov_PP_G_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_83integrand_cov_PP_G_py = {"integrand_cov_PP_G_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_83integrand_cov_PP_G_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_83integrand_cov_PP_G_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_G_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 1); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 2); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 3); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 4); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 5); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 6); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 7); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 8); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 9); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 10); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 11); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 12); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 13); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 14); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, 15); __PYX_ERR(0, 1387, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_G_py") < 0)) __PYX_ERR(0, 1387, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 16) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1388, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1388, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1389, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1389, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1389, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1390, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1390, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1390, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1390, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1390, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_py", 1, 16, 16, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1387, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_G_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1388, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1388, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1389, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_82integrand_cov_PP_G_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_82integrand_cov_PP_G_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_G_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1393
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_G(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1394
 *         ):
 *     return integrand_cov_PP_G(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1394, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1394, __pyx_L1_error)
  }

  /* "hitomi.pyx":1395
 *     return integrand_cov_PP_G(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1395, __pyx_L1_error)
  }

  /* "hitomi.pyx":1393
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_G(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_G((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1387
 * 
 * 
 * def integrand_cov_PP_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_G_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1400
 * 
 * 
 * def integrand_cov_PP_NG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_85integrand_cov_PP_NG_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_85integrand_cov_PP_NG_py = {"integrand_cov_PP_NG_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_85integrand_cov_PP_NG_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_85integrand_cov_PP_NG_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_b3;
  double __pyx_v_bK2;
  double __pyx_v_bK3;
  double __pyx_v_bDK;
  double __pyx_v_bO;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_b3,&__pyx_n_s_bK2,&__pyx_n_s_bK3,&__pyx_n_s_bDK,&__pyx_n_s_bO,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[23] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 1); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 2); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 3); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 4); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 5); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 6); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 7); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 8); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 9); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 10); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 11); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 12); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 13); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 14); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 15); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 16); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 17); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bDK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 18); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bO)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 19); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 20); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 21); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, 22); __PYX_ERR(0, 1400, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_py") < 0)) __PYX_ERR(0, 1400, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 23) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1401, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1401, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1403, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_b3 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_bK3 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_bK3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_bDK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_bDK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_bO = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_bO == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1404, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1405, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1405, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1405, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_py", 1, 23, 23, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1400, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1401, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1401, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1402, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_84integrand_cov_PP_NG_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_84integrand_cov_PP_NG_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1400, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1400, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1400, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1407
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1408
 *         ):
 *     return integrand_cov_PP_NG(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1408, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1408, __pyx_L1_error)
  }

  /* "hitomi.pyx":1409
 *     return integrand_cov_PP_NG(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, b3, bK2, bK3, bDK, bO,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1409, __pyx_L1_error)
  }

  /* "hitomi.pyx":1407
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1400
 * 
 * 
 * def integrand_cov_PP_NG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1414
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_G_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_87integrand_cov_PP_G_NL_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_87integrand_cov_PP_G_NL_py = {"integrand_cov_PP_G_NL_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_87integrand_cov_PP_G_NL_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_87integrand_cov_PP_G_NL_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_G_NL_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[18] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 1); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 2); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 3); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 4); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 5); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 6); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 7); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 8); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 9); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 10); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 11); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 12); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 13); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 14); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 15); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 16); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, 17); __PYX_ERR(0, 1414, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_G_NL_py") < 0)) __PYX_ERR(0, 1414, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 18) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1415, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1415, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1416, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1416, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1416, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1417, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1418, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1418, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_G_NL_py", 1, 18, 18, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1414, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_G_NL_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1415, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1415, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1416, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_86integrand_cov_PP_G_NL_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_86integrand_cov_PP_G_NL_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_G_NL_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1421
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_G_NL(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1422
 *         ):
 *     return integrand_cov_PP_G_NL(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1422, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1422, __pyx_L1_error)
  }

  /* "hitomi.pyx":1423
 *     return integrand_cov_PP_G_NL(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1423, __pyx_L1_error)
  }

  /* "hitomi.pyx":1421
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_G_NL(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_G_NL((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1414
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_G_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_G_NL_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1428
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_89integrand_cov_PP_NG_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_89integrand_cov_PP_NG_b1_py = {"integrand_cov_PP_NG_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_89integrand_cov_PP_NG_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_89integrand_cov_PP_NG_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 1); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 2); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 3); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 4); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 5); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 6); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 7); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 8); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 9); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 10); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 11); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 12); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 13); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 14); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 15); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, 16); __PYX_ERR(0, 1428, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_b1_py") < 0)) __PYX_ERR(0, 1428, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1429, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1429, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1431, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1432, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b1_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1428, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1429, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1429, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1430, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_88integrand_cov_PP_NG_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_88integrand_cov_PP_NG_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1428, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1428, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1428, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1434
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1435
 *         ):
 *     return integrand_cov_PP_NG_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1435, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1435, __pyx_L1_error)
  }

  /* "hitomi.pyx":1436
 *     return integrand_cov_PP_NG_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1436, __pyx_L1_error)
  }

  /* "hitomi.pyx":1434
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1428
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1440
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_91integrand_cov_PP_NG_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_91integrand_cov_PP_NG_b2_py = {"integrand_cov_PP_NG_b2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_91integrand_cov_PP_NG_b2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_91integrand_cov_PP_NG_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 1); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 2); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 3); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 4); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 5); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 6); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 7); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 8); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 9); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 10); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 11); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 12); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 13); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 14); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 15); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, 16); __PYX_ERR(0, 1440, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_b2_py") < 0)) __PYX_ERR(0, 1440, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1441, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1441, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1442, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1442, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1442, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1442, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1443, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1443, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1443, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1443, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1443, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1440, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1441, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1441, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1442, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_90integrand_cov_PP_NG_b2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_90integrand_cov_PP_NG_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1440, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1440, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1440, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1446
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1447
 *         ):
 *     return integrand_cov_PP_NG_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1447, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1447, __pyx_L1_error)
  }

  /* "hitomi.pyx":1448
 *     return integrand_cov_PP_NG_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1448, __pyx_L1_error)
  }

  /* "hitomi.pyx":1446
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_b2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1440
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1453
 * 
 * 
 * def integrand_cov_PP_NG_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_93integrand_cov_PP_NG_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_93integrand_cov_PP_NG_bK2_py = {"integrand_cov_PP_NG_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_93integrand_cov_PP_NG_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_93integrand_cov_PP_NG_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1453, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_bK2_py") < 0)) __PYX_ERR(0, 1453, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1454, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1454, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1455, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1455, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1455, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1455, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1456, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1457, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1457, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1457, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1453, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1454, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1454, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1455, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_92integrand_cov_PP_NG_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_92integrand_cov_PP_NG_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1453, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1453, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1453, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1459
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1460
 *         ):
 *     return integrand_cov_PP_NG_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1460, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1460, __pyx_L1_error)
  }

  /* "hitomi.pyx":1461
 *     return integrand_cov_PP_NG_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1461, __pyx_L1_error)
  }

  /* "hitomi.pyx":1459
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1453
 * 
 * 
 * def integrand_cov_PP_NG_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1465
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_95integrand_cov_PP_NG_b2_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_95integrand_cov_PP_NG_b2_b2_py = {"integrand_cov_PP_NG_b2_b2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_95integrand_cov_PP_NG_b2_b2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_95integrand_cov_PP_NG_b2_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_b2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 1); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 2); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 3); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 4); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 5); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 6); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 7); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 8); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 9); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 10); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 11); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 12); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 13); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 14); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 15); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, 16); __PYX_ERR(0, 1465, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_b2_b2_py") < 0)) __PYX_ERR(0, 1465, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1466, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1466, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1467, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1467, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1467, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1467, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1469, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1469, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1469, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_b2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1465, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1466, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1466, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1467, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_94integrand_cov_PP_NG_b2_b2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_94integrand_cov_PP_NG_b2_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_b2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1465, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1465, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1465, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1471
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1472
 *         ):
 *     return integrand_cov_PP_NG_b2_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1472, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1472, __pyx_L1_error)
  }

  /* "hitomi.pyx":1473
 *     return integrand_cov_PP_NG_b2_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1473, __pyx_L1_error)
  }

  /* "hitomi.pyx":1471
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_b2_b2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1465
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1477
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_97integrand_cov_PP_NG_b2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_97integrand_cov_PP_NG_b2_bK2_py = {"integrand_cov_PP_NG_b2_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_97integrand_cov_PP_NG_b2_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_97integrand_cov_PP_NG_b2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1477, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_b2_bK2_py") < 0)) __PYX_ERR(0, 1477, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1478, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1478, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1479, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1480, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1481, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1481, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1481, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b2_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1477, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1478, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1478, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1479, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_96integrand_cov_PP_NG_b2_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_96integrand_cov_PP_NG_b2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b2_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1483
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1484
 *         ):
 *     return integrand_cov_PP_NG_b2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1484, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1484, __pyx_L1_error)
  }

  /* "hitomi.pyx":1485
 *     return integrand_cov_PP_NG_b2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1485, __pyx_L1_error)
  }

  /* "hitomi.pyx":1483
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_b2_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1477
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1490
 * 
 * 
 * def integrand_cov_PP_NG_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_99integrand_cov_PP_NG_bK2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_99integrand_cov_PP_NG_bK2_bK2_py = {"integrand_cov_PP_NG_bK2_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_99integrand_cov_PP_NG_bK2_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_99integrand_cov_PP_NG_bK2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK2_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1490, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_bK2_bK2_py") < 0)) __PYX_ERR(0, 1490, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1491, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1491, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1492, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1492, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1492, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1492, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1493, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1493, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1493, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1493, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1493, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1494, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1494, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1494, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK2_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1490, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1491, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1491, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1492, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_98integrand_cov_PP_NG_bK2_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_98integrand_cov_PP_NG_bK2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK2_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1496
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1497
 *         ):
 *     return integrand_cov_PP_NG_bK2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1497, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1497, __pyx_L1_error)
  }

  /* "hitomi.pyx":1498
 *     return integrand_cov_PP_NG_bK2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1498, __pyx_L1_error)
  }

  /* "hitomi.pyx":1496
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_bK2_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1490
 * 
 * 
 * def integrand_cov_PP_NG_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1503
 * 
 * 
 * def integrand_cov_PP_NG_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_101integrand_cov_PP_NG_b3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_101integrand_cov_PP_NG_b3_py = {"integrand_cov_PP_NG_b3_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_101integrand_cov_PP_NG_b3_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_101integrand_cov_PP_NG_b3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b3_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 1); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 2); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 3); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 4); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 5); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 6); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 7); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 8); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 9); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 10); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 11); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 12); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 13); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 14); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 15); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, 16); __PYX_ERR(0, 1503, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_b3_py") < 0)) __PYX_ERR(0, 1503, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1504, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1504, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1506, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1507, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1507, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1507, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_b3_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1503, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1504, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1504, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1505, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_100integrand_cov_PP_NG_b3_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_100integrand_cov_PP_NG_b3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_b3_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1503, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1503, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1503, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1509
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1510
 *         ):
 *     return integrand_cov_PP_NG_b3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1510, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1510, __pyx_L1_error)
  }

  /* "hitomi.pyx":1511
 *     return integrand_cov_PP_NG_b3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1511, __pyx_L1_error)
  }

  /* "hitomi.pyx":1509
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_b3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_b3((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1503
 * 
 * 
 * def integrand_cov_PP_NG_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_b3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1516
 * 
 * 
 * def integrand_cov_PP_NG_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_103integrand_cov_PP_NG_bK3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_103integrand_cov_PP_NG_bK3_py = {"integrand_cov_PP_NG_bK3_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_103integrand_cov_PP_NG_bK3_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_103integrand_cov_PP_NG_bK3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK3_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 1); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 2); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 3); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 4); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 5); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 6); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 7); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 8); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 9); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 10); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 11); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 12); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 13); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 14); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 15); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, 16); __PYX_ERR(0, 1516, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_bK3_py") < 0)) __PYX_ERR(0, 1516, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1518, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1518, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1518, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1518, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bK3_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1516, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1517, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1517, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1518, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_102integrand_cov_PP_NG_bK3_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_102integrand_cov_PP_NG_bK3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bK3_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1522
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1523
 *         ):
 *     return integrand_cov_PP_NG_bK3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1523, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1523, __pyx_L1_error)
  }

  /* "hitomi.pyx":1524
 *     return integrand_cov_PP_NG_bK3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1524, __pyx_L1_error)
  }

  /* "hitomi.pyx":1522
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bK3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_bK3((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1516
 * 
 * 
 * def integrand_cov_PP_NG_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bK3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1529
 * 
 * 
 * def integrand_cov_PP_NG_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_105integrand_cov_PP_NG_bDK_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_105integrand_cov_PP_NG_bDK_py = {"integrand_cov_PP_NG_bDK_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_105integrand_cov_PP_NG_bDK_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_105integrand_cov_PP_NG_bDK_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bDK_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 1); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 2); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 3); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 4); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 5); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 6); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 7); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 8); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 9); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 10); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 11); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 12); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 13); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 14); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 15); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, 16); __PYX_ERR(0, 1529, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_bDK_py") < 0)) __PYX_ERR(0, 1529, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1530, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1530, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1531, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1531, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1531, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1531, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1532, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1532, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1532, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1532, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1532, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1533, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1533, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1533, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bDK_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1529, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bDK_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1530, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1530, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1531, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_104integrand_cov_PP_NG_bDK_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_104integrand_cov_PP_NG_bDK_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bDK_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1529, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1529, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1529, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1535
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bDK(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1536
 *         ):
 *     return integrand_cov_PP_NG_bDK(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1536, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1536, __pyx_L1_error)
  }

  /* "hitomi.pyx":1537
 *     return integrand_cov_PP_NG_bDK(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1537, __pyx_L1_error)
  }

  /* "hitomi.pyx":1535
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bDK(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_bDK((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1529
 * 
 * 
 * def integrand_cov_PP_NG_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bDK_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1541
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_107integrand_cov_PP_NG_bO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_107integrand_cov_PP_NG_bO_py = {"integrand_cov_PP_NG_bO_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_107integrand_cov_PP_NG_bO_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_107integrand_cov_PP_NG_bO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bO_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 1); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 2); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 3); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 4); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 5); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 6); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 7); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 8); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 9); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 10); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 11); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 12); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 13); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 14); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 15); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, 16); __PYX_ERR(0, 1541, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_bO_py") < 0)) __PYX_ERR(0, 1541, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1542, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1542, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1543, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1543, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1543, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1543, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1544, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_bO_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1541, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1542, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1542, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1543, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_106integrand_cov_PP_NG_bO_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_106integrand_cov_PP_NG_bO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_bO_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1541, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1541, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1541, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1547
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1548
 *         ):
 *     return integrand_cov_PP_NG_bO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1548, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1548, __pyx_L1_error)
  }

  /* "hitomi.pyx":1549
 *     return integrand_cov_PP_NG_bO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1549, __pyx_L1_error)
  }

  /* "hitomi.pyx":1547
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_bO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_bO((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1541
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_bO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1555
 * #####################################
 * 
 * def integrand_cov_PP_NG_BeatCoupling_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_109integrand_cov_PP_NG_BeatCoupling_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_109integrand_cov_PP_NG_BeatCoupling_py = {"integrand_cov_PP_NG_BeatCoupling_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_109integrand_cov_PP_NG_BeatCoupling_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_109integrand_cov_PP_NG_BeatCoupling_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_b3;
  double __pyx_v_bK2;
  double __pyx_v_bK3;
  double __pyx_v_bDK;
  double __pyx_v_bO;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_b3,&__pyx_n_s_bK2,&__pyx_n_s_bK3,&__pyx_n_s_bDK,&__pyx_n_s_bO,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[23] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 1); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 2); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 3); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 4); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 5); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 6); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 7); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 8); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 9); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 10); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 11); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 12); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 13); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 14); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 15); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 16); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 17); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bDK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 18); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bO)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 19); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 20); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 21); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, 22); __PYX_ERR(0, 1555, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_py") < 0)) __PYX_ERR(0, 1555, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 23) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1558, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1558, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1558, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1558, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1558, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_b3 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_bK3 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_bK3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_bDK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_bDK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_bO = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_bO == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1560, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1560, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1560, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_py", 1, 23, 23, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1555, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1556, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1556, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1557, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_108integrand_cov_PP_NG_BeatCoupling_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_108integrand_cov_PP_NG_BeatCoupling_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1555, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1555, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1555, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1562
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1563
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1563, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1563, __pyx_L1_error)
  }

  /* "hitomi.pyx":1564
 *     return integrand_cov_PP_NG_BeatCoupling(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, b3, bK2, bK3, bDK, bO,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1564, __pyx_L1_error)
  }

  /* "hitomi.pyx":1562
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1555
 * #####################################
 * 
 * def integrand_cov_PP_NG_BeatCoupling_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1569
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_111integrand_cov_PP_NG_BeatCoupling_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_111integrand_cov_PP_NG_BeatCoupling_b1_py = {"integrand_cov_PP_NG_BeatCoupling_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_111integrand_cov_PP_NG_BeatCoupling_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_111integrand_cov_PP_NG_BeatCoupling_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 1); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 2); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 3); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 4); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 5); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 6); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 7); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 8); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 9); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 10); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 11); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 12); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 13); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 14); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 15); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, 16); __PYX_ERR(0, 1569, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_b1_py") < 0)) __PYX_ERR(0, 1569, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1570, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1570, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1571, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1571, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1571, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1571, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b1_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1569, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1570, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1570, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1571, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_110integrand_cov_PP_NG_BeatCoupling_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_110integrand_cov_PP_NG_BeatCoupling_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1575
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1576
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1576, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1576, __pyx_L1_error)
  }

  /* "hitomi.pyx":1577
 *     return integrand_cov_PP_NG_BeatCoupling_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1577, __pyx_L1_error)
  }

  /* "hitomi.pyx":1575
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1569
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1581
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_113integrand_cov_PP_NG_BeatCoupling_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_113integrand_cov_PP_NG_BeatCoupling_b2_py = {"integrand_cov_PP_NG_BeatCoupling_b2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_113integrand_cov_PP_NG_BeatCoupling_b2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_113integrand_cov_PP_NG_BeatCoupling_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 1); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 2); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 3); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 4); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 5); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 6); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 7); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 8); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 9); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 10); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 11); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 12); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 13); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 14); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 15); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, 16); __PYX_ERR(0, 1581, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_b2_py") < 0)) __PYX_ERR(0, 1581, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1582, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1582, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1585, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1585, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1585, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1581, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1582, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1582, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1583, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_112integrand_cov_PP_NG_BeatCoupling_b2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_112integrand_cov_PP_NG_BeatCoupling_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1581, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1581, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1581, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1587
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1588
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1588, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1588, __pyx_L1_error)
  }

  /* "hitomi.pyx":1589
 *     return integrand_cov_PP_NG_BeatCoupling_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1589, __pyx_L1_error)
  }

  /* "hitomi.pyx":1587
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_b2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1581
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1593
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_115integrand_cov_PP_NG_BeatCoupling_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_115integrand_cov_PP_NG_BeatCoupling_bK2_py = {"integrand_cov_PP_NG_BeatCoupling_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_115integrand_cov_PP_NG_BeatCoupling_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_115integrand_cov_PP_NG_BeatCoupling_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1593, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_bK2_py") < 0)) __PYX_ERR(0, 1593, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1594, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1594, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1595, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1595, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1595, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1595, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1593, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1594, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1594, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1595, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_114integrand_cov_PP_NG_BeatCoupling_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_114integrand_cov_PP_NG_BeatCoupling_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1599
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1600
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1600, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1600, __pyx_L1_error)
  }

  /* "hitomi.pyx":1601
 *     return integrand_cov_PP_NG_BeatCoupling_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1601, __pyx_L1_error)
  }

  /* "hitomi.pyx":1599
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1593
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1606
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_117integrand_cov_PP_NG_BeatCoupling_b2_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_117integrand_cov_PP_NG_BeatCoupling_b2_b2_py = {"integrand_cov_PP_NG_BeatCoupling_b2_b2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_117integrand_cov_PP_NG_BeatCoupling_b2_b2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_117integrand_cov_PP_NG_BeatCoupling_b2_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_b2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 1); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 2); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 3); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 4); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 5); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 6); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 7); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 8); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 9); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 10); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 11); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 12); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 13); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 14); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 15); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, 16); __PYX_ERR(0, 1606, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_b2_b2_py") < 0)) __PYX_ERR(0, 1606, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1608, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1608, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1608, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1608, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1609, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1610, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1610, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1610, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1606, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1607, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1607, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1608, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_116integrand_cov_PP_NG_BeatCoupling_b2_b2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_116integrand_cov_PP_NG_BeatCoupling_b2_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_b2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1612
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1613
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1613, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1613, __pyx_L1_error)
  }

  /* "hitomi.pyx":1614
 *     return integrand_cov_PP_NG_BeatCoupling_b2_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1614, __pyx_L1_error)
  }

  /* "hitomi.pyx":1612
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_b2_b2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1606
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1619
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_119integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_119integrand_cov_PP_NG_BeatCoupling_b2_bK2_py = {"integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_119integrand_cov_PP_NG_BeatCoupling_b2_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_119integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_b2_bK2_py") < 0)) __PYX_ERR(0, 1619, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1620, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1620, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1621, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1621, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1621, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1621, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1622, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1623, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1623, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1623, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1619, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1620, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1620, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1621, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_118integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_118integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1625
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1626
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1626, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1626, __pyx_L1_error)
  }

  /* "hitomi.pyx":1627
 *     return integrand_cov_PP_NG_BeatCoupling_b2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1627, __pyx_L1_error)
  }

  /* "hitomi.pyx":1625
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_b2_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1619
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1632
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_121integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_121integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py = {"integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_121integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_121integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 1); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 2); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 3); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 4); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 5); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 6); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 7); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 8); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 9); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 10); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 11); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 12); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 13); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 14); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 15); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, 16); __PYX_ERR(0, 1632, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py") < 0)) __PYX_ERR(0, 1632, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1633, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1633, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1634, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1634, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1634, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1634, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1635, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1636, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1636, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1636, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1632, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1633, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1633, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1634, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_120integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_120integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1638
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1639
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1639, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1639, __pyx_L1_error)
  }

  /* "hitomi.pyx":1640
 *     return integrand_cov_PP_NG_BeatCoupling_bK2_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1640, __pyx_L1_error)
  }

  /* "hitomi.pyx":1638
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK2_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_bK2_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1632
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1645
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_123integrand_cov_PP_NG_BeatCoupling_b3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_123integrand_cov_PP_NG_BeatCoupling_b3_py = {"integrand_cov_PP_NG_BeatCoupling_b3_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_123integrand_cov_PP_NG_BeatCoupling_b3_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_123integrand_cov_PP_NG_BeatCoupling_b3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b3_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 1); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 2); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 3); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 4); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 5); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 6); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 7); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 8); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 9); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 10); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 11); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 12); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 13); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 14); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 15); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, 16); __PYX_ERR(0, 1645, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_b3_py") < 0)) __PYX_ERR(0, 1645, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1646, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1646, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1648, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1649, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1649, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1649, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_b3_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1645, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1646, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1646, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1647, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_122integrand_cov_PP_NG_BeatCoupling_b3_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_122integrand_cov_PP_NG_BeatCoupling_b3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_b3_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1645, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1645, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1645, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1651
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1652
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1652, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1652, __pyx_L1_error)
  }

  /* "hitomi.pyx":1653
 *     return integrand_cov_PP_NG_BeatCoupling_b3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1653, __pyx_L1_error)
  }

  /* "hitomi.pyx":1651
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_b3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_b3((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1645
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_b3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1658
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_125integrand_cov_PP_NG_BeatCoupling_bK3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_125integrand_cov_PP_NG_BeatCoupling_bK3_py = {"integrand_cov_PP_NG_BeatCoupling_bK3_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_125integrand_cov_PP_NG_BeatCoupling_bK3_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_125integrand_cov_PP_NG_BeatCoupling_bK3_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK3_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 1); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 2); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 3); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 4); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 5); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 6); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 7); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 8); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 9); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 10); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 11); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 12); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 13); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 14); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 15); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, 16); __PYX_ERR(0, 1658, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_bK3_py") < 0)) __PYX_ERR(0, 1658, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1660, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1662, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bK3_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1658, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1659, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1659, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1660, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_124integrand_cov_PP_NG_BeatCoupling_bK3_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_124integrand_cov_PP_NG_BeatCoupling_bK3_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bK3_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1658, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1658, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1658, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1664
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1665
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1665, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1665, __pyx_L1_error)
  }

  /* "hitomi.pyx":1666
 *     return integrand_cov_PP_NG_BeatCoupling_bK3(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1666, __pyx_L1_error)
  }

  /* "hitomi.pyx":1664
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bK3(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_bK3((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1658
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bK3_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1671
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_127integrand_cov_PP_NG_BeatCoupling_bDK_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_127integrand_cov_PP_NG_BeatCoupling_bDK_py = {"integrand_cov_PP_NG_BeatCoupling_bDK_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_127integrand_cov_PP_NG_BeatCoupling_bDK_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_127integrand_cov_PP_NG_BeatCoupling_bDK_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bDK_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 1); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 2); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 3); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 4); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 5); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 6); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 7); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 8); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 9); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 10); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 11); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 12); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 13); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 14); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 15); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, 16); __PYX_ERR(0, 1671, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_bDK_py") < 0)) __PYX_ERR(0, 1671, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1672, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1672, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1673, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1673, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1673, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1673, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1674, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1675, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1675, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1675, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bDK_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1671, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bDK_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1672, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1672, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1673, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_126integrand_cov_PP_NG_BeatCoupling_bDK_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_126integrand_cov_PP_NG_BeatCoupling_bDK_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bDK_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1671, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1671, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1671, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1677
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bDK(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1678
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bDK(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1678, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1678, __pyx_L1_error)
  }

  /* "hitomi.pyx":1679
 *     return integrand_cov_PP_NG_BeatCoupling_bDK(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1679, __pyx_L1_error)
  }

  /* "hitomi.pyx":1677
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bDK(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_bDK((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1671
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bDK_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1684
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_129integrand_cov_PP_NG_BeatCoupling_bO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_129integrand_cov_PP_NG_BeatCoupling_bO_py = {"integrand_cov_PP_NG_BeatCoupling_bO_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_129integrand_cov_PP_NG_BeatCoupling_bO_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_129integrand_cov_PP_NG_BeatCoupling_bO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bO_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 1); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 2); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 3); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 4); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 5); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 6); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 7); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 8); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 9); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 10); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 11); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 12); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 13); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 14); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 15); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, 16); __PYX_ERR(0, 1684, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_BeatCoupling_bO_py") < 0)) __PYX_ERR(0, 1684, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1685, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1685, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1686, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1687, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1687, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1687, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1687, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1687, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1688, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_BeatCoupling_bO_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1684, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1685, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1685, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1686, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_128integrand_cov_PP_NG_BeatCoupling_bO_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_128integrand_cov_PP_NG_BeatCoupling_bO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_BeatCoupling_bO_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1690
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1691
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1691, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1691, __pyx_L1_error)
  }

  /* "hitomi.pyx":1692
 *     return integrand_cov_PP_NG_BeatCoupling_bO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1692, __pyx_L1_error)
  }

  /* "hitomi.pyx":1690
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_BeatCoupling_bO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_BeatCoupling_bO((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1684
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_BeatCoupling_bO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1698
 * #################################
 * 
 * def integrand_cov_PP_NG_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_131integrand_cov_PP_NG_LocalMean_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_131integrand_cov_PP_NG_LocalMean_py = {"integrand_cov_PP_NG_LocalMean_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_131integrand_cov_PP_NG_LocalMean_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_131integrand_cov_PP_NG_LocalMean_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_b3;
  double __pyx_v_bK2;
  double __pyx_v_bK3;
  double __pyx_v_bDK;
  double __pyx_v_bO;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_b3,&__pyx_n_s_bK2,&__pyx_n_s_bK3,&__pyx_n_s_bDK,&__pyx_n_s_bO,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[23] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 1); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 2); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 3); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 4); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 5); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 6); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 7); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 8); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 9); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 10); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 11); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 12); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 13); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 14); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 15); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 16); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 17); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bDK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 18); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bO)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 19); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 20); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 21); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, 22); __PYX_ERR(0, 1698, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_py") < 0)) __PYX_ERR(0, 1698, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 23) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_b3 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_bK3 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_bK3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_bDK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_bDK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_bO = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_bO == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1703, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1703, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1703, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_py", 1, 23, 23, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1698, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1699, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1699, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1700, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_130integrand_cov_PP_NG_LocalMean_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_130integrand_cov_PP_NG_LocalMean_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1698, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1698, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1698, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1705
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1706
 *         ):
 *     return integrand_cov_PP_NG_LocalMean(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1706, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1706, __pyx_L1_error)
  }

  /* "hitomi.pyx":1707
 *     return integrand_cov_PP_NG_LocalMean(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, b3, bK2, bK3, bDK, bO,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1707, __pyx_L1_error)
  }

  /* "hitomi.pyx":1705
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1698
 * #################################
 * 
 * def integrand_cov_PP_NG_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1712
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_133integrand_cov_PP_NG_LocalMean_NL_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_133integrand_cov_PP_NG_LocalMean_NL_py = {"integrand_cov_PP_NG_LocalMean_NL_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_133integrand_cov_PP_NG_LocalMean_NL_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_133integrand_cov_PP_NG_LocalMean_NL_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_b3;
  double __pyx_v_bK2;
  double __pyx_v_bK3;
  double __pyx_v_bDK;
  double __pyx_v_bO;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_b3,&__pyx_n_s_bK2,&__pyx_n_s_bK3,&__pyx_n_s_bDK,&__pyx_n_s_bO,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[25] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 25: values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
        CYTHON_FALLTHROUGH;
        case 24: values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
        CYTHON_FALLTHROUGH;
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 1); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 2); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 3); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 4); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 5); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 6); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 7); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 8); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 9); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 10); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 11); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 12); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 13); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 14); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 15); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 16); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 17); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bDK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 18); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bO)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 19); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 20); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 21); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 22); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 23:
        if (likely((values[23] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 23); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 24:
        if (likely((values[24] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, 24); __PYX_ERR(0, 1712, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_NL_py") < 0)) __PYX_ERR(0, 1712, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 25) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
      values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
      values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1713, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1713, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1714, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1714, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1714, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1714, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1715, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1715, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1715, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1715, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1715, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_b3 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_bK3 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_bK3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_bDK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_bDK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_bO = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_bO == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1716, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1717, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1717, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1718, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[23]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1718, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[24]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1718, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_py", 1, 25, 25, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1712, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1713, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1713, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1714, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_132integrand_cov_PP_NG_LocalMean_NL_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_132integrand_cov_PP_NG_LocalMean_NL_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1712, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1712, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1712, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1720
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1721
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1721, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1721, __pyx_L1_error)
  }

  /* "hitomi.pyx":1722
 *     return integrand_cov_PP_NG_LocalMean_NL(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, b3, bK2, bK3, bDK, bO,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1722, __pyx_L1_error)
  }

  /* "hitomi.pyx":1720
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean_NL((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1712
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1728
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_135integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_135integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py = {"integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_135integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_135integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_b3;
  double __pyx_v_bK2;
  double __pyx_v_bK3;
  double __pyx_v_bDK;
  double __pyx_v_bO;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  double __pyx_v_sigma2_b;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_b3,&__pyx_n_s_bK2,&__pyx_n_s_bK3,&__pyx_n_s_bDK,&__pyx_n_s_bO,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,&__pyx_n_s_sigma2_b,0};
    PyObject* values[26] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 26: values[25] = PyTuple_GET_ITEM(__pyx_args, 25);
        CYTHON_FALLTHROUGH;
        case 25: values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
        CYTHON_FALLTHROUGH;
        case 24: values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
        CYTHON_FALLTHROUGH;
        case 23: values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
        CYTHON_FALLTHROUGH;
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 1); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 2); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 3); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 4); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 5); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 6); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 7); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 8); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 9); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 10); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 11); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 12); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 13); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 14); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 15); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 16); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 17); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bDK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 18); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bO)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 19); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 20); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 21); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 22:
        if (likely((values[22] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 22); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 23:
        if (likely((values[23] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 23); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 24:
        if (likely((values[24] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 24); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 25:
        if (likely((values[25] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_b)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, 25); __PYX_ERR(0, 1728, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py") < 0)) __PYX_ERR(0, 1728, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 26) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
      values[22] = PyTuple_GET_ITEM(__pyx_args, 22);
      values[23] = PyTuple_GET_ITEM(__pyx_args, 23);
      values[24] = PyTuple_GET_ITEM(__pyx_args, 24);
      values[25] = PyTuple_GET_ITEM(__pyx_args, 25);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1729, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1729, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1730, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1730, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1730, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1730, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1731, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1731, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1731, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1731, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1731, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_b3 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_bK3 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_bK3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_bDK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_bDK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_bO = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_bO == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1732, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1733, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1733, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[22]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1734, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[23]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1734, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[24]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1734, __pyx_L3_error)
    __pyx_v_sigma2_b = __pyx_PyFloat_AsDouble(values[25]); if (unlikely((__pyx_v_sigma2_b == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1734, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 1, 26, 26, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1728, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1729, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1729, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1730, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_134integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume, __pyx_v_sigma2_b);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_134integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_b3, double __pyx_v_bK2, double __pyx_v_bK3, double __pyx_v_bDK, double __pyx_v_bO, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume, double __pyx_v_sigma2_b) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1728, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1728, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1728, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1736
 *         double DeltaK, double nmean, double volume, double sigma2_b
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_Sigma2B(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1737
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_Sigma2B(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1737, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1737, __pyx_L1_error)
  }

  /* "hitomi.pyx":1738
 *     return integrand_cov_PP_NG_LocalMean_NL_Sigma2B(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, b3, bK2, bK3, bDK, bO,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1738, __pyx_L1_error)
  }

  /* "hitomi.pyx":1736
 *         double DeltaK, double nmean, double volume, double sigma2_b
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_Sigma2B(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean_NL_Sigma2B((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_b3, __pyx_v_bK2, __pyx_v_bK3, __pyx_v_bDK, __pyx_v_bO, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume, __pyx_v_sigma2_b)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1728
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1744
 *             DeltaK, nmean, volume, sigma2_b)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_137integrand_cov_PP_NG_LocalMean_NL_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_137integrand_cov_PP_NG_LocalMean_NL_b1_py = {"integrand_cov_PP_NG_LocalMean_NL_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_137integrand_cov_PP_NG_LocalMean_NL_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_137integrand_cov_PP_NG_LocalMean_NL_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 1); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 2); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 3); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 4); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 5); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 6); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 7); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 8); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 9); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 10); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 11); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 12); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 13); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 14); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 15); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 16); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 17); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, 18); __PYX_ERR(0, 1744, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_NL_b1_py") < 0)) __PYX_ERR(0, 1744, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1745, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1746, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1748, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1748, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1749, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1749, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1749, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b1_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1744, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1745, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1745, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1746, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_136integrand_cov_PP_NG_LocalMean_NL_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_136integrand_cov_PP_NG_LocalMean_NL_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1751
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1752
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1752, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1752, __pyx_L1_error)
  }

  /* "hitomi.pyx":1753
 *     return integrand_cov_PP_NG_LocalMean_NL_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1753, __pyx_L1_error)
  }

  /* "hitomi.pyx":1751
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean_NL_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1744
 *             DeltaK, nmean, volume, sigma2_b)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1759
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_139integrand_cov_PP_NG_LocalMean_NL_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_139integrand_cov_PP_NG_LocalMean_NL_b2_py = {"integrand_cov_PP_NG_LocalMean_NL_b2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_139integrand_cov_PP_NG_LocalMean_NL_b2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_139integrand_cov_PP_NG_LocalMean_NL_b2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_b2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 1); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 2); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 3); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 4); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 5); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 6); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 7); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 8); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 9); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 10); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 11); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 12); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 13); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 14); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 15); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 16); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 17); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, 18); __PYX_ERR(0, 1759, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_NL_b2_py") < 0)) __PYX_ERR(0, 1759, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1760, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1760, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1761, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1761, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1761, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1761, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1763, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1763, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1764, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1764, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1764, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_b2_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1759, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1760, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1760, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1761, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_138integrand_cov_PP_NG_LocalMean_NL_b2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_138integrand_cov_PP_NG_LocalMean_NL_b2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_b2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1759, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1759, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1759, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1766
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1767
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1767, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1767, __pyx_L1_error)
  }

  /* "hitomi.pyx":1768
 *     return integrand_cov_PP_NG_LocalMean_NL_b2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1768, __pyx_L1_error)
  }

  /* "hitomi.pyx":1766
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_b2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean_NL_b2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1759
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_b2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1774
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_141integrand_cov_PP_NG_LocalMean_NL_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_141integrand_cov_PP_NG_LocalMean_NL_bK2_py = {"integrand_cov_PP_NG_LocalMean_NL_bK2_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_141integrand_cov_PP_NG_LocalMean_NL_bK2_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_141integrand_cov_PP_NG_LocalMean_NL_bK2_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_bK2_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 1); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 2); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 3); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 4); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 5); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 6); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 7); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 8); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 9); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 10); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 11); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 12); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 13); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 14); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 15); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 16); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 17); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, 18); __PYX_ERR(0, 1774, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_PP_NG_LocalMean_NL_bK2_py") < 0)) __PYX_ERR(0, 1774, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1775, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1775, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1776, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1776, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1776, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1776, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1777, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1777, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1777, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1777, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1777, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1778, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1778, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1779, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1779, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1779, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1774, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1775, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1775, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1776, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_140integrand_cov_PP_NG_LocalMean_NL_bK2_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_140integrand_cov_PP_NG_LocalMean_NL_bK2_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ELL, int __pyx_v_ELL_dash, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_PP_NG_LocalMean_NL_bK2_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1781
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1782
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1782, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1782, __pyx_L1_error)
  }

  /* "hitomi.pyx":1783
 *     return integrand_cov_PP_NG_LocalMean_NL_bK2(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1783, __pyx_L1_error)
  }

  /* "hitomi.pyx":1781
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_PP_NG_LocalMean_NL_bK2(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ELL, ELL_dash, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_PP_NG_LocalMean_NL_bK2((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1774
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_PP_NG_LocalMean_NL_bK2_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1792
 * ################################
 * 
 * def integrand_B_NonGaussian_Local_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_143integrand_B_NonGaussian_Local_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_143integrand_B_NonGaussian_Local_py = {"integrand_B_NonGaussian_Local_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_143integrand_B_NonGaussian_Local_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_143integrand_B_NonGaussian_Local_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Local_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 1); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 2); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 3); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 4); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 5); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 6); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 7); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 8); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 9); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 10); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 11); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 12); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 13); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, 14); __PYX_ERR(0, 1792, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_NonGaussian_Local_py") < 0)) __PYX_ERR(0, 1792, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1793, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1793, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1794, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Local_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1792, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Local_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1793, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1793, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1794, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_142integrand_B_NonGaussian_Local_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_142integrand_B_NonGaussian_Local_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Local_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1792, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1792, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1792, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1796
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Local(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1797
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Local(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1797, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1797, __pyx_L1_error)
  }

  /* "hitomi.pyx":1798
 *     return integrand_B_NonGaussian_Local(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1798, __pyx_L1_error)
  }

  /* "hitomi.pyx":1796
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Local(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_NonGaussian_Local((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1792
 * ################################
 * 
 * def integrand_B_NonGaussian_Local_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Local_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1801
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_B_NonGaussian_Equilateral_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_145integrand_B_NonGaussian_Equilateral_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_145integrand_B_NonGaussian_Equilateral_py = {"integrand_B_NonGaussian_Equilateral_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_145integrand_B_NonGaussian_Equilateral_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_145integrand_B_NonGaussian_Equilateral_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Equilateral_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 1); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 2); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 3); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 4); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 5); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 6); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 7); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 8); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 9); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 10); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 11); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 12); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 13); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, 14); __PYX_ERR(0, 1801, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_NonGaussian_Equilateral_py") < 0)) __PYX_ERR(0, 1801, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1802, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1802, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Equilateral_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1801, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Equilateral_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1802, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1802, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1803, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_144integrand_B_NonGaussian_Equilateral_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_144integrand_B_NonGaussian_Equilateral_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Equilateral_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1801, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1801, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1801, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1805
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Equilateral(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1806
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Equilateral(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1806, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1806, __pyx_L1_error)
  }

  /* "hitomi.pyx":1807
 *     return integrand_B_NonGaussian_Equilateral(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1807, __pyx_L1_error)
  }

  /* "hitomi.pyx":1805
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Equilateral(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_NonGaussian_Equilateral((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1801
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_B_NonGaussian_Equilateral_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Equilateral_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1811
 * 
 * 
 * def integrand_B_NonGaussian_Orthogonal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_147integrand_B_NonGaussian_Orthogonal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_147integrand_B_NonGaussian_Orthogonal_py = {"integrand_B_NonGaussian_Orthogonal_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_147integrand_B_NonGaussian_Orthogonal_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_147integrand_B_NonGaussian_Orthogonal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Orthogonal_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 1); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 2); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 3); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 4); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 5); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 6); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 7); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 8); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 9); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 10); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 11); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 12); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 13); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, 14); __PYX_ERR(0, 1811, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_NonGaussian_Orthogonal_py") < 0)) __PYX_ERR(0, 1811, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1812, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1812, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1813, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1813, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1813, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1813, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1813, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1814, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_NonGaussian_Orthogonal_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1811, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Orthogonal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1812, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1812, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1813, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_146integrand_B_NonGaussian_Orthogonal_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_146integrand_B_NonGaussian_Orthogonal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_NonGaussian_Orthogonal_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1815
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Orthogonal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1816
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Orthogonal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1816, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1816, __pyx_L1_error)
  }

  /* "hitomi.pyx":1817
 *     return integrand_B_NonGaussian_Orthogonal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1817, __pyx_L1_error)
  }

  /* "hitomi.pyx":1815
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1):
 *     return integrand_B_NonGaussian_Orthogonal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_NonGaussian_Orthogonal((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1811
 * 
 * 
 * def integrand_B_NonGaussian_Orthogonal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_NonGaussian_Orthogonal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1821
 * 
 * 
 * def integrand_B_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_149integrand_B_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_149integrand_B_Tree_py = {"integrand_B_Tree_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_149integrand_B_Tree_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_149integrand_B_Tree_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 1); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 2); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 3); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 4); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 5); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 6); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 7); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 8); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 9); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 10); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 11); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 12); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 13); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 14); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 15); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, 16); __PYX_ERR(0, 1821, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_py") < 0)) __PYX_ERR(0, 1821, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1822, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1822, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1824, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1821, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1822, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1822, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1823, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_148integrand_B_Tree_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_148integrand_B_Tree_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1826
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1, double b2, double bK2
 *         ):
 *     return integrand_B_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1827
 *         ):
 *     return integrand_B_Tree(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1827, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1827, __pyx_L1_error)
  }

  /* "hitomi.pyx":1828
 *     return integrand_B_Tree(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1828, __pyx_L1_error)
  }

  /* "hitomi.pyx":1826
 *         double alpha_perp, double alpha_parallel, double sigma8, double fz, double b1, double b2, double bK2
 *         ):
 *     return integrand_B_Tree(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1821
 * 
 * 
 * def integrand_B_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1832
 *             b2, bK2)
 * 
 * def integrand_B_Tree_FoG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_151integrand_B_Tree_FoG_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_151integrand_B_Tree_FoG_py = {"integrand_B_Tree_FoG_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_151integrand_B_Tree_FoG_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_151integrand_B_Tree_FoG_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_FoG_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 1); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 2); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 3); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 4); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 5); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 6); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 7); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 8); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 9); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 10); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 11); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 12); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 13); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 14); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 15); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 16); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 17); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 18); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, 19); __PYX_ERR(0, 1832, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_FoG_py") < 0)) __PYX_ERR(0, 1832, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1833, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1833, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1834, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1834, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1834, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1834, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1834, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1835, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1836, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1836, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1836, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_FoG_py", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1832, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_FoG_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1833, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1833, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1834, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_150integrand_B_Tree_FoG_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_150integrand_B_Tree_FoG_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_FoG_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1832, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1832, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1832, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1838
 *         double c1, double c2, double knl,
 *         ):
 *     return integrand_B_Tree_FoG(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1839
 *         ):
 *     return integrand_B_Tree_FoG(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1839, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1839, __pyx_L1_error)
  }

  /* "hitomi.pyx":1840
 *     return integrand_B_Tree_FoG(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1840, __pyx_L1_error)
  }

  /* "hitomi.pyx":1838
 *         double c1, double c2, double knl,
 *         ):
 *     return integrand_B_Tree_FoG(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_FoG((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1832
 *             b2, bK2)
 * 
 * def integrand_B_Tree_FoG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_FoG_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1845
 *             c1, c2, knl)
 * 
 * def integrand_B_Tree_DampIvanov_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_153integrand_B_Tree_DampIvanov_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_153integrand_B_Tree_DampIvanov_py = {"integrand_B_Tree_DampIvanov_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_153integrand_B_Tree_DampIvanov_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_153integrand_B_Tree_DampIvanov_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_rbao;
  double __pyx_v_ks;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_DampIvanov_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_rbao,&__pyx_n_s_ks,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 1); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 2); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 3); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 4); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 5); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 6); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 7); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 8); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 9); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 10); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 11); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 12); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 13); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 14); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 15); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 16); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_rbao)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 17); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ks)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, 18); __PYX_ERR(0, 1845, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_DampIvanov_py") < 0)) __PYX_ERR(0, 1845, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1846, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1846, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1847, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1847, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1847, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1847, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1847, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1848, __pyx_L3_error)
    __pyx_v_rbao = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_rbao == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1849, __pyx_L3_error)
    __pyx_v_ks = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_ks == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1849, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_DampIvanov_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1845, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_DampIvanov_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1846, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1846, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1847, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_152integrand_B_Tree_DampIvanov_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_rbao, __pyx_v_ks);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_152integrand_B_Tree_DampIvanov_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_rbao, double __pyx_v_ks) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_DampIvanov_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1851
 *         double rbao, double ks,
 *         ):
 *     return integrand_B_Tree_DampIvanov(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1852
 *         ):
 *     return integrand_B_Tree_DampIvanov(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1852, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1852, __pyx_L1_error)
  }

  /* "hitomi.pyx":1853
 *     return integrand_B_Tree_DampIvanov(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1853, __pyx_L1_error)
  }

  /* "hitomi.pyx":1851
 *         double rbao, double ks,
 *         ):
 *     return integrand_B_Tree_DampIvanov(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_DampIvanov((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_rbao, __pyx_v_ks)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1845
 *             c1, c2, knl)
 * 
 * def integrand_B_Tree_DampIvanov_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_DampIvanov_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1858
 *             rbao, ks)
 * 
 * def integrand_B_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_155integrand_B_FoG_Damping_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_155integrand_B_FoG_Damping_diag_py = {"integrand_B_FoG_Damping_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_155integrand_B_FoG_Damping_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_155integrand_B_FoG_Damping_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bG2;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_FoG_Damping_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bG2,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 1); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 2); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 3); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 4); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 5); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 6); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 7); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 8); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 9); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 10); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 11); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 12); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 13); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bG2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 14); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 15); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 16); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 17); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 18); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, 19); __PYX_ERR(0, 1858, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_FoG_Damping_diag_py") < 0)) __PYX_ERR(0, 1858, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1859, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1859, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1860, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1860, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1860, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1860, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_bG2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_bG2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1861, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1862, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1862, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1862, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1863, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1863, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_diag_py", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1858, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_FoG_Damping_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1859, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1859, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1860, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_154integrand_B_FoG_Damping_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_154integrand_B_FoG_Damping_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, double __pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_FoG_Damping_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1865
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_FoG_Damping_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1866
 *         ):
 *     return integrand_B_FoG_Damping_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 *             b2, bG2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1866, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1866, __pyx_L1_error)
  }

  /* "hitomi.pyx":1867
 *     return integrand_B_FoG_Damping_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,             # <<<<<<<<<<<<<<
 *             b2, bG2,
 *             c1, c2, knl,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1867, __pyx_L1_error)
  }

  /* "hitomi.pyx":1865
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_FoG_Damping_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_FoG_Damping_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_v_dSigma2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1858
 *             rbao, ks)
 * 
 * def integrand_B_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_FoG_Damping_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1872
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_FoG_Damping_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_157integrand_B_FoG_Damping_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_157integrand_B_FoG_Damping_py = {"integrand_B_FoG_Damping_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_157integrand_B_FoG_Damping_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_157integrand_B_FoG_Damping_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bG2;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_FoG_Damping_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bG2,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[21] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 1); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 2); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 3); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 4); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 5); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 6); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 7); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 8); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 9); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 10); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 11); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 12); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 13); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 14); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bG2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 15); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 16); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 17); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 18); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 19); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, 20); __PYX_ERR(0, 1872, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_FoG_Damping_py") < 0)) __PYX_ERR(0, 1872, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 21) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1873, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1873, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1874, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1874, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1874, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1874, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1874, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_bG2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_bG2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1875, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1876, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1876, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1876, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1877, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1877, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_FoG_Damping_py", 1, 21, 21, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1872, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_FoG_Damping_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1873, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1873, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1874, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_156integrand_B_FoG_Damping_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_156integrand_B_FoG_Damping_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bG2, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Sigma2, double __pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_FoG_Damping_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1879
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_FoG_Damping(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, alpha_perp, alpha_parallel, f, b1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1880
 *         ):
 *     return integrand_B_FoG_Damping(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, alpha_perp, alpha_parallel, f, b1,
 *             b2, bG2,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1880, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1880, __pyx_L1_error)
  }

  /* "hitomi.pyx":1881
 *     return integrand_B_FoG_Damping(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, alpha_perp, alpha_parallel, f, b1,             # <<<<<<<<<<<<<<
 *             b2, bG2,
 *             c1, c2, knl,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1881, __pyx_L1_error)
  }

  /* "hitomi.pyx":1879
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_FoG_Damping(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_FoG_Damping((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_b2, __pyx_v_bG2, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Sigma2, __pyx_v_dSigma2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1872
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_FoG_Damping_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_FoG_Damping_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1886
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_SN_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_159integrand_B_SN_FoG_Damping_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_159integrand_B_SN_FoG_Damping_diag_py = {"integrand_B_SN_FoG_Damping_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_159integrand_B_SN_FoG_Damping_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_159integrand_B_SN_FoG_Damping_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_f;
  double __pyx_v_b1;
  double __pyx_v_c1;
  double __pyx_v_c2;
  double __pyx_v_knl;
  double __pyx_v_Pshot;
  double __pyx_v_Bshot;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_SN_FoG_Damping_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_f,&__pyx_n_s_b1,&__pyx_n_s_c1,&__pyx_n_s_c2,&__pyx_n_s_knl,&__pyx_n_s_Pshot,&__pyx_n_s_Bshot,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,0};
    PyObject* values[20] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 1); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 2); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 3); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 4); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 5); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 6); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 7); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 8); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 9); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 10); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 11); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 12); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 13); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_c2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 14); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_knl)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 15); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Pshot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 16); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Bshot)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 17); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 18); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, 19); __PYX_ERR(0, 1886, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_SN_FoG_Damping_diag_py") < 0)) __PYX_ERR(0, 1886, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 20) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1887, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1887, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1888, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1888, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1888, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1888, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1889, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1889, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1889, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1889, __pyx_L3_error)
    __pyx_v_c1 = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_c1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
    __pyx_v_c2 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_c2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
    __pyx_v_knl = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_knl == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
    __pyx_v_Pshot = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_Pshot == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
    __pyx_v_Bshot = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_Bshot == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1891, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1891, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_SN_FoG_Damping_diag_py", 1, 20, 20, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1886, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_SN_FoG_Damping_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1887, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1887, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1888, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_158integrand_B_SN_FoG_Damping_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Pshot, __pyx_v_Bshot, __pyx_v_Sigma2, __pyx_v_dSigma2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_158integrand_B_SN_FoG_Damping_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_f, double __pyx_v_b1, double __pyx_v_c1, double __pyx_v_c2, double __pyx_v_knl, double __pyx_v_Pshot, double __pyx_v_Bshot, double __pyx_v_Sigma2, double __pyx_v_dSigma2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_SN_FoG_Damping_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1893
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_SN_FoG_Damping_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1894
 *         ):
 *     return integrand_B_SN_FoG_Damping_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 *             c1, c2, knl, Pshot, Bshot,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1894, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1894, __pyx_L1_error)
  }

  /* "hitomi.pyx":1895
 *     return integrand_B_SN_FoG_Damping_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,             # <<<<<<<<<<<<<<
 *             c1, c2, knl, Pshot, Bshot,
 *             Sigma2, dSigma2)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1895, __pyx_L1_error)
  }

  /* "hitomi.pyx":1893
 *         double Sigma2, double dSigma2
 *         ):
 *     return integrand_B_SN_FoG_Damping_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, alpha_perp, alpha_parallel, f, b1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_SN_FoG_Damping_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_f, __pyx_v_b1, __pyx_v_c1, __pyx_v_c2, __pyx_v_knl, __pyx_v_Pshot, __pyx_v_Bshot, __pyx_v_Sigma2, __pyx_v_dSigma2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1886
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_SN_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_SN_FoG_Damping_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1899
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_161integrand_B_Tree_NoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_161integrand_B_Tree_NoWiggle_py = {"integrand_B_Tree_NoWiggle_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_161integrand_B_Tree_NoWiggle_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_161integrand_B_Tree_NoWiggle_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,0};
    PyObject* values[17] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 1); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 2); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 3); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 4); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 5); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 6); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 7); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 8); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 9); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 10); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 11); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 12); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 13); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 14); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 15); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, 16); __PYX_ERR(0, 1899, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_py") < 0)) __PYX_ERR(0, 1899, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 17) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1900, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1900, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1901, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1901, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1901, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1901, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1901, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1902, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1902, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1902, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1902, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1902, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1903, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_py", 1, 17, 17, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1899, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1900, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1900, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1901, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_160integrand_B_Tree_NoWiggle_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_160integrand_B_Tree_NoWiggle_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1899, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1899, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1899, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1905
 *         double b2, double bK2
 *         ):
 *     return integrand_B_Tree_NoWiggle(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1906
 *         ):
 *     return integrand_B_Tree_NoWiggle(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1906, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1906, __pyx_L1_error)
  }

  /* "hitomi.pyx":1907
 *     return integrand_B_Tree_NoWiggle(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1907, __pyx_L1_error)
  }

  /* "hitomi.pyx":1905
 *         double b2, double bK2
 *         ):
 *     return integrand_B_Tree_NoWiggle(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1899
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1911
 *             b2, bK2)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_163integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_163integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py = {"integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_163integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_163integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 1); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 2); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 3); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 4); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 5); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 6); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 7); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 8); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 9); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, 10); __PYX_ERR(0, 1911, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py") < 0)) __PYX_ERR(0, 1911, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1912, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1912, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1913, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1914, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1911, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1912, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1912, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1913, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_162integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_162integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1911, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1911, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1911, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1915
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1916
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1916, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1916, __pyx_L1_error)
  }

  /* "hitomi.pyx":1917
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)             # <<<<<<<<<<<<<<
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1917, __pyx_L1_error)
  }

  /* "hitomi.pyx":1915
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1911
 *             b2, bK2)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1919
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_165integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_165integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py = {"integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_165integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_165integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 1); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 2); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 3); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 4); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 5); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 6); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 7); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 8); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 9); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, 10); __PYX_ERR(0, 1919, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py") < 0)) __PYX_ERR(0, 1919, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1920, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1920, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1921, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1921, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1921, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1921, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1921, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1922, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1919, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1920, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1920, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1921, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_164integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_164integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1923
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1924
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1924, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1924, __pyx_L1_error)
  }

  /* "hitomi.pyx":1925
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)             # <<<<<<<<<<<<<<
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1925, __pyx_L1_error)
  }

  /* "hitomi.pyx":1923
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1923, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1919
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1927
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_167integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_167integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py = {"integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_167integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_167integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 1); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 2); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 3); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 4); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 5); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 6); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 7); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 8); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 9); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, 10); __PYX_ERR(0, 1927, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py") < 0)) __PYX_ERR(0, 1927, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1928, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1928, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1929, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1930, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1927, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1928, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1928, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1929, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_166integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_166integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1927, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1927, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1927, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1931
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1932
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1932, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1932, __pyx_L1_error)
  }

  /* "hitomi.pyx":1933
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)             # <<<<<<<<<<<<<<
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1933, __pyx_L1_error)
  }

  /* "hitomi.pyx":1931
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8):
 *     return integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1927
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1935
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_169integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_169integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py = {"integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_169integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_169integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  double __pyx_v_sigma2_perp;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,&__pyx_n_s_sigma2_perp,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 1); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 2); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 3); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 4); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 5); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 6); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 7); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 8); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 9); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 10); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, 11); __PYX_ERR(0, 1935, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py") < 0)) __PYX_ERR(0, 1935, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1936, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1936, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1937, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1937, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1937, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1937, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1937, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1938, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1938, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1935, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1936, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1936, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1937, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_168integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_168integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1935, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1935, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1935, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1939
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1940
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1940, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1940, __pyx_L1_error)
  }

  /* "hitomi.pyx":1941
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)             # <<<<<<<<<<<<<<
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1941, __pyx_L1_error)
  }

  /* "hitomi.pyx":1939
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1935
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1943
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_171integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_171integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py = {"integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_171integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_171integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  double __pyx_v_sigma2_perp;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,&__pyx_n_s_sigma2_perp,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 1); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 2); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 3); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 4); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 5); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 6); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 7); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 8); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 9); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 10); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, 11); __PYX_ERR(0, 1943, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py") < 0)) __PYX_ERR(0, 1943, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1944, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1944, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1945, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1946, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1946, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1943, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1944, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1944, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1945, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_170integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_170integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1943, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1943, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1943, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1947
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1948
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1948, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1948, __pyx_L1_error)
  }

  /* "hitomi.pyx":1949
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1949, __pyx_L1_error)
  }

  /* "hitomi.pyx":1947
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1943
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1952
 * 
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_173integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_173integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py = {"integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_173integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_173integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_sigma8;
  double __pyx_v_sigma2_perp;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_sigma8,&__pyx_n_s_sigma2_perp,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 1); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 2); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 3); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 4); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 5); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 6); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 7); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 8); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 9); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 10); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, 11); __PYX_ERR(0, 1952, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py") < 0)) __PYX_ERR(0, 1952, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1953, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1953, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1954, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1954, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1954, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1954, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1954, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1955, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1955, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1952, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1953, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1953, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1954, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_172integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_172integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_sigma8, double __pyx_v_sigma2_perp) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1952, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1952, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1952, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1956
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1957
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1957, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1957, __pyx_L1_error)
  }

  /* "hitomi.pyx":1958
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1958, __pyx_L1_error)
  }

  /* "hitomi.pyx":1956
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double sigma8, double sigma2_perp):
 *     return integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_sigma8, __pyx_v_sigma2_perp)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1952
 * 
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1961
 * 
 * 
 * def integrand_B_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_175integrand_B_Tree_BAO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_175integrand_B_Tree_BAO_py = {"integrand_B_Tree_BAO_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_175integrand_B_Tree_BAO_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_175integrand_B_Tree_BAO_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 1); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 2); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 3); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 4); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 5); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 6); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 7); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 8); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 9); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 10); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 11); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 12); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 13); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 14); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 15); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 16); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 17); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, 18); __PYX_ERR(0, 1961, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_py") < 0)) __PYX_ERR(0, 1961, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1962, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1962, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1963, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1964, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1964, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1964, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1964, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1964, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1965, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1965, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1966, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1966, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1961, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1962, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1962, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1963, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_174integrand_B_Tree_BAO_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_174integrand_B_Tree_BAO_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1961, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1961, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1961, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1968
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1969
 *         ):
 *     return integrand_B_Tree_BAO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1969, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1969, __pyx_L1_error)
  }

  /* "hitomi.pyx":1970
 *     return integrand_B_Tree_BAO(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1970, __pyx_L1_error)
  }

  /* "hitomi.pyx":1968
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1961
 * 
 * 
 * def integrand_B_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1975
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_177integrand_B_Tree_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_177integrand_B_Tree_Reconstructed_py = {"integrand_B_Tree_Reconstructed_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_177integrand_B_Tree_Reconstructed_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_177integrand_B_Tree_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_b1_fid;
  double __pyx_v_R;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_Reconstructed_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_b1_fid,&__pyx_n_s_R,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 1); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 2); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 3); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 4); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 5); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 6); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 7); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 8); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 9); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 10); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 11); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 12); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 13); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 14); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 15); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 16); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1_fid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 17); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_R)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, 18); __PYX_ERR(0, 1975, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_Reconstructed_py") < 0)) __PYX_ERR(0, 1975, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1976, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1976, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1977, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1978, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1979, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1979, __pyx_L3_error)
    __pyx_v_b1_fid = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_b1_fid == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1980, __pyx_L3_error)
    __pyx_v_R = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_R == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1980, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_Reconstructed_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1975, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1976, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1976, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1977, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_176integrand_B_Tree_Reconstructed_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_b1_fid, __pyx_v_R);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_176integrand_B_Tree_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_b1_fid, double __pyx_v_R) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_Reconstructed_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1975, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1975, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1975, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1982
 *         double b1_fid, double R
 *         ):
 *     return integrand_B_Tree_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1983
 *         ):
 *     return integrand_B_Tree_Reconstructed(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1983, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1983, __pyx_L1_error)
  }

  /* "hitomi.pyx":1984
 *     return integrand_B_Tree_Reconstructed(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1984, __pyx_L1_error)
  }

  /* "hitomi.pyx":1982
 *         double b1_fid, double R
 *         ):
 *     return integrand_B_Tree_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_Reconstructed((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_b1_fid, __pyx_v_R)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1982, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1975
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":1989
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_NoWiggle_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_179integrand_B_Tree_NoWiggle_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_179integrand_B_Tree_NoWiggle_Reconstructed_py = {"integrand_B_Tree_NoWiggle_Reconstructed_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_179integrand_B_Tree_NoWiggle_Reconstructed_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_179integrand_B_Tree_NoWiggle_Reconstructed_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_b2;
  double __pyx_v_bK2;
  double __pyx_v_b1_fid;
  double __pyx_v_R;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_Reconstructed_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_b2,&__pyx_n_s_bK2,&__pyx_n_s_b1_fid,&__pyx_n_s_R,0};
    PyObject* values[19] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 1); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 2); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 3); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 4); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 5); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 6); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 7); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 8); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 9); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 10); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 11); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 12); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 13); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 14); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 15); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bK2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 16); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1_fid)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 17); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_R)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, 18); __PYX_ERR(0, 1989, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_Reconstructed_py") < 0)) __PYX_ERR(0, 1989, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 19) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1990, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1990, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1991, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1991, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1991, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1991, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1991, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1992, __pyx_L3_error)
    __pyx_v_b2 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_b2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1993, __pyx_L3_error)
    __pyx_v_bK2 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_bK2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1993, __pyx_L3_error)
    __pyx_v_b1_fid = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_b1_fid == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1994, __pyx_L3_error)
    __pyx_v_R = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_R == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1994, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_Reconstructed_py", 1, 19, 19, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1989, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 1990, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 1990, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 1991, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_178integrand_B_Tree_NoWiggle_Reconstructed_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_b1_fid, __pyx_v_R);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_178integrand_B_Tree_NoWiggle_Reconstructed_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_b2, double __pyx_v_bK2, double __pyx_v_b1_fid, double __pyx_v_R) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_Reconstructed_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1989, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1989, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 1989, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":1996
 *         double b1_fid, double R
 *         ):
 *     return integrand_B_Tree_NoWiggle_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":1997
 *         ):
 *     return integrand_B_Tree_NoWiggle_Reconstructed(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1997, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1997, __pyx_L1_error)
  }

  /* "hitomi.pyx":1998
 *     return integrand_B_Tree_NoWiggle_Reconstructed(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             b2, bK2,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 1998, __pyx_L1_error)
  }

  /* "hitomi.pyx":1996
 *         double b1_fid, double R
 *         ):
 *     return integrand_B_Tree_NoWiggle_Reconstructed(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_Reconstructed((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_b2, __pyx_v_bK2, __pyx_v_b1_fid, __pyx_v_R)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":1989
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_NoWiggle_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_Reconstructed_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2003
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_BAO_Template_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_181integrand_B_Tree_BAO_Template_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_181integrand_B_Tree_BAO_Template_py = {"integrand_B_Tree_BAO_Template_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_181integrand_B_Tree_BAO_Template_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_181integrand_B_Tree_BAO_Template_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_Template_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,&__pyx_n_s_parameters,0};
    PyObject* values[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 1); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 2); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 3); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 4); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 5); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 6); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 7); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 8); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 9); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 10); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 11); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 12); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 13); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, 14); __PYX_ERR(0, 2003, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_Template_py") < 0)) __PYX_ERR(0, 2003, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 15) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2004, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2004, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2005, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2005, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2005, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2005, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2005, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2006, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2006, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2007, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2007, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[14]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2008, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_Template_py", 1, 15, 15, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2003, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_Template_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2004, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2004, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2005, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_180integrand_B_Tree_BAO_Template_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_180integrand_B_Tree_BAO_Template_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_Template_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2003, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2003, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2003, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2009
 *         double sigma2_perp, double sigma2_para,
 *         char * parameters):
 *     return integrand_B_Tree_BAO_Template(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2010
 *         char * parameters):
 *     return integrand_B_Tree_BAO_Template(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2010, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2010, __pyx_L1_error)
  }

  /* "hitomi.pyx":2011
 *     return integrand_B_Tree_BAO_Template(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para,
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2011, __pyx_L1_error)
  }

  /* "hitomi.pyx":2009
 *         double sigma2_perp, double sigma2_para,
 *         char * parameters):
 *     return integrand_B_Tree_BAO_Template(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_Template((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2009, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2003
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_BAO_Template_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_Template_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2017
 * 
 * 
 * def integrand_B_Tree_BAO_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_183integrand_B_Tree_BAO_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_183integrand_B_Tree_BAO_b1_b1_b1_py = {"integrand_B_Tree_BAO_b1_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_183integrand_B_Tree_BAO_b1_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_183integrand_B_Tree_BAO_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 1); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 2); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 3); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 4); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 5); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 6); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 7); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 8); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 9); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 10); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 11); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 12); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, 13); __PYX_ERR(0, 2017, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1_b1_b1_py") < 0)) __PYX_ERR(0, 2017, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2018, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2018, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2019, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2020, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2020, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2021, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2021, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_b1_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2017, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2018, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2018, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2019, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_182integrand_B_Tree_BAO_b1_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_182integrand_B_Tree_BAO_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2017, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2017, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2017, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2023
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2024
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2024, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2024, __pyx_L1_error)
  }

  /* "hitomi.pyx":2025
 *     return integrand_B_Tree_BAO_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2025, __pyx_L1_error)
  }

  /* "hitomi.pyx":2023
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2023, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2017
 * 
 * 
 * def integrand_B_Tree_BAO_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2029
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_185integrand_B_Tree_BAO_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_185integrand_B_Tree_BAO_b1_b1_f_py = {"integrand_B_Tree_BAO_b1_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_185integrand_B_Tree_BAO_b1_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_185integrand_B_Tree_BAO_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2029, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1_b1_f_py") < 0)) __PYX_ERR(0, 2029, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2030, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2030, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2031, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2032, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2032, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2033, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2033, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_b1_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2029, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2030, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2030, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2031, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_184integrand_B_Tree_BAO_b1_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_184integrand_B_Tree_BAO_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2029, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2029, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2029, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2035
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2036
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2036, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2036, __pyx_L1_error)
  }

  /* "hitomi.pyx":2037
 *     return integrand_B_Tree_BAO_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2037, __pyx_L1_error)
  }

  /* "hitomi.pyx":2035
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2029
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2041
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_187integrand_B_Tree_BAO_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_187integrand_B_Tree_BAO_b1_f_f_py = {"integrand_B_Tree_BAO_b1_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_187integrand_B_Tree_BAO_b1_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_187integrand_B_Tree_BAO_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2041, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1_f_f_py") < 0)) __PYX_ERR(0, 2041, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2042, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2042, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2043, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2044, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2044, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2045, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2045, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2041, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2042, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2042, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2043, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_186integrand_B_Tree_BAO_b1_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_186integrand_B_Tree_BAO_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2047
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2048
 *         ):
 *     return integrand_B_Tree_BAO_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2048, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2048, __pyx_L1_error)
  }

  /* "hitomi.pyx":2049
 *     return integrand_B_Tree_BAO_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2049, __pyx_L1_error)
  }

  /* "hitomi.pyx":2047
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2041
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2053
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_189integrand_B_Tree_BAO_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_189integrand_B_Tree_BAO_b2_b1_b1_py = {"integrand_B_Tree_BAO_b2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_189integrand_B_Tree_BAO_b2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_189integrand_B_Tree_BAO_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 1); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 2); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 3); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 4); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 5); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 6); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 7); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 8); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 9); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 10); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 11); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 12); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, 13); __PYX_ERR(0, 2053, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b2_b1_b1_py") < 0)) __PYX_ERR(0, 2053, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2054, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2054, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2055, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2056, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2056, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2057, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2057, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_b1_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2053, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2054, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2054, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2055, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_188integrand_B_Tree_BAO_b2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_188integrand_B_Tree_BAO_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2053, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2053, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2053, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2059
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2060
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2060, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2060, __pyx_L1_error)
  }

  /* "hitomi.pyx":2061
 *     return integrand_B_Tree_BAO_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2061, __pyx_L1_error)
  }

  /* "hitomi.pyx":2059
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2053
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2065
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_191integrand_B_Tree_BAO_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_191integrand_B_Tree_BAO_b2_b1_f_py = {"integrand_B_Tree_BAO_b2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_191integrand_B_Tree_BAO_b2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_191integrand_B_Tree_BAO_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2065, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b2_b1_f_py") < 0)) __PYX_ERR(0, 2065, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2068, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2069, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2069, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_b1_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2065, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2066, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2066, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2067, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_190integrand_B_Tree_BAO_b2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_190integrand_B_Tree_BAO_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2065, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2065, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2065, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2071
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2072
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2072, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2072, __pyx_L1_error)
  }

  /* "hitomi.pyx":2073
 *     return integrand_B_Tree_BAO_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2073, __pyx_L1_error)
  }

  /* "hitomi.pyx":2071
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2065
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2077
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_193integrand_B_Tree_BAO_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_193integrand_B_Tree_BAO_b2_f_f_py = {"integrand_B_Tree_BAO_b2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_193integrand_B_Tree_BAO_b2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_193integrand_B_Tree_BAO_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2077, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b2_f_f_py") < 0)) __PYX_ERR(0, 2077, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2078, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2078, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2079, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2079, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2079, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2079, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2079, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2080, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2080, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2081, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2081, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b2_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2077, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2078, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2078, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2079, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_192integrand_B_Tree_BAO_b2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_192integrand_B_Tree_BAO_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2077, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2077, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2077, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2083
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2084
 *         ):
 *     return integrand_B_Tree_BAO_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2084, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2084, __pyx_L1_error)
  }

  /* "hitomi.pyx":2085
 *     return integrand_B_Tree_BAO_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2085, __pyx_L1_error)
  }

  /* "hitomi.pyx":2083
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2083, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2077
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2089
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_195integrand_B_Tree_BAO_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_195integrand_B_Tree_BAO_bK2_b1_b1_py = {"integrand_B_Tree_BAO_bK2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_195integrand_B_Tree_BAO_bK2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_195integrand_B_Tree_BAO_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 1); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 2); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 3); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 4); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 5); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 6); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 7); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 8); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 9); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 10); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 11); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 12); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, 13); __PYX_ERR(0, 2089, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_bK2_b1_b1_py") < 0)) __PYX_ERR(0, 2089, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2090, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2090, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2091, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2091, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2091, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2091, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2091, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2092, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2092, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2093, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2093, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_b1_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2089, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2090, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2090, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2091, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_194integrand_B_Tree_BAO_bK2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_194integrand_B_Tree_BAO_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2089, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2089, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2089, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2095
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2096
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2096, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2096, __pyx_L1_error)
  }

  /* "hitomi.pyx":2097
 *     return integrand_B_Tree_BAO_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2097, __pyx_L1_error)
  }

  /* "hitomi.pyx":2095
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_bK2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2089
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2101
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_197integrand_B_Tree_BAO_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_197integrand_B_Tree_BAO_bK2_b1_f_py = {"integrand_B_Tree_BAO_bK2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_197integrand_B_Tree_BAO_bK2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_197integrand_B_Tree_BAO_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2101, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_bK2_b1_f_py") < 0)) __PYX_ERR(0, 2101, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2102, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2102, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2103, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2104, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2104, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2105, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2105, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_b1_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2101, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2102, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2102, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2103, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_196integrand_B_Tree_BAO_bK2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_196integrand_B_Tree_BAO_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2101, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2101, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2101, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2107
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2108
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2108, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2108, __pyx_L1_error)
  }

  /* "hitomi.pyx":2109
 *     return integrand_B_Tree_BAO_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2109, __pyx_L1_error)
  }

  /* "hitomi.pyx":2107
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_bK2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2101
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2113
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_199integrand_B_Tree_BAO_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_199integrand_B_Tree_BAO_bK2_f_f_py = {"integrand_B_Tree_BAO_bK2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_199integrand_B_Tree_BAO_bK2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_199integrand_B_Tree_BAO_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2113, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_bK2_f_f_py") < 0)) __PYX_ERR(0, 2113, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2114, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2114, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2115, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2116, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2116, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2117, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2117, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_bK2_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2113, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2114, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2114, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2115, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_198integrand_B_Tree_BAO_bK2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_198integrand_B_Tree_BAO_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_bK2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2113, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2113, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2113, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2119
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2120
 *         ):
 *     return integrand_B_Tree_BAO_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2120, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2120, __pyx_L1_error)
  }

  /* "hitomi.pyx":2121
 *     return integrand_B_Tree_BAO_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2121, __pyx_L1_error)
  }

  /* "hitomi.pyx":2119
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_bK2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2113
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2125
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_201integrand_B_Tree_BAO_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_201integrand_B_Tree_BAO_b1f_b1_b1_py = {"integrand_B_Tree_BAO_b1f_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_201integrand_B_Tree_BAO_b1f_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_201integrand_B_Tree_BAO_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 1); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 2); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 3); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 4); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 5); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 6); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 7); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 8); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 9); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 10); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 11); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 12); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, 13); __PYX_ERR(0, 2125, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1f_b1_b1_py") < 0)) __PYX_ERR(0, 2125, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2126, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2126, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2127, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2127, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2127, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2127, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2127, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2128, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2128, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2129, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2129, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_b1_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2125, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2126, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2127, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_200integrand_B_Tree_BAO_b1f_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_200integrand_B_Tree_BAO_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2131
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2132
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2132, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2132, __pyx_L1_error)
  }

  /* "hitomi.pyx":2133
 *     return integrand_B_Tree_BAO_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2133, __pyx_L1_error)
  }

  /* "hitomi.pyx":2131
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1f_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2125
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2137
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_203integrand_B_Tree_BAO_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_203integrand_B_Tree_BAO_b1f_b1_f_py = {"integrand_B_Tree_BAO_b1f_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_203integrand_B_Tree_BAO_b1f_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_203integrand_B_Tree_BAO_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2137, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1f_b1_f_py") < 0)) __PYX_ERR(0, 2137, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2138, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2138, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2139, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2139, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2139, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2139, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2139, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2140, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2140, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2141, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2141, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_b1_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2137, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2138, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2138, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2139, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_202integrand_B_Tree_BAO_b1f_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_202integrand_B_Tree_BAO_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2137, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2137, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2137, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2143
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2144
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2144, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2144, __pyx_L1_error)
  }

  /* "hitomi.pyx":2145
 *     return integrand_B_Tree_BAO_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2145, __pyx_L1_error)
  }

  /* "hitomi.pyx":2143
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1f_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2137
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2149
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_205integrand_B_Tree_BAO_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_205integrand_B_Tree_BAO_b1f_f_f_py = {"integrand_B_Tree_BAO_b1f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_205integrand_B_Tree_BAO_b1f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_205integrand_B_Tree_BAO_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2149, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_b1f_f_f_py") < 0)) __PYX_ERR(0, 2149, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2150, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2150, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2151, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2151, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2151, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2151, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2151, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2152, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2152, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2153, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2153, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_b1f_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2149, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2150, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2150, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2151, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_204integrand_B_Tree_BAO_b1f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_204integrand_B_Tree_BAO_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_b1f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2149, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2149, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2149, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2155
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2156
 *         ):
 *     return integrand_B_Tree_BAO_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2156, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2156, __pyx_L1_error)
  }

  /* "hitomi.pyx":2157
 *     return integrand_B_Tree_BAO_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2157, __pyx_L1_error)
  }

  /* "hitomi.pyx":2155
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_b1f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2149
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2161
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_207integrand_B_Tree_BAO_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_207integrand_B_Tree_BAO_ff_f_f_py = {"integrand_B_Tree_BAO_ff_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_207integrand_B_Tree_BAO_ff_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_207integrand_B_Tree_BAO_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_ff_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2161, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_ff_f_f_py") < 0)) __PYX_ERR(0, 2161, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2162, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2162, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2163, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2164, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2164, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2165, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2165, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_ff_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2161, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2162, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2162, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2163, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_206integrand_B_Tree_BAO_ff_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_206integrand_B_Tree_BAO_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_ff_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2167
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2168
 *         ):
 *     return integrand_B_Tree_BAO_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2168, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2168, __pyx_L1_error)
  }

  /* "hitomi.pyx":2169
 *     return integrand_B_Tree_BAO_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2169, __pyx_L1_error)
  }

  /* "hitomi.pyx":2167
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_ff_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2161
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2173
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_209integrand_B_Tree_BAO_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_209integrand_B_Tree_BAO_f_f_f_py = {"integrand_B_Tree_BAO_f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_209integrand_B_Tree_BAO_f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_209integrand_B_Tree_BAO_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma2_perp;
  double __pyx_v_sigma2_para;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma2_perp,&__pyx_n_s_sigma2_para,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 1); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 2); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 3); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 4); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 5); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 6); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 7); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 8); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 9); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 10); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 11); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 12); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma2_para)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, 13); __PYX_ERR(0, 2173, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_BAO_f_f_f_py") < 0)) __PYX_ERR(0, 2173, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2174, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2174, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2175, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2175, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2175, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2175, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2175, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2176, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2176, __pyx_L3_error)
    __pyx_v_sigma2_perp = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_sigma2_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2177, __pyx_L3_error)
    __pyx_v_sigma2_para = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_sigma2_para == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2177, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_BAO_f_f_f_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2173, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2174, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2174, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2175, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_208integrand_B_Tree_BAO_f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_208integrand_B_Tree_BAO_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma2_perp, double __pyx_v_sigma2_para) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_BAO_f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2173, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2173, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2173, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2179
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2180
 *         ):
 *     return integrand_B_Tree_BAO_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2180, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2180, __pyx_L1_error)
  }

  /* "hitomi.pyx":2181
 *     return integrand_B_Tree_BAO_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel,
 *             sigma2_perp, sigma2_para)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2181, __pyx_L1_error)
  }

  /* "hitomi.pyx":2179
 *         double sigma2_perp, double sigma2_para
 *         ):
 *     return integrand_B_Tree_BAO_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_BAO_f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma2_perp, __pyx_v_sigma2_para)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2173
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_BAO_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2189
 * ###################
 * 
 * def integrand_B_Tree_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_211integrand_B_Tree_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_211integrand_B_Tree_b1_b1_b1_py = {"integrand_B_Tree_b1_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_211integrand_B_Tree_b1_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_211integrand_B_Tree_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2189, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1_b1_b1_py") < 0)) __PYX_ERR(0, 2189, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2190, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2190, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2191, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2191, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2191, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2191, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2191, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2192, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2192, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2189, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2190, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2190, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2191, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_210integrand_B_Tree_b1_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_210integrand_B_Tree_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2189, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2189, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2189, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2194
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2195
 *         ):
 *     return integrand_B_Tree_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2195, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2195, __pyx_L1_error)
  }

  /* "hitomi.pyx":2196
 *     return integrand_B_Tree_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2196, __pyx_L1_error)
  }

  /* "hitomi.pyx":2194
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2189
 * ###################
 * 
 * def integrand_B_Tree_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2199
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_213integrand_B_Tree_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_213integrand_B_Tree_b1_b1_f_py = {"integrand_B_Tree_b1_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_213integrand_B_Tree_b1_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_213integrand_B_Tree_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2199, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1_b1_f_py") < 0)) __PYX_ERR(0, 2199, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2200, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2200, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2201, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2201, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2201, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2201, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2201, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2202, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2202, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2199, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2200, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2200, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2201, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_212integrand_B_Tree_b1_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_212integrand_B_Tree_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2204
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2205
 *         ):
 *     return integrand_B_Tree_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2205, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2205, __pyx_L1_error)
  }

  /* "hitomi.pyx":2206
 *     return integrand_B_Tree_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2206, __pyx_L1_error)
  }

  /* "hitomi.pyx":2204
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2199
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2209
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_215integrand_B_Tree_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_215integrand_B_Tree_b1_f_f_py = {"integrand_B_Tree_b1_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_215integrand_B_Tree_b1_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_215integrand_B_Tree_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2209, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1_f_f_py") < 0)) __PYX_ERR(0, 2209, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2210, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2210, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2211, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2211, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2211, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2211, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2211, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2212, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2212, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2209, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2210, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2210, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2211, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_214integrand_B_Tree_b1_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_214integrand_B_Tree_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2209, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2209, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2209, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2214
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2215
 *         ):
 *     return integrand_B_Tree_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2215, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2215, __pyx_L1_error)
  }

  /* "hitomi.pyx":2216
 *     return integrand_B_Tree_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2216, __pyx_L1_error)
  }

  /* "hitomi.pyx":2214
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2209
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2219
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_217integrand_B_Tree_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_217integrand_B_Tree_b2_b1_b1_py = {"integrand_B_Tree_b2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_217integrand_B_Tree_b2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_217integrand_B_Tree_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2219, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b2_b1_b1_py") < 0)) __PYX_ERR(0, 2219, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2220, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2220, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2221, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2221, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2221, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2221, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2221, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2222, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2222, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2219, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2220, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2220, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2221, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_216integrand_B_Tree_b2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_216integrand_B_Tree_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2219, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2219, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2219, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2224
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2225
 *         ):
 *     return integrand_B_Tree_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2225, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2225, __pyx_L1_error)
  }

  /* "hitomi.pyx":2226
 *     return integrand_B_Tree_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2226, __pyx_L1_error)
  }

  /* "hitomi.pyx":2224
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2219
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2229
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_219integrand_B_Tree_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_219integrand_B_Tree_b2_b1_f_py = {"integrand_B_Tree_b2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_219integrand_B_Tree_b2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_219integrand_B_Tree_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2229, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b2_b1_f_py") < 0)) __PYX_ERR(0, 2229, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2230, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2230, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2231, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2231, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2231, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2231, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2231, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2232, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2232, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2229, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2230, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2230, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2231, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_218integrand_B_Tree_b2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_218integrand_B_Tree_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2229, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2229, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2229, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2234
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2235
 *         ):
 *     return integrand_B_Tree_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2235, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2235, __pyx_L1_error)
  }

  /* "hitomi.pyx":2236
 *     return integrand_B_Tree_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2236, __pyx_L1_error)
  }

  /* "hitomi.pyx":2234
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2229
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2239
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_221integrand_B_Tree_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_221integrand_B_Tree_b2_f_f_py = {"integrand_B_Tree_b2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_221integrand_B_Tree_b2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_221integrand_B_Tree_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2239, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b2_f_f_py") < 0)) __PYX_ERR(0, 2239, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2240, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2240, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2241, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2242, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2242, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b2_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2239, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2240, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2240, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2241, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_220integrand_B_Tree_b2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_220integrand_B_Tree_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2239, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2239, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2239, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2244
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2245
 *         ):
 *     return integrand_B_Tree_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2245, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2245, __pyx_L1_error)
  }

  /* "hitomi.pyx":2246
 *     return integrand_B_Tree_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2246, __pyx_L1_error)
  }

  /* "hitomi.pyx":2244
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2239
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2249
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_223integrand_B_Tree_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_223integrand_B_Tree_bK2_b1_b1_py = {"integrand_B_Tree_bK2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_223integrand_B_Tree_bK2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_223integrand_B_Tree_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2249, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_bK2_b1_b1_py") < 0)) __PYX_ERR(0, 2249, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2250, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2250, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2251, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2251, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2251, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2251, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2251, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2252, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2252, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2249, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2250, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2250, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2251, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_222integrand_B_Tree_bK2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_222integrand_B_Tree_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2249, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2249, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2249, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2253
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2254
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2254, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2254, __pyx_L1_error)
  }

  /* "hitomi.pyx":2255
 *     return integrand_B_Tree_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2255, __pyx_L1_error)
  }

  /* "hitomi.pyx":2253
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_bK2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2249
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2258
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_225integrand_B_Tree_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_225integrand_B_Tree_bK2_b1_f_py = {"integrand_B_Tree_bK2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_225integrand_B_Tree_bK2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_225integrand_B_Tree_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2258, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_bK2_b1_f_py") < 0)) __PYX_ERR(0, 2258, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2259, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2259, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2260, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2261, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2261, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2258, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2259, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2259, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2260, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_224integrand_B_Tree_bK2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_224integrand_B_Tree_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2258, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2258, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2258, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2263
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2264
 *         ):
 *     return integrand_B_Tree_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2264, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2264, __pyx_L1_error)
  }

  /* "hitomi.pyx":2265
 *     return integrand_B_Tree_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2265, __pyx_L1_error)
  }

  /* "hitomi.pyx":2263
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_bK2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2258
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2268
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_227integrand_B_Tree_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_227integrand_B_Tree_bK2_f_f_py = {"integrand_B_Tree_bK2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_227integrand_B_Tree_bK2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_227integrand_B_Tree_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2268, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_bK2_f_f_py") < 0)) __PYX_ERR(0, 2268, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2269, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2269, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2270, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2270, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2270, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2270, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2270, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2271, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_bK2_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2268, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2269, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2269, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2270, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_226integrand_B_Tree_bK2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_226integrand_B_Tree_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_bK2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2268, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2268, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2268, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2273
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2274
 *         ):
 *     return integrand_B_Tree_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2274, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2274, __pyx_L1_error)
  }

  /* "hitomi.pyx":2275
 *     return integrand_B_Tree_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2275, __pyx_L1_error)
  }

  /* "hitomi.pyx":2273
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_bK2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2268
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2278
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_229integrand_B_Tree_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_229integrand_B_Tree_b1f_b1_b1_py = {"integrand_B_Tree_b1f_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_229integrand_B_Tree_b1f_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_229integrand_B_Tree_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2278, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1f_b1_b1_py") < 0)) __PYX_ERR(0, 2278, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2279, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2279, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2280, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2280, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2280, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2280, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2280, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2281, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2281, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2278, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2279, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2279, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2280, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_228integrand_B_Tree_b1f_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_228integrand_B_Tree_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2278, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2278, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2278, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2283
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2284
 *         ):
 *     return integrand_B_Tree_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2284, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2284, __pyx_L1_error)
  }

  /* "hitomi.pyx":2285
 *     return integrand_B_Tree_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2285, __pyx_L1_error)
  }

  /* "hitomi.pyx":2283
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1f_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2278
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2288
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_231integrand_B_Tree_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_231integrand_B_Tree_b1f_b1_f_py = {"integrand_B_Tree_b1f_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_231integrand_B_Tree_b1f_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_231integrand_B_Tree_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2288, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1f_b1_f_py") < 0)) __PYX_ERR(0, 2288, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2289, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2289, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2290, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2290, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2290, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2290, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2290, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2291, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2291, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2288, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2289, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2289, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2290, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_230integrand_B_Tree_b1f_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_230integrand_B_Tree_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2288, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2288, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2288, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2293
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2294
 *         ):
 *     return integrand_B_Tree_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2294, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2294, __pyx_L1_error)
  }

  /* "hitomi.pyx":2295
 *     return integrand_B_Tree_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2295, __pyx_L1_error)
  }

  /* "hitomi.pyx":2293
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1f_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2288
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2298
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_233integrand_B_Tree_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_233integrand_B_Tree_b1f_f_f_py = {"integrand_B_Tree_b1f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_233integrand_B_Tree_b1f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_233integrand_B_Tree_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2298, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_b1f_f_f_py") < 0)) __PYX_ERR(0, 2298, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2299, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2299, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2300, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2300, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2300, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2300, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2300, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2301, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2301, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_b1f_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2298, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2299, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2299, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2300, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_232integrand_B_Tree_b1f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_232integrand_B_Tree_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_b1f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2298, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2298, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2298, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2303
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2304
 *         ):
 *     return integrand_B_Tree_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2304, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2304, __pyx_L1_error)
  }

  /* "hitomi.pyx":2305
 *     return integrand_B_Tree_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2305, __pyx_L1_error)
  }

  /* "hitomi.pyx":2303
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_b1f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2298
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2308
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_235integrand_B_Tree_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_235integrand_B_Tree_ff_f_f_py = {"integrand_B_Tree_ff_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_235integrand_B_Tree_ff_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_235integrand_B_Tree_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_ff_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2308, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_ff_f_f_py") < 0)) __PYX_ERR(0, 2308, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2309, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2309, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2310, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2310, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2310, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2310, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2310, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2311, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2311, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_ff_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2308, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2309, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2309, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2310, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_234integrand_B_Tree_ff_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_234integrand_B_Tree_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_ff_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2308, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2308, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2308, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2313
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2314
 *         ):
 *     return integrand_B_Tree_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2314, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2314, __pyx_L1_error)
  }

  /* "hitomi.pyx":2315
 *     return integrand_B_Tree_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2315, __pyx_L1_error)
  }

  /* "hitomi.pyx":2313
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_ff_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2308
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2318
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_237integrand_B_Tree_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_237integrand_B_Tree_f_f_f_py = {"integrand_B_Tree_f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_237integrand_B_Tree_f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_237integrand_B_Tree_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2318, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_f_f_f_py") < 0)) __PYX_ERR(0, 2318, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2319, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2319, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2320, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2321, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2321, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_f_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2318, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2319, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2319, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2320, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_236integrand_B_Tree_f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_236integrand_B_Tree_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2318, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2318, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2318, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2323
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2324
 *         ):
 *     return integrand_B_Tree_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2324, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2324, __pyx_L1_error)
  }

  /* "hitomi.pyx":2325
 *     return integrand_B_Tree_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2325, __pyx_L1_error)
  }

  /* "hitomi.pyx":2323
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2318
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2333
 * ###################
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_239integrand_B_Tree_NoWiggle_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_239integrand_B_Tree_NoWiggle_b1_b1_b1_py = {"integrand_B_Tree_NoWiggle_b1_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_239integrand_B_Tree_NoWiggle_b1_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_239integrand_B_Tree_NoWiggle_b1_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2333, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1_b1_b1_py") < 0)) __PYX_ERR(0, 2333, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2334, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2334, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2335, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2335, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2335, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2335, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2335, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2336, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2336, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2333, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2334, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2334, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2335, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_238integrand_B_Tree_NoWiggle_b1_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_238integrand_B_Tree_NoWiggle_b1_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2333, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2333, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2333, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2338
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2339
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2339, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2339, __pyx_L1_error)
  }

  /* "hitomi.pyx":2340
 *     return integrand_B_Tree_NoWiggle_b1_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2340, __pyx_L1_error)
  }

  /* "hitomi.pyx":2338
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2333
 * ###################
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2343
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_241integrand_B_Tree_NoWiggle_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_241integrand_B_Tree_NoWiggle_b1_b1_f_py = {"integrand_B_Tree_NoWiggle_b1_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_241integrand_B_Tree_NoWiggle_b1_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_241integrand_B_Tree_NoWiggle_b1_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2343, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1_b1_f_py") < 0)) __PYX_ERR(0, 2343, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2344, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2344, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2345, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2345, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2345, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2345, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2345, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2346, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2346, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2343, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2344, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2344, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2345, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_240integrand_B_Tree_NoWiggle_b1_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_240integrand_B_Tree_NoWiggle_b1_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2343, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2343, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2343, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2348
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2349
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2349, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2349, __pyx_L1_error)
  }

  /* "hitomi.pyx":2350
 *     return integrand_B_Tree_NoWiggle_b1_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2350, __pyx_L1_error)
  }

  /* "hitomi.pyx":2348
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2343
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2353
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_243integrand_B_Tree_NoWiggle_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_243integrand_B_Tree_NoWiggle_b1_f_f_py = {"integrand_B_Tree_NoWiggle_b1_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_243integrand_B_Tree_NoWiggle_b1_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_243integrand_B_Tree_NoWiggle_b1_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2353, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1_f_f_py") < 0)) __PYX_ERR(0, 2353, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2354, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2354, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2356, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2356, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2353, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2354, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2354, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2355, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_242integrand_B_Tree_NoWiggle_b1_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_242integrand_B_Tree_NoWiggle_b1_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2353, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2353, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2353, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2358
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2359
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2359, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2359, __pyx_L1_error)
  }

  /* "hitomi.pyx":2360
 *     return integrand_B_Tree_NoWiggle_b1_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2360, __pyx_L1_error)
  }

  /* "hitomi.pyx":2358
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2353
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2363
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_245integrand_B_Tree_NoWiggle_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_245integrand_B_Tree_NoWiggle_b2_b1_b1_py = {"integrand_B_Tree_NoWiggle_b2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_245integrand_B_Tree_NoWiggle_b2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_245integrand_B_Tree_NoWiggle_b2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2363, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b2_b1_b1_py") < 0)) __PYX_ERR(0, 2363, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2364, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2364, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2365, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2365, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2365, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2365, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2365, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2366, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2366, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2363, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2364, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2364, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2365, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_244integrand_B_Tree_NoWiggle_b2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_244integrand_B_Tree_NoWiggle_b2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2363, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2363, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2363, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2368
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2369
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2369, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2369, __pyx_L1_error)
  }

  /* "hitomi.pyx":2370
 *     return integrand_B_Tree_NoWiggle_b2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2370, __pyx_L1_error)
  }

  /* "hitomi.pyx":2368
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2363
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2373
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_247integrand_B_Tree_NoWiggle_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_247integrand_B_Tree_NoWiggle_b2_b1_f_py = {"integrand_B_Tree_NoWiggle_b2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_247integrand_B_Tree_NoWiggle_b2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_247integrand_B_Tree_NoWiggle_b2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2373, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b2_b1_f_py") < 0)) __PYX_ERR(0, 2373, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2374, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2374, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2375, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2376, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2376, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2373, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2374, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2374, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2375, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_246integrand_B_Tree_NoWiggle_b2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_246integrand_B_Tree_NoWiggle_b2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2373, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2373, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2373, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2378
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2379
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2379, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2379, __pyx_L1_error)
  }

  /* "hitomi.pyx":2380
 *     return integrand_B_Tree_NoWiggle_b2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2380, __pyx_L1_error)
  }

  /* "hitomi.pyx":2378
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2373
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2383
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_249integrand_B_Tree_NoWiggle_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_249integrand_B_Tree_NoWiggle_b2_f_f_py = {"integrand_B_Tree_NoWiggle_b2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_249integrand_B_Tree_NoWiggle_b2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_249integrand_B_Tree_NoWiggle_b2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2383, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b2_f_f_py") < 0)) __PYX_ERR(0, 2383, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2384, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2384, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2385, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2385, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2385, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2385, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2385, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2386, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2386, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b2_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2383, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2384, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2384, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2385, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_248integrand_B_Tree_NoWiggle_b2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_248integrand_B_Tree_NoWiggle_b2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2383, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2383, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2383, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2388
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2389
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2389, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2389, __pyx_L1_error)
  }

  /* "hitomi.pyx":2390
 *     return integrand_B_Tree_NoWiggle_b2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2390, __pyx_L1_error)
  }

  /* "hitomi.pyx":2388
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2383
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2393
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_251integrand_B_Tree_NoWiggle_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_251integrand_B_Tree_NoWiggle_bK2_b1_b1_py = {"integrand_B_Tree_NoWiggle_bK2_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_251integrand_B_Tree_NoWiggle_bK2_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_251integrand_B_Tree_NoWiggle_bK2_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2393, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_bK2_b1_b1_py") < 0)) __PYX_ERR(0, 2393, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2394, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2394, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2395, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2395, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2395, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2395, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2395, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2396, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2396, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2393, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2394, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2394, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2395, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_250integrand_B_Tree_NoWiggle_bK2_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_250integrand_B_Tree_NoWiggle_bK2_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2397
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2398
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2398, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2398, __pyx_L1_error)
  }

  /* "hitomi.pyx":2399
 *     return integrand_B_Tree_NoWiggle_bK2_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2399, __pyx_L1_error)
  }

  /* "hitomi.pyx":2397
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 *         double alpha_perp, double alpha_parallel):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_bK2_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2393
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2402
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_253integrand_B_Tree_NoWiggle_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_253integrand_B_Tree_NoWiggle_bK2_b1_f_py = {"integrand_B_Tree_NoWiggle_bK2_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_253integrand_B_Tree_NoWiggle_bK2_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_253integrand_B_Tree_NoWiggle_bK2_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2402, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_bK2_b1_f_py") < 0)) __PYX_ERR(0, 2402, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2403, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2403, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2404, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2404, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2404, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2404, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2404, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2405, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2405, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2402, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2403, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2403, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2404, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_252integrand_B_Tree_NoWiggle_bK2_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_252integrand_B_Tree_NoWiggle_bK2_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2402, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2402, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2402, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2407
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2408
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2408, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2408, __pyx_L1_error)
  }

  /* "hitomi.pyx":2409
 *     return integrand_B_Tree_NoWiggle_bK2_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2409, __pyx_L1_error)
  }

  /* "hitomi.pyx":2407
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_bK2_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2402
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2412
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_255integrand_B_Tree_NoWiggle_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_255integrand_B_Tree_NoWiggle_bK2_f_f_py = {"integrand_B_Tree_NoWiggle_bK2_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_255integrand_B_Tree_NoWiggle_bK2_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_255integrand_B_Tree_NoWiggle_bK2_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2412, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_bK2_f_f_py") < 0)) __PYX_ERR(0, 2412, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2413, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2413, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2414, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2414, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2414, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2414, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2414, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2415, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2415, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_bK2_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2412, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2413, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2413, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2414, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_254integrand_B_Tree_NoWiggle_bK2_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_254integrand_B_Tree_NoWiggle_bK2_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_bK2_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2412, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2412, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2412, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2417
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2418
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2418, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2418, __pyx_L1_error)
  }

  /* "hitomi.pyx":2419
 *     return integrand_B_Tree_NoWiggle_bK2_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2419, __pyx_L1_error)
  }

  /* "hitomi.pyx":2417
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_bK2_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_bK2_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2412
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_bK2_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2422
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_257integrand_B_Tree_NoWiggle_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_257integrand_B_Tree_NoWiggle_b1f_b1_b1_py = {"integrand_B_Tree_NoWiggle_b1f_b1_b1_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_257integrand_B_Tree_NoWiggle_b1f_b1_b1_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_257integrand_B_Tree_NoWiggle_b1f_b1_b1_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_b1_b1_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 1); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 2); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 3); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 4); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 5); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 6); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 7); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 8); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 9); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 10); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, 11); __PYX_ERR(0, 2422, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1f_b1_b1_py") < 0)) __PYX_ERR(0, 2422, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2423, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2423, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2424, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2424, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2424, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2424, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2424, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2425, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2425, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2422, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2423, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2423, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2424, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_256integrand_B_Tree_NoWiggle_b1f_b1_b1_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_256integrand_B_Tree_NoWiggle_b1f_b1_b1_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_b1_b1_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2422, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2422, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2422, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2427
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2428
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2428, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2428, __pyx_L1_error)
  }

  /* "hitomi.pyx":2429
 *     return integrand_B_Tree_NoWiggle_b1f_b1_b1(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2429, __pyx_L1_error)
  }

  /* "hitomi.pyx":2427
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_b1(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1f_b1_b1((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2422
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_b1_b1_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2432
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_259integrand_B_Tree_NoWiggle_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_259integrand_B_Tree_NoWiggle_b1f_b1_f_py = {"integrand_B_Tree_NoWiggle_b1f_b1_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_259integrand_B_Tree_NoWiggle_b1f_b1_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_259integrand_B_Tree_NoWiggle_b1f_b1_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_b1_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2432, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1f_b1_f_py") < 0)) __PYX_ERR(0, 2432, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2433, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2433, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2434, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2434, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2434, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2434, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2434, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2435, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2435, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2432, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2433, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2433, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2434, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_258integrand_B_Tree_NoWiggle_b1f_b1_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_258integrand_B_Tree_NoWiggle_b1f_b1_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_b1_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2437
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2438
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2438, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2438, __pyx_L1_error)
  }

  /* "hitomi.pyx":2439
 *     return integrand_B_Tree_NoWiggle_b1f_b1_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2439, __pyx_L1_error)
  }

  /* "hitomi.pyx":2437
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_b1_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1f_b1_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2432
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_b1_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2442
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_261integrand_B_Tree_NoWiggle_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_261integrand_B_Tree_NoWiggle_b1f_f_f_py = {"integrand_B_Tree_NoWiggle_b1f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_261integrand_B_Tree_NoWiggle_b1f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_261integrand_B_Tree_NoWiggle_b1f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2442, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_b1f_f_f_py") < 0)) __PYX_ERR(0, 2442, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2443, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2443, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2444, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2445, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2445, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_b1f_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2442, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2443, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2443, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2444, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_260integrand_B_Tree_NoWiggle_b1f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_260integrand_B_Tree_NoWiggle_b1f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_b1f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2442, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2442, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2442, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2447
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2448
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2448, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2448, __pyx_L1_error)
  }

  /* "hitomi.pyx":2449
 *     return integrand_B_Tree_NoWiggle_b1f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2449, __pyx_L1_error)
  }

  /* "hitomi.pyx":2447
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_b1f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_b1f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2442
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_b1f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2452
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_263integrand_B_Tree_NoWiggle_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_263integrand_B_Tree_NoWiggle_ff_f_f_py = {"integrand_B_Tree_NoWiggle_ff_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_263integrand_B_Tree_NoWiggle_ff_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_263integrand_B_Tree_NoWiggle_ff_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_ff_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2452, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_ff_f_f_py") < 0)) __PYX_ERR(0, 2452, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2453, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2453, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2454, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2454, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2454, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2454, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2454, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2455, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2455, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_ff_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2452, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2453, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2453, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2454, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_262integrand_B_Tree_NoWiggle_ff_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_262integrand_B_Tree_NoWiggle_ff_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_ff_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2452, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2452, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2452, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2457
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2458
 *         ):
 *     return integrand_B_Tree_NoWiggle_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2458, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2458, __pyx_L1_error)
  }

  /* "hitomi.pyx":2459
 *     return integrand_B_Tree_NoWiggle_ff_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2459, __pyx_L1_error)
  }

  /* "hitomi.pyx":2457
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_ff_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_ff_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2452
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_ff_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2462
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_265integrand_B_Tree_NoWiggle_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_265integrand_B_Tree_NoWiggle_f_f_f_py = {"integrand_B_Tree_NoWiggle_f_f_f_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_265integrand_B_Tree_NoWiggle_f_f_f_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_265integrand_B_Tree_NoWiggle_f_f_f_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_f_f_f_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 1); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 2); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 3); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 4); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 5); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 6); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 7); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 8); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 9); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 10); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, 11); __PYX_ERR(0, 2462, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Tree_NoWiggle_f_f_f_py") < 0)) __PYX_ERR(0, 2462, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 12) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2463, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2463, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2464, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2464, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2464, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2464, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2464, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2465, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2465, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Tree_NoWiggle_f_f_f_py", 1, 12, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2462, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2463, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2463, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2464, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_264integrand_B_Tree_NoWiggle_f_f_f_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_264integrand_B_Tree_NoWiggle_f_f_f_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Tree_NoWiggle_f_f_f_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2462, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2462, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2462, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2467
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2468
 *         ):
 *     return integrand_B_Tree_NoWiggle_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 *             alpha_perp, alpha_parallel)
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2468, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2468, __pyx_L1_error)
  }

  /* "hitomi.pyx":2469
 *     return integrand_B_Tree_NoWiggle_f_f_f(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2469, __pyx_L1_error)
  }

  /* "hitomi.pyx":2467
 *         double alpha_perp, double alpha_parallel
 *         ):
 *     return integrand_B_Tree_NoWiggle_f_f_f(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Tree_NoWiggle_f_f_f((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2462
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Tree_NoWiggle_f_f_f_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2473
 * 
 * 
 * def integrand_SS_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_267integrand_SS_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_267integrand_SS_py = {"integrand_SS_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_267integrand_SS_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_267integrand_SS_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  int __pyx_v_ell1_dash;
  int __pyx_v_ell2_dash;
  int __pyx_v_ELL_dash;
  int __pyx_v_n;
  int __pyx_v_m;
  PyArrayObject *__pyx_v_epsilon = 0;
  int __pyx_v_num_epsilon;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_SS_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_ell1_dash,&__pyx_n_s_ell2_dash,&__pyx_n_s_ELL_dash,&__pyx_n_s_n,&__pyx_n_s_m,&__pyx_n_s_epsilon,&__pyx_n_s_num_epsilon,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 1); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 2); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 3); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 4); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 5); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 6); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 7); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 8); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 9); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 10); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_m)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 11); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_epsilon)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 12); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_epsilon)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, 13); __PYX_ERR(0, 2473, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_SS_py") < 0)) __PYX_ERR(0, 2473, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2474, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2474, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_ell1_dash = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell1_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_ell2_dash = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ell2_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[9]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2475, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2476, __pyx_L3_error)
    __pyx_v_m = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_m == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2476, __pyx_L3_error)
    __pyx_v_epsilon = ((PyArrayObject *)values[12]);
    __pyx_v_num_epsilon = __Pyx_PyInt_As_int(values[13]); if (unlikely((__pyx_v_num_epsilon == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2477, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_SS_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2473, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_SS_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2474, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2474, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_epsilon), __pyx_ptype_5numpy_ndarray, 0, "epsilon", 0))) __PYX_ERR(0, 2477, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_266integrand_SS_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_n, __pyx_v_m, __pyx_v_epsilon, __pyx_v_num_epsilon);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_266integrand_SS_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, int __pyx_v_n, int __pyx_v_m, PyArrayObject *__pyx_v_epsilon, int __pyx_v_num_epsilon) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_epsilon;
  __Pyx_Buffer __pyx_pybuffer_epsilon;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_SS_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_epsilon.pybuffer.buf = NULL;
  __pyx_pybuffer_epsilon.refcount = 0;
  __pyx_pybuffernd_epsilon.data = NULL;
  __pyx_pybuffernd_epsilon.rcbuffer = &__pyx_pybuffer_epsilon;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2473, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2473, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer, (PyObject*)__pyx_v_epsilon, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2473, __pyx_L1_error)
  }
  __pyx_pybuffernd_epsilon.diminfo[0].strides = __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_epsilon.diminfo[0].shape = __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2479
 *         np.ndarray[double, ndim=1, mode="c"] epsilon not None, int num_epsilon
 *         ):
 *     return integrand_SS(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2480
 *         ):
 *     return integrand_SS(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash,
 *             n, m,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2480, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2480, __pyx_L1_error)
  }

  /* "hitomi.pyx":2483
 *             ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash,
 *             n, m,
 *             &epsilon[0], num_epsilon)             # <<<<<<<<<<<<<<
 * 
 * def integrand_SSpow_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_epsilon.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_epsilon.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2483, __pyx_L1_error)
  }

  /* "hitomi.pyx":2479
 *         np.ndarray[double, ndim=1, mode="c"] epsilon not None, int num_epsilon
 *         ):
 *     return integrand_SS(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_SS((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_n, __pyx_v_m, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_epsilon.diminfo[0].strides))), __pyx_v_num_epsilon)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2473
 * 
 * 
 * def integrand_SS_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_SS_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2485
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_SSpow_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ELL, int ELL_dash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_269integrand_SSpow_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_269integrand_SSpow_py = {"integrand_SSpow_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_269integrand_SSpow_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_269integrand_SSpow_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  int __pyx_v_ELL;
  int __pyx_v_ELL_dash;
  int __pyx_v_n;
  PyArrayObject *__pyx_v_epsilon = 0;
  int __pyx_v_num_epsilon;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_SSpow_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_ELL,&__pyx_n_s_ELL_dash,&__pyx_n_s_n,&__pyx_n_s_epsilon,&__pyx_n_s_num_epsilon,0};
    PyObject* values[9] = {0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 1); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 2); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 3); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 4); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 5); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 6); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_epsilon)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 7); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_epsilon)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, 8); __PYX_ERR(0, 2485, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_SSpow_py") < 0)) __PYX_ERR(0, 2485, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 9) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2486, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2486, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2487, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2487, __pyx_L3_error)
    __pyx_v_n = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2488, __pyx_L3_error)
    __pyx_v_epsilon = ((PyArrayObject *)values[7]);
    __pyx_v_num_epsilon = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_num_epsilon == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2489, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_SSpow_py", 1, 9, 9, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2485, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_SSpow_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2486, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2486, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_epsilon), __pyx_ptype_5numpy_ndarray, 0, "epsilon", 0))) __PYX_ERR(0, 2489, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_268integrand_SSpow_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_n, __pyx_v_epsilon, __pyx_v_num_epsilon);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_268integrand_SSpow_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, int __pyx_v_ELL, int __pyx_v_ELL_dash, int __pyx_v_n, PyArrayObject *__pyx_v_epsilon, int __pyx_v_num_epsilon) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_epsilon;
  __Pyx_Buffer __pyx_pybuffer_epsilon;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_SSpow_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_epsilon.pybuffer.buf = NULL;
  __pyx_pybuffer_epsilon.refcount = 0;
  __pyx_pybuffernd_epsilon.data = NULL;
  __pyx_pybuffernd_epsilon.rcbuffer = &__pyx_pybuffer_epsilon;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2485, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2485, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer, (PyObject*)__pyx_v_epsilon, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2485, __pyx_L1_error)
  }
  __pyx_pybuffernd_epsilon.diminfo[0].strides = __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_epsilon.diminfo[0].shape = __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2491
 *         np.ndarray[double, ndim=1, mode="c"] epsilon not None, int num_epsilon
 *         ):
 *     return integrand_SSpow(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             ELL, ELL_dash,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2492
 *         ):
 *     return integrand_SSpow(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             ELL, ELL_dash,
 *             n,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2492, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2492, __pyx_L1_error)
  }

  /* "hitomi.pyx":2495
 *             ELL, ELL_dash,
 *             n,
 *             &epsilon[0], num_epsilon)             # <<<<<<<<<<<<<<
 * 
 * def integrand_cov_BB_G_py(
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_epsilon.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_epsilon.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2495, __pyx_L1_error)
  }

  /* "hitomi.pyx":2491
 *         np.ndarray[double, ndim=1, mode="c"] epsilon not None, int num_epsilon
 *         ):
 *     return integrand_SSpow(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             ELL, ELL_dash,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_SSpow((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, __pyx_v_ELL, __pyx_v_ELL_dash, __pyx_v_n, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_epsilon.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_epsilon.diminfo[0].strides))), __pyx_v_num_epsilon)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2485
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_SSpow_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ELL, int ELL_dash,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_SSpow_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_epsilon.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2497
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_cov_BB_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1, double k1_dash,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_271integrand_cov_BB_G_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_271integrand_cov_BB_G_py = {"integrand_cov_BB_G_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_271integrand_cov_BB_G_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_271integrand_cov_BB_G_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  int __pyx_v_ell1_dash;
  int __pyx_v_ell2_dash;
  int __pyx_v_ELL_dash;
  double __pyx_v_k1;
  double __pyx_v_k1_dash;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_BB_G_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_ell1_dash,&__pyx_n_s_ell2_dash,&__pyx_n_s_ELL_dash,&__pyx_n_s_k1,&__pyx_n_s_k1_dash,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[22] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 22: values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
        CYTHON_FALLTHROUGH;
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 1); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 2); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 3); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 4); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 5); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 6); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 7); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 8); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 9); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 10); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 11); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 12); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k1_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 13); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 14); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 15); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 16); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 17); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 18); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 19); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 20); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 21:
        if (likely((values[21] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, 21); __PYX_ERR(0, 2497, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_BB_G_py") < 0)) __PYX_ERR(0, 2497, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 22) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
      values[21] = PyTuple_GET_ITEM(__pyx_args, 21);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2498, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2498, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ell1_dash = __Pyx_PyInt_As_int(values[9]); if (unlikely((__pyx_v_ell1_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ell2_dash = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_ell2_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_k1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_k1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_k1_dash = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_k1_dash == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2500, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2500, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2500, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2500, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2500, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2501, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2501, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[21]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2501, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_py", 1, 22, 22, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2497, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_BB_G_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2498, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2498, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2499, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_270integrand_cov_BB_G_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_k1, __pyx_v_k1_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_270integrand_cov_BB_G_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, double __pyx_v_k1, double __pyx_v_k1_dash, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_BB_G_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2497, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2497, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2497, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2503
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_BB_G(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1, k1_dash,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2504
 *         ):
 *     return integrand_cov_BB_G(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1, k1_dash,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2504, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2504, __pyx_L1_error)
  }

  /* "hitomi.pyx":2505
 *     return integrand_cov_BB_G(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1, k1_dash,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2505, __pyx_L1_error)
  }

  /* "hitomi.pyx":2503
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_BB_G(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1, k1_dash,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_BB_G((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_k1, __pyx_v_k1_dash, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2497
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_cov_BB_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1, double k1_dash,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_BB_G_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2509
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_BB_G_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_273integrand_cov_BB_G_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_273integrand_cov_BB_G_diag_py = {"integrand_cov_BB_G_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_273integrand_cov_BB_G_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_273integrand_cov_BB_G_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  int __pyx_v_ell1_dash;
  int __pyx_v_ell2_dash;
  int __pyx_v_ELL_dash;
  double __pyx_v_k1;
  double __pyx_v_alpha_perp;
  double __pyx_v_alpha_parallel;
  double __pyx_v_sigma8;
  double __pyx_v_fz;
  double __pyx_v_b1;
  double __pyx_v_DeltaK;
  double __pyx_v_nmean;
  double __pyx_v_volume;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_cov_BB_G_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_ell1_dash,&__pyx_n_s_ell2_dash,&__pyx_n_s_ELL_dash,&__pyx_n_s_k1,&__pyx_n_s_alpha_perp,&__pyx_n_s_alpha_parallel,&__pyx_n_s_sigma8,&__pyx_n_s_fz,&__pyx_n_s_b1,&__pyx_n_s_DeltaK,&__pyx_n_s_nmean,&__pyx_n_s_volume,0};
    PyObject* values[21] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 21: values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
        CYTHON_FALLTHROUGH;
        case 20: values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
        CYTHON_FALLTHROUGH;
        case 19: values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
        CYTHON_FALLTHROUGH;
        case 18: values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
        CYTHON_FALLTHROUGH;
        case 17: values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
        CYTHON_FALLTHROUGH;
        case 16: values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
        CYTHON_FALLTHROUGH;
        case 15: values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
        CYTHON_FALLTHROUGH;
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 1); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 2); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 3); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 4); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 5); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 6); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 7); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 8); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 9); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 10); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL_dash)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 11); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_k1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 12); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_perp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 13); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 14:
        if (likely((values[14] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_alpha_parallel)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 14); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 15:
        if (likely((values[15] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sigma8)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 15); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 16:
        if (likely((values[16] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fz)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 16); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 17:
        if (likely((values[17] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_b1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 17); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 18:
        if (likely((values[18] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_DeltaK)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 18); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 19:
        if (likely((values[19] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nmean)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 19); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 20:
        if (likely((values[20] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_volume)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, 20); __PYX_ERR(0, 2509, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_cov_BB_G_diag_py") < 0)) __PYX_ERR(0, 2509, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 21) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
      values[14] = PyTuple_GET_ITEM(__pyx_args, 14);
      values[15] = PyTuple_GET_ITEM(__pyx_args, 15);
      values[16] = PyTuple_GET_ITEM(__pyx_args, 16);
      values[17] = PyTuple_GET_ITEM(__pyx_args, 17);
      values[18] = PyTuple_GET_ITEM(__pyx_args, 18);
      values[19] = PyTuple_GET_ITEM(__pyx_args, 19);
      values[20] = PyTuple_GET_ITEM(__pyx_args, 20);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2510, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2510, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ell1_dash = __Pyx_PyInt_As_int(values[9]); if (unlikely((__pyx_v_ell1_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ell2_dash = __Pyx_PyInt_As_int(values[10]); if (unlikely((__pyx_v_ell2_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_ELL_dash = __Pyx_PyInt_As_int(values[11]); if (unlikely((__pyx_v_ELL_dash == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_k1 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_k1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2511, __pyx_L3_error)
    __pyx_v_alpha_perp = __pyx_PyFloat_AsDouble(values[13]); if (unlikely((__pyx_v_alpha_perp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2512, __pyx_L3_error)
    __pyx_v_alpha_parallel = __pyx_PyFloat_AsDouble(values[14]); if (unlikely((__pyx_v_alpha_parallel == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2512, __pyx_L3_error)
    __pyx_v_sigma8 = __pyx_PyFloat_AsDouble(values[15]); if (unlikely((__pyx_v_sigma8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2512, __pyx_L3_error)
    __pyx_v_fz = __pyx_PyFloat_AsDouble(values[16]); if (unlikely((__pyx_v_fz == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2512, __pyx_L3_error)
    __pyx_v_b1 = __pyx_PyFloat_AsDouble(values[17]); if (unlikely((__pyx_v_b1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2512, __pyx_L3_error)
    __pyx_v_DeltaK = __pyx_PyFloat_AsDouble(values[18]); if (unlikely((__pyx_v_DeltaK == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2513, __pyx_L3_error)
    __pyx_v_nmean = __pyx_PyFloat_AsDouble(values[19]); if (unlikely((__pyx_v_nmean == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2513, __pyx_L3_error)
    __pyx_v_volume = __pyx_PyFloat_AsDouble(values[20]); if (unlikely((__pyx_v_volume == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2513, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_cov_BB_G_diag_py", 1, 21, 21, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2509, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_cov_BB_G_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2510, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2510, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2511, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_272integrand_cov_BB_G_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_k1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_272integrand_cov_BB_G_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, int __pyx_v_ell1_dash, int __pyx_v_ell2_dash, int __pyx_v_ELL_dash, double __pyx_v_k1, double __pyx_v_alpha_perp, double __pyx_v_alpha_parallel, double __pyx_v_sigma8, double __pyx_v_fz, double __pyx_v_b1, double __pyx_v_DeltaK, double __pyx_v_nmean, double __pyx_v_volume) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_cov_BB_G_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2509, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2509, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2509, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2515
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_BB_G_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2516
 *         ):
 *     return integrand_cov_BB_G_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1,
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2516, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2516, __pyx_L1_error)
  }

  /* "hitomi.pyx":2517
 *     return integrand_cov_BB_G_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1,             # <<<<<<<<<<<<<<
 *             alpha_perp, alpha_parallel, sigma8, fz, b1,
 *             DeltaK, nmean, volume)
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2517, __pyx_L1_error)
  }

  /* "hitomi.pyx":2515
 *         double DeltaK, double nmean, double volume
 *         ):
 *     return integrand_cov_BB_G_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, ell1_dash, ell2_dash, ELL_dash, k1,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_cov_BB_G_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_ell1_dash, __pyx_v_ell2_dash, __pyx_v_ELL_dash, __pyx_v_k1, __pyx_v_alpha_perp, __pyx_v_alpha_parallel, __pyx_v_sigma8, __pyx_v_fz, __pyx_v_b1, __pyx_v_DeltaK, __pyx_v_nmean, __pyx_v_volume)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2515, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2509
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_BB_G_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_cov_BB_G_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2525
 * ################################
 * 
 * def integrand_B_Kernel_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_275integrand_B_Kernel_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_275integrand_B_Kernel_py = {"integrand_B_Kernel_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_275integrand_B_Kernel_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_275integrand_B_Kernel_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Kernel_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 1); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 2); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 3); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 4); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 5); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 6); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 7); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 8); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 9); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 10); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 11); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 12); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, 13); __PYX_ERR(0, 2525, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Kernel_py") < 0)) __PYX_ERR(0, 2525, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2526, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2526, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2527, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2528, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2528, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[13]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2528, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2525, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2526, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2526, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2527, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_274integrand_B_Kernel_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_274integrand_B_Kernel_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Kernel_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2525, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2525, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2525, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2530
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2531
 *         ):
 *     return integrand_B_Kernel(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2531, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2531, __pyx_L1_error)
  }

  /* "hitomi.pyx":2532
 *     return integrand_B_Kernel(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2532, __pyx_L1_error)
  }

  /* "hitomi.pyx":2530
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Kernel((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2525
 * ################################
 * 
 * def integrand_B_Kernel_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2537
 * ################################
 * 
 * def integrand_B_Kernel_SN_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_277integrand_B_Kernel_SN_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_277integrand_B_Kernel_SN_py = {"integrand_B_Kernel_SN_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_277integrand_B_Kernel_SN_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_277integrand_B_Kernel_SN_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_kmag1;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Kernel_SN_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_kmag1,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 1); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 2); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 3); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 4); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 5); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 6); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 7); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 8); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kmag1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 9); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 10); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 11); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 12); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (likely((values[13] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, 13); __PYX_ERR(0, 2537, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Kernel_SN_py") < 0)) __PYX_ERR(0, 2537, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 14) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
      values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2538, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2538, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_kmag1 = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_kmag1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2539, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2540, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[12]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2540, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[13]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2540, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_py", 1, 14, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2537, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_SN_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2538, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2538, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2539, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_276integrand_B_Kernel_SN_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_276integrand_B_Kernel_SN_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_kmag1, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Kernel_SN_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2537, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2537, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2537, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2542
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_SN(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2543
 *         ):
 *     return integrand_B_Kernel_SN(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2543, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2543, __pyx_L1_error)
  }

  /* "hitomi.pyx":2544
 *     return integrand_B_Kernel_SN(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2544, __pyx_L1_error)
  }

  /* "hitomi.pyx":2542
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_SN(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, f, Sigma2, dSigma2,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Kernel_SN((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_kmag1, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2537
 * ################################
 * 
 * def integrand_B_Kernel_SN_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_SN_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2549
 * ################################
 * 
 * def integrand_B_Kernel_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_279integrand_B_Kernel_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_279integrand_B_Kernel_diag_py = {"integrand_B_Kernel_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_279integrand_B_Kernel_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_279integrand_B_Kernel_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Kernel_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 1); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 2); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 3); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 4); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 5); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 6); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 7); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 8); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 9); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 10); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 11); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, 12); __PYX_ERR(0, 2549, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Kernel_diag_py") < 0)) __PYX_ERR(0, 2549, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2550, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2550, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2551, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2551, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2551, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2551, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2551, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2552, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2552, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[12]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2552, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_diag_py", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2549, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2550, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2550, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2551, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_278integrand_B_Kernel_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_278integrand_B_Kernel_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Kernel_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2549, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2549, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2549, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2554
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2555
 *         ):
 *     return integrand_B_Kernel_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2555, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2555, __pyx_L1_error)
  }

  /* "hitomi.pyx":2556
 *     return integrand_B_Kernel_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2556, __pyx_L1_error)
  }

  /* "hitomi.pyx":2554
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Kernel_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2549
 * ################################
 * 
 * def integrand_B_Kernel_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2561
 * ################################
 * 
 * def integrand_B_Kernel_SN_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_281integrand_B_Kernel_SN_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_281integrand_B_Kernel_SN_diag_py = {"integrand_B_Kernel_SN_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_281integrand_B_Kernel_SN_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_281integrand_B_Kernel_SN_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Kernel_SN_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 1); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 2); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 3); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 4); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 5); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 6); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 7); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 8); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 9); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 10); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 11); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, 12); __PYX_ERR(0, 2561, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Kernel_SN_diag_py") < 0)) __PYX_ERR(0, 2561, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2562, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2562, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2563, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2563, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2563, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2563, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2563, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2564, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2564, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[12]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2564, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_SN_diag_py", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2561, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_SN_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2562, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2562, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2563, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_280integrand_B_Kernel_SN_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_280integrand_B_Kernel_SN_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Kernel_SN_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2566
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_SN_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2567
 *         ):
 *     return integrand_B_Kernel_SN_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2567, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2567, __pyx_L1_error)
  }

  /* "hitomi.pyx":2568
 *     return integrand_B_Kernel_SN_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2568, __pyx_L1_error)
  }

  /* "hitomi.pyx":2566
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_SN_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Kernel_SN_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2561
 * ################################
 * 
 * def integrand_B_Kernel_SN_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_SN_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "hitomi.pyx":2571
 *             &parameters[0])
 * 
 * def integrand_B_Kernel_PNG_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

/* Python wrapper */
static PyObject *__pyx_pw_8hitomipy_283integrand_B_Kernel_PNG_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_8hitomipy_283integrand_B_Kernel_PNG_diag_py = {"integrand_B_Kernel_PNG_diag_py", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_8hitomipy_283integrand_B_Kernel_PNG_diag_py, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_8hitomipy_283integrand_B_Kernel_PNG_diag_py(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_xx_in = 0;
  int __pyx_v_ndim;
  PyArrayObject *__pyx_v_ff_out = 0;
  int __pyx_v_ncomp;
  PyArrayObject *__pyx_v_kbin = 0;
  int __pyx_v_num_k_bin;
  int __pyx_v_ell1;
  int __pyx_v_ell2;
  int __pyx_v_ELL;
  double __pyx_v_f;
  double __pyx_v_Sigma2;
  double __pyx_v_dSigma2;
  char *__pyx_v_parameters;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("integrand_B_Kernel_PNG_diag_py (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_xx_in,&__pyx_n_s_ndim,&__pyx_n_s_ff_out,&__pyx_n_s_ncomp,&__pyx_n_s_kbin,&__pyx_n_s_num_k_bin,&__pyx_n_s_ell1,&__pyx_n_s_ell2,&__pyx_n_s_ELL,&__pyx_n_s_f,&__pyx_n_s_Sigma2,&__pyx_n_s_dSigma2,&__pyx_n_s_parameters,0};
    PyObject* values[13] = {0,0,0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_xx_in)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ndim)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 1); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ff_out)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 2); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ncomp)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 3); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_kbin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 4); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_k_bin)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 5); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 6); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ell2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 7); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ELL)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 8); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 9); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Sigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 10); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (likely((values[11] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dSigma2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 11); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (likely((values[12] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, 12); __PYX_ERR(0, 2571, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "integrand_B_Kernel_PNG_diag_py") < 0)) __PYX_ERR(0, 2571, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 13) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
      values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
    }
    __pyx_v_xx_in = ((PyArrayObject *)values[0]);
    __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2572, __pyx_L3_error)
    __pyx_v_ff_out = ((PyArrayObject *)values[2]);
    __pyx_v_ncomp = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_ncomp == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2572, __pyx_L3_error)
    __pyx_v_kbin = ((PyArrayObject *)values[4]);
    __pyx_v_num_k_bin = __Pyx_PyInt_As_int(values[5]); if (unlikely((__pyx_v_num_k_bin == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2573, __pyx_L3_error)
    __pyx_v_ell1 = __Pyx_PyInt_As_int(values[6]); if (unlikely((__pyx_v_ell1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2573, __pyx_L3_error)
    __pyx_v_ell2 = __Pyx_PyInt_As_int(values[7]); if (unlikely((__pyx_v_ell2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2573, __pyx_L3_error)
    __pyx_v_ELL = __Pyx_PyInt_As_int(values[8]); if (unlikely((__pyx_v_ELL == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2573, __pyx_L3_error)
    __pyx_v_f = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_f == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2573, __pyx_L3_error)
    __pyx_v_Sigma2 = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_Sigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2574, __pyx_L3_error)
    __pyx_v_dSigma2 = __pyx_PyFloat_AsDouble(values[11]); if (unlikely((__pyx_v_dSigma2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2574, __pyx_L3_error)
    __pyx_v_parameters = __Pyx_PyObject_AsWritableString(values[12]); if (unlikely((!__pyx_v_parameters) && PyErr_Occurred())) __PYX_ERR(0, 2574, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("integrand_B_Kernel_PNG_diag_py", 1, 13, 13, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2571, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_PNG_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_xx_in), __pyx_ptype_5numpy_ndarray, 0, "xx_in", 0))) __PYX_ERR(0, 2572, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ff_out), __pyx_ptype_5numpy_ndarray, 0, "ff_out", 0))) __PYX_ERR(0, 2572, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kbin), __pyx_ptype_5numpy_ndarray, 0, "kbin", 0))) __PYX_ERR(0, 2573, __pyx_L1_error)
  __pyx_r = __pyx_pf_8hitomipy_282integrand_B_Kernel_PNG_diag_py(__pyx_self, __pyx_v_xx_in, __pyx_v_ndim, __pyx_v_ff_out, __pyx_v_ncomp, __pyx_v_kbin, __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, __pyx_v_parameters);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8hitomipy_282integrand_B_Kernel_PNG_diag_py(CYTHON_UNUSED PyObject *__pyx_self, PyArrayObject *__pyx_v_xx_in, int __pyx_v_ndim, PyArrayObject *__pyx_v_ff_out, int __pyx_v_ncomp, PyArrayObject *__pyx_v_kbin, int __pyx_v_num_k_bin, int __pyx_v_ell1, int __pyx_v_ell2, int __pyx_v_ELL, double __pyx_v_f, double __pyx_v_Sigma2, double __pyx_v_dSigma2, char *__pyx_v_parameters) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_ff_out;
  __Pyx_Buffer __pyx_pybuffer_ff_out;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_kbin;
  __Pyx_Buffer __pyx_pybuffer_kbin;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_xx_in;
  __Pyx_Buffer __pyx_pybuffer_xx_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("integrand_B_Kernel_PNG_diag_py", 0);
  __pyx_pybuffer_xx_in.pybuffer.buf = NULL;
  __pyx_pybuffer_xx_in.refcount = 0;
  __pyx_pybuffernd_xx_in.data = NULL;
  __pyx_pybuffernd_xx_in.rcbuffer = &__pyx_pybuffer_xx_in;
  __pyx_pybuffer_ff_out.pybuffer.buf = NULL;
  __pyx_pybuffer_ff_out.refcount = 0;
  __pyx_pybuffernd_ff_out.data = NULL;
  __pyx_pybuffernd_ff_out.rcbuffer = &__pyx_pybuffer_ff_out;
  __pyx_pybuffer_kbin.pybuffer.buf = NULL;
  __pyx_pybuffer_kbin.refcount = 0;
  __pyx_pybuffernd_kbin.data = NULL;
  __pyx_pybuffernd_kbin.rcbuffer = &__pyx_pybuffer_kbin;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer, (PyObject*)__pyx_v_xx_in, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2571, __pyx_L1_error)
  }
  __pyx_pybuffernd_xx_in.diminfo[0].strides = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_xx_in.diminfo[0].shape = __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer, (PyObject*)__pyx_v_ff_out, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2571, __pyx_L1_error)
  }
  __pyx_pybuffernd_ff_out.diminfo[0].strides = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_ff_out.diminfo[0].shape = __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer, (PyObject*)__pyx_v_kbin, &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) __PYX_ERR(0, 2571, __pyx_L1_error)
  }
  __pyx_pybuffernd_kbin.diminfo[0].strides = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_kbin.diminfo[0].shape = __pyx_pybuffernd_kbin.rcbuffer->pybuffer.shape[0];

  /* "hitomi.pyx":2576
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_PNG_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __Pyx_XDECREF(__pyx_r);

  /* "hitomi.pyx":2577
 *         ):
 *     return integrand_B_Kernel_PNG_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,             # <<<<<<<<<<<<<<
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 *             &parameters[0])
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_pybuffernd_xx_in.diminfo[0].shape;
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_pybuffernd_xx_in.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2577, __pyx_L1_error)
  }
  __pyx_t_3 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_ff_out.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_ff_out.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2577, __pyx_L1_error)
  }

  /* "hitomi.pyx":2578
 *     return integrand_B_Kernel_PNG_diag(
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,             # <<<<<<<<<<<<<<
 *             &parameters[0])
 */
  __pyx_t_4 = 0;
  __pyx_t_2 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_kbin.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_2 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_kbin.diminfo[0].shape)) __pyx_t_2 = 0;
  if (unlikely(__pyx_t_2 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_2);
    __PYX_ERR(0, 2578, __pyx_L1_error)
  }

  /* "hitomi.pyx":2576
 *         double Sigma2, double dSigma2, char * parameters
 *         ):
 *     return integrand_B_Kernel_PNG_diag(             # <<<<<<<<<<<<<<
 *             &xx_in[0], ndim, &ff_out[0], ncomp,
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, f, Sigma2, dSigma2,
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(integrand_B_Kernel_PNG_diag((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_xx_in.rcbuffer->pybuffer.buf, __pyx_t_1, __pyx_pybuffernd_xx_in.diminfo[0].strides))), __pyx_v_ndim, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_ff_out.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_ff_out.diminfo[0].strides))), __pyx_v_ncomp, (&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_kbin.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_kbin.diminfo[0].strides))), __pyx_v_num_k_bin, __pyx_v_ell1, __pyx_v_ell2, __pyx_v_ELL, __pyx_v_f, __pyx_v_Sigma2, __pyx_v_dSigma2, (&(__pyx_v_parameters[0])))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "hitomi.pyx":2571
 *             &parameters[0])
 * 
 * def integrand_B_Kernel_PNG_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("hitomipy.integrand_B_Kernel_PNG_diag_py", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_ff_out.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_kbin.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_xx_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":735
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":736
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":735
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":738
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":739
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":738
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":741
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":742
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":741
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":744
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":745
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":744
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":747
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":748
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":747
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":750
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":751
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":752
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":751
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":754
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":750
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":931
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":932
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":933
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":931
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":935
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":936
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":937
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":938
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":937
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":939
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":935
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":943
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":945
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 945, __pyx_L3_error)

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":946
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 946, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":947
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 947, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 947, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":944
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":943
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":949
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":951
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 951, __pyx_L3_error)

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":952
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 952, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":953
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 953, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 953, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":950
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":949
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":955
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":957
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 957, __pyx_L3_error)

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":958
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(1, 958, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":959
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef extern from *:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 959, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(1, 959, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":956
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":955
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":981
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":969
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":984
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":996
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":984
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":999
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1006
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":999
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1009
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1013
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1009
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1016
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1020
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1016
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_hitomipy(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_hitomipy},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "hitomipy",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_A02, __pyx_k_A02, sizeof(__pyx_k_A02), 0, 0, 1, 1},
  {&__pyx_n_s_A03, __pyx_k_A03, sizeof(__pyx_k_A03), 0, 0, 1, 1},
  {&__pyx_n_s_A04, __pyx_k_A04, sizeof(__pyx_k_A04), 0, 0, 1, 1},
  {&__pyx_n_s_A11, __pyx_k_A11, sizeof(__pyx_k_A11), 0, 0, 1, 1},
  {&__pyx_n_s_A12, __pyx_k_A12, sizeof(__pyx_k_A12), 0, 0, 1, 1},
  {&__pyx_n_s_A13, __pyx_k_A13, sizeof(__pyx_k_A13), 0, 0, 1, 1},
  {&__pyx_n_s_A20, __pyx_k_A20, sizeof(__pyx_k_A20), 0, 0, 1, 1},
  {&__pyx_n_s_A21, __pyx_k_A21, sizeof(__pyx_k_A21), 0, 0, 1, 1},
  {&__pyx_n_s_A22, __pyx_k_A22, sizeof(__pyx_k_A22), 0, 0, 1, 1},
  {&__pyx_n_s_A30, __pyx_k_A30, sizeof(__pyx_k_A30), 0, 0, 1, 1},
  {&__pyx_n_s_A31, __pyx_k_A31, sizeof(__pyx_k_A31), 0, 0, 1, 1},
  {&__pyx_n_s_A40, __pyx_k_A40, sizeof(__pyx_k_A40), 0, 0, 1, 1},
  {&__pyx_n_s_Bshot, __pyx_k_Bshot, sizeof(__pyx_k_Bshot), 0, 0, 1, 1},
  {&__pyx_n_s_DeltaK, __pyx_k_DeltaK, sizeof(__pyx_k_DeltaK), 0, 0, 1, 1},
  {&__pyx_n_s_ELL, __pyx_k_ELL, sizeof(__pyx_k_ELL), 0, 0, 1, 1},
  {&__pyx_n_s_ELL_dash, __pyx_k_ELL_dash, sizeof(__pyx_k_ELL_dash), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
  {&__pyx_n_s_Pshot, __pyx_k_Pshot, sizeof(__pyx_k_Pshot), 0, 0, 1, 1},
  {&__pyx_n_s_R, __pyx_k_R, sizeof(__pyx_k_R), 0, 0, 1, 1},
  {&__pyx_n_s_Sig2_py, __pyx_k_Sig2_py, sizeof(__pyx_k_Sig2_py), 0, 0, 1, 1},
  {&__pyx_n_s_Sigma2, __pyx_k_Sigma2, sizeof(__pyx_k_Sigma2), 0, 0, 1, 1},
  {&__pyx_n_s_Tcmb, __pyx_k_Tcmb, sizeof(__pyx_k_Tcmb), 0, 0, 1, 1},
  {&__pyx_n_s_alpha_parallel, __pyx_k_alpha_parallel, sizeof(__pyx_k_alpha_parallel), 0, 0, 1, 1},
  {&__pyx_n_s_alpha_perp, __pyx_k_alpha_perp, sizeof(__pyx_k_alpha_perp), 0, 0, 1, 1},
  {&__pyx_n_s_b1, __pyx_k_b1, sizeof(__pyx_k_b1), 0, 0, 1, 1},
  {&__pyx_n_s_b1_fid, __pyx_k_b1_fid, sizeof(__pyx_k_b1_fid), 0, 0, 1, 1},
  {&__pyx_n_s_b2, __pyx_k_b2, sizeof(__pyx_k_b2), 0, 0, 1, 1},
  {&__pyx_n_s_b3, __pyx_k_b3, sizeof(__pyx_k_b3), 0, 0, 1, 1},
  {&__pyx_n_s_bDK, __pyx_k_bDK, sizeof(__pyx_k_bDK), 0, 0, 1, 1},
  {&__pyx_n_s_bG2, __pyx_k_bG2, sizeof(__pyx_k_bG2), 0, 0, 1, 1},
  {&__pyx_n_s_bGamma3, __pyx_k_bGamma3, sizeof(__pyx_k_bGamma3), 0, 0, 1, 1},
  {&__pyx_n_s_bK2, __pyx_k_bK2, sizeof(__pyx_k_bK2), 0, 0, 1, 1},
  {&__pyx_n_s_bK3, __pyx_k_bK3, sizeof(__pyx_k_bK3), 0, 0, 1, 1},
  {&__pyx_n_s_bO, __pyx_k_bO, sizeof(__pyx_k_bO), 0, 0, 1, 1},
  {&__pyx_n_s_c0, __pyx_k_c0, sizeof(__pyx_k_c0), 0, 0, 1, 1},
  {&__pyx_n_s_c1, __pyx_k_c1, sizeof(__pyx_k_c1), 0, 0, 1, 1},
  {&__pyx_n_s_c2, __pyx_k_c2, sizeof(__pyx_k_c2), 0, 0, 1, 1},
  {&__pyx_n_s_calcNormalizationNoWiggle_py, __pyx_k_calcNormalizationNoWiggle_py, sizeof(__pyx_k_calcNormalizationNoWiggle_py), 0, 0, 1, 1},
  {&__pyx_n_s_calcNormalizationUsingSigma8_py, __pyx_k_calcNormalizationUsingSigma8_py, sizeof(__pyx_k_calcNormalizationUsingSigma8_py), 0, 0, 1, 1},
  {&__pyx_n_s_calcSigma_dd_py, __pyx_k_calcSigma_dd_py, sizeof(__pyx_k_calcSigma_dd_py), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_dSig2_py, __pyx_k_dSig2_py, sizeof(__pyx_k_dSig2_py), 0, 0, 1, 1},
  {&__pyx_n_s_dSigma2, __pyx_k_dSigma2, sizeof(__pyx_k_dSigma2), 0, 0, 1, 1},
  {&__pyx_n_s_ell1, __pyx_k_ell1, sizeof(__pyx_k_ell1), 0, 0, 1, 1},
  {&__pyx_n_s_ell1_dash, __pyx_k_ell1_dash, sizeof(__pyx_k_ell1_dash), 0, 0, 1, 1},
  {&__pyx_n_s_ell2, __pyx_k_ell2, sizeof(__pyx_k_ell2), 0, 0, 1, 1},
  {&__pyx_n_s_ell2_dash, __pyx_k_ell2_dash, sizeof(__pyx_k_ell2_dash), 0, 0, 1, 1},
  {&__pyx_n_s_epsilon, __pyx_k_epsilon, sizeof(__pyx_k_epsilon), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_s_f_pk_no_wiggle_integrand_py, __pyx_k_f_pk_no_wiggle_integrand_py, sizeof(__pyx_k_f_pk_no_wiggle_integrand_py), 0, 0, 1, 1},
  {&__pyx_n_s_ff_out, __pyx_k_ff_out, sizeof(__pyx_k_ff_out), 0, 0, 1, 1},
  {&__pyx_n_s_finalizeInputPowerSpectrum_py, __pyx_k_finalizeInputPowerSpectrum_py, sizeof(__pyx_k_finalizeInputPowerSpectrum_py), 0, 0, 1, 1},
  {&__pyx_n_s_fz, __pyx_k_fz, sizeof(__pyx_k_fz), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_hankel_py, __pyx_k_hankel_py, sizeof(__pyx_k_hankel_py), 0, 0, 1, 1},
  {&__pyx_kp_s_hitomi_pyx, __pyx_k_hitomi_pyx, sizeof(__pyx_k_hitomi_pyx), 0, 0, 1, 0},
  {&__pyx_n_s_hitomipy, __pyx_k_hitomipy, sizeof(__pyx_k_hitomipy), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_initializeInputPowerSpectrum_py, __pyx_k_initializeInputPowerSpectrum_py, sizeof(__pyx_k_initializeInputPowerSpectrum_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_FoG_Damping_diag_py, __pyx_k_integrand_B_FoG_Damping_diag_py, sizeof(__pyx_k_integrand_B_FoG_Damping_diag_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_FoG_Damping_py, __pyx_k_integrand_B_FoG_Damping_py, sizeof(__pyx_k_integrand_B_FoG_Damping_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Kernel_PNG_diag_py, __pyx_k_integrand_B_Kernel_PNG_diag_py, sizeof(__pyx_k_integrand_B_Kernel_PNG_diag_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Kernel_SN_diag_py, __pyx_k_integrand_B_Kernel_SN_diag_py, sizeof(__pyx_k_integrand_B_Kernel_SN_diag_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Kernel_SN_py, __pyx_k_integrand_B_Kernel_SN_py, sizeof(__pyx_k_integrand_B_Kernel_SN_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Kernel_diag_py, __pyx_k_integrand_B_Kernel_diag_py, sizeof(__pyx_k_integrand_B_Kernel_diag_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Kernel_py, __pyx_k_integrand_B_Kernel_py, sizeof(__pyx_k_integrand_B_Kernel_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_NonGaussian_Equilate, __pyx_k_integrand_B_NonGaussian_Equilate, sizeof(__pyx_k_integrand_B_NonGaussian_Equilate), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_NonGaussian_Local_py, __pyx_k_integrand_B_NonGaussian_Local_py, sizeof(__pyx_k_integrand_B_NonGaussian_Local_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_NonGaussian_Orthogon, __pyx_k_integrand_B_NonGaussian_Orthogon, sizeof(__pyx_k_integrand_B_NonGaussian_Orthogon), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_SN_FoG_Damping_diag, __pyx_k_integrand_B_SN_FoG_Damping_diag, sizeof(__pyx_k_integrand_B_SN_FoG_Damping_diag), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D, __pyx_k_integrand_B_Tree_BAO_RealSpace_D, sizeof(__pyx_k_integrand_B_Tree_BAO_RealSpace_D), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_2, __pyx_k_integrand_B_Tree_BAO_RealSpace_D_2, sizeof(__pyx_k_integrand_B_Tree_BAO_RealSpace_D_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_3, __pyx_k_integrand_B_Tree_BAO_RealSpace_D_3, sizeof(__pyx_k_integrand_B_Tree_BAO_RealSpace_D_3), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_Template_py, __pyx_k_integrand_B_Tree_BAO_Template_py, sizeof(__pyx_k_integrand_B_Tree_BAO_Template_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1_b1_b1_py, __pyx_k_integrand_B_Tree_BAO_b1_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b1_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1_b1_f_py, __pyx_k_integrand_B_Tree_BAO_b1_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b1_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1_f_f_py, __pyx_k_integrand_B_Tree_BAO_b1_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b1_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1f_b1_b1_p, __pyx_k_integrand_B_Tree_BAO_b1f_b1_b1_p, sizeof(__pyx_k_integrand_B_Tree_BAO_b1f_b1_b1_p), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1f_b1_f_py, __pyx_k_integrand_B_Tree_BAO_b1f_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b1f_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b1f_f_f_py, __pyx_k_integrand_B_Tree_BAO_b1f_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b1f_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b2_b1_b1_py, __pyx_k_integrand_B_Tree_BAO_b2_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b2_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b2_b1_f_py, __pyx_k_integrand_B_Tree_BAO_b2_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b2_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_b2_f_f_py, __pyx_k_integrand_B_Tree_BAO_b2_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_b2_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_bK2_b1_b1_p, __pyx_k_integrand_B_Tree_BAO_bK2_b1_b1_p, sizeof(__pyx_k_integrand_B_Tree_BAO_bK2_b1_b1_p), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_bK2_b1_f_py, __pyx_k_integrand_B_Tree_BAO_bK2_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_bK2_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_bK2_f_f_py, __pyx_k_integrand_B_Tree_BAO_bK2_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_bK2_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_f_f_f_py, __pyx_k_integrand_B_Tree_BAO_f_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_f_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_ff_f_f_py, __pyx_k_integrand_B_Tree_BAO_ff_f_f_py, sizeof(__pyx_k_integrand_B_Tree_BAO_ff_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_BAO_py, __pyx_k_integrand_B_Tree_BAO_py, sizeof(__pyx_k_integrand_B_Tree_BAO_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_DampIvanov_py, __pyx_k_integrand_B_Tree_DampIvanov_py, sizeof(__pyx_k_integrand_B_Tree_DampIvanov_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_FoG_py, __pyx_k_integrand_B_Tree_FoG_py, sizeof(__pyx_k_integrand_B_Tree_FoG_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp, __pyx_k_integrand_B_Tree_NoWiggle_RealSp, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_RealSp), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_2, __pyx_k_integrand_B_Tree_NoWiggle_RealSp_2, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_RealSp_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_3, __pyx_k_integrand_B_Tree_NoWiggle_RealSp_3, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_RealSp_3), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_Recons, __pyx_k_integrand_B_Tree_NoWiggle_Recons, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_Recons), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1, __pyx_k_integrand_B_Tree_NoWiggle_b1_b1, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1_b1), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1_2, __pyx_k_integrand_B_Tree_NoWiggle_b1_b1_2, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1_b1_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1_f_f, __pyx_k_integrand_B_Tree_NoWiggle_b1_f_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1_f_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1, __pyx_k_integrand_B_Tree_NoWiggle_b1f_b1, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1f_b1), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1_2, __pyx_k_integrand_B_Tree_NoWiggle_b1f_b1_2, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1f_b1_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b1f_f, __pyx_k_integrand_B_Tree_NoWiggle_b1f_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b1f_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1, __pyx_k_integrand_B_Tree_NoWiggle_b2_b1, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b2_b1), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1_2, __pyx_k_integrand_B_Tree_NoWiggle_b2_b1_2, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b2_b1_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_b2_f_f, __pyx_k_integrand_B_Tree_NoWiggle_b2_f_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_b2_f_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1, __pyx_k_integrand_B_Tree_NoWiggle_bK2_b1, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_bK2_b1), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1_2, __pyx_k_integrand_B_Tree_NoWiggle_bK2_b1_2, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_bK2_b1_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_bK2_f, __pyx_k_integrand_B_Tree_NoWiggle_bK2_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_bK2_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_f_f_f, __pyx_k_integrand_B_Tree_NoWiggle_f_f_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_f_f_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_ff_f_f, __pyx_k_integrand_B_Tree_NoWiggle_ff_f_f, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_ff_f_f), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_NoWiggle_py, __pyx_k_integrand_B_Tree_NoWiggle_py, sizeof(__pyx_k_integrand_B_Tree_NoWiggle_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_Reconstructed_p, __pyx_k_integrand_B_Tree_Reconstructed_p, sizeof(__pyx_k_integrand_B_Tree_Reconstructed_p), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1_b1_b1_py, __pyx_k_integrand_B_Tree_b1_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_b1_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1_b1_f_py, __pyx_k_integrand_B_Tree_b1_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_b1_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1_f_f_py, __pyx_k_integrand_B_Tree_b1_f_f_py, sizeof(__pyx_k_integrand_B_Tree_b1_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1f_b1_b1_py, __pyx_k_integrand_B_Tree_b1f_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_b1f_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1f_b1_f_py, __pyx_k_integrand_B_Tree_b1f_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_b1f_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b1f_f_f_py, __pyx_k_integrand_B_Tree_b1f_f_f_py, sizeof(__pyx_k_integrand_B_Tree_b1f_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b2_b1_b1_py, __pyx_k_integrand_B_Tree_b2_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_b2_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b2_b1_f_py, __pyx_k_integrand_B_Tree_b2_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_b2_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_b2_f_f_py, __pyx_k_integrand_B_Tree_b2_f_f_py, sizeof(__pyx_k_integrand_B_Tree_b2_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_bK2_b1_b1_py, __pyx_k_integrand_B_Tree_bK2_b1_b1_py, sizeof(__pyx_k_integrand_B_Tree_bK2_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_bK2_b1_f_py, __pyx_k_integrand_B_Tree_bK2_b1_f_py, sizeof(__pyx_k_integrand_B_Tree_bK2_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_bK2_f_f_py, __pyx_k_integrand_B_Tree_bK2_f_f_py, sizeof(__pyx_k_integrand_B_Tree_bK2_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_f_f_f_py, __pyx_k_integrand_B_Tree_f_f_f_py, sizeof(__pyx_k_integrand_B_Tree_f_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_ff_f_f_py, __pyx_k_integrand_B_Tree_ff_f_f_py, sizeof(__pyx_k_integrand_B_Tree_ff_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_B_Tree_py, __pyx_k_integrand_B_Tree_py, sizeof(__pyx_k_integrand_B_Tree_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_1loop_py, __pyx_k_integrand_P_1loop_py, sizeof(__pyx_k_integrand_P_1loop_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Counterterm_py, __pyx_k_integrand_P_Counterterm_py, sizeof(__pyx_k_integrand_P_Counterterm_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Damping_1loop_py, __pyx_k_integrand_P_Damping_1loop_py, sizeof(__pyx_k_integrand_P_Damping_1loop_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Damping_Counterterm, __pyx_k_integrand_P_Damping_Counterterm, sizeof(__pyx_k_integrand_P_Damping_Counterterm), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Damping_Tree_py, __pyx_k_integrand_P_Damping_Tree_py, sizeof(__pyx_k_integrand_P_Damping_Tree_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Kernel_1loop_13_py, __pyx_k_integrand_P_Kernel_1loop_13_py, sizeof(__pyx_k_integrand_P_Kernel_1loop_13_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Kernel_1loop_22_norm, __pyx_k_integrand_P_Kernel_1loop_22_norm, sizeof(__pyx_k_integrand_P_Kernel_1loop_22_norm), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Kernel_1loop_22_py, __pyx_k_integrand_P_Kernel_1loop_22_py, sizeof(__pyx_k_integrand_P_Kernel_1loop_22_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Kernel_Counterterm_p, __pyx_k_integrand_P_Kernel_Counterterm_p, sizeof(__pyx_k_integrand_P_Kernel_Counterterm_p), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Kernel_Tree_py, __pyx_k_integrand_P_Kernel_Tree_py, sizeof(__pyx_k_integrand_P_Kernel_Tree_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_LocalMean_py, __pyx_k_integrand_P_LocalMean_py, sizeof(__pyx_k_integrand_P_LocalMean_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_NonLinearFitting_Win, __pyx_k_integrand_P_NonLinearFitting_Win, sizeof(__pyx_k_integrand_P_NonLinearFitting_Win), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_NonLinearFitting_py, __pyx_k_integrand_P_NonLinearFitting_py, sizeof(__pyx_k_integrand_P_NonLinearFitting_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_SigmaB_py, __pyx_k_integrand_P_SigmaB_py, sizeof(__pyx_k_integrand_P_SigmaB_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_BAO_Fitting_py, __pyx_k_integrand_P_Tree_BAO_Fitting_py, sizeof(__pyx_k_integrand_P_Tree_BAO_Fitting_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_BAO_b1_b1_py, __pyx_k_integrand_P_Tree_BAO_b1_b1_py, sizeof(__pyx_k_integrand_P_Tree_BAO_b1_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_BAO_b1_f_py, __pyx_k_integrand_P_Tree_BAO_b1_f_py, sizeof(__pyx_k_integrand_P_Tree_BAO_b1_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_BAO_f_f_py, __pyx_k_integrand_P_Tree_BAO_f_f_py, sizeof(__pyx_k_integrand_P_Tree_BAO_f_f_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_BAO_py, __pyx_k_integrand_P_Tree_BAO_py, sizeof(__pyx_k_integrand_P_Tree_BAO_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_NoWiggle_py, __pyx_k_integrand_P_Tree_NoWiggle_py, sizeof(__pyx_k_integrand_P_Tree_NoWiggle_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_Tree_py, __pyx_k_integrand_P_Tree_py, sizeof(__pyx_k_integrand_P_Tree_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_sigma2_para_Reconstr, __pyx_k_integrand_P_sigma2_para_Reconstr, sizeof(__pyx_k_integrand_P_sigma2_para_Reconstr), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_P_sigma2_perp_Reconstr, __pyx_k_integrand_P_sigma2_perp_Reconstr, sizeof(__pyx_k_integrand_P_sigma2_perp_Reconstr), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_SS_py, __pyx_k_integrand_SS_py, sizeof(__pyx_k_integrand_SS_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_SSpow_py, __pyx_k_integrand_SSpow_py, sizeof(__pyx_k_integrand_SSpow_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_BB_G_diag_py, __pyx_k_integrand_cov_BB_G_diag_py, sizeof(__pyx_k_integrand_cov_BB_G_diag_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_BB_G_py, __pyx_k_integrand_cov_BB_G_py, sizeof(__pyx_k_integrand_cov_BB_G_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_G_NL_py, __pyx_k_integrand_cov_PP_G_NL_py, sizeof(__pyx_k_integrand_cov_PP_G_NL_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_G_py, __pyx_k_integrand_cov_PP_G_py, sizeof(__pyx_k_integrand_cov_PP_G_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling, __pyx_k_integrand_cov_PP_NG_BeatCoupling, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_10, __pyx_k_integrand_cov_PP_NG_BeatCoupling_10, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_10), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_11, __pyx_k_integrand_cov_PP_NG_BeatCoupling_11, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_11), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_2, __pyx_k_integrand_cov_PP_NG_BeatCoupling_2, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_3, __pyx_k_integrand_cov_PP_NG_BeatCoupling_3, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_3), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_4, __pyx_k_integrand_cov_PP_NG_BeatCoupling_4, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_4), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_5, __pyx_k_integrand_cov_PP_NG_BeatCoupling_5, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_5), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_6, __pyx_k_integrand_cov_PP_NG_BeatCoupling_6, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_6), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_7, __pyx_k_integrand_cov_PP_NG_BeatCoupling_7, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_7), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_8, __pyx_k_integrand_cov_PP_NG_BeatCoupling_8, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_8), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_BeatCoupling_9, __pyx_k_integrand_cov_PP_NG_BeatCoupling_9, sizeof(__pyx_k_integrand_cov_PP_NG_BeatCoupling_9), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL, __pyx_k_integrand_cov_PP_NG_LocalMean_NL, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_NL), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_2, __pyx_k_integrand_cov_PP_NG_LocalMean_NL_2, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_NL_2), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_3, __pyx_k_integrand_cov_PP_NG_LocalMean_NL_3, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_NL_3), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_4, __pyx_k_integrand_cov_PP_NG_LocalMean_NL_4, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_NL_4), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_5, __pyx_k_integrand_cov_PP_NG_LocalMean_NL_5, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_NL_5), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_LocalMean_py, __pyx_k_integrand_cov_PP_NG_LocalMean_py, sizeof(__pyx_k_integrand_cov_PP_NG_LocalMean_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_b1_py, __pyx_k_integrand_cov_PP_NG_b1_py, sizeof(__pyx_k_integrand_cov_PP_NG_b1_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_b2_b2_py, __pyx_k_integrand_cov_PP_NG_b2_b2_py, sizeof(__pyx_k_integrand_cov_PP_NG_b2_b2_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_b2_bK2_py, __pyx_k_integrand_cov_PP_NG_b2_bK2_py, sizeof(__pyx_k_integrand_cov_PP_NG_b2_bK2_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_b2_py, __pyx_k_integrand_cov_PP_NG_b2_py, sizeof(__pyx_k_integrand_cov_PP_NG_b2_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_b3_py, __pyx_k_integrand_cov_PP_NG_b3_py, sizeof(__pyx_k_integrand_cov_PP_NG_b3_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_bDK_py, __pyx_k_integrand_cov_PP_NG_bDK_py, sizeof(__pyx_k_integrand_cov_PP_NG_bDK_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_bK2_bK2_py, __pyx_k_integrand_cov_PP_NG_bK2_bK2_py, sizeof(__pyx_k_integrand_cov_PP_NG_bK2_bK2_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_bK2_py, __pyx_k_integrand_cov_PP_NG_bK2_py, sizeof(__pyx_k_integrand_cov_PP_NG_bK2_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_bK3_py, __pyx_k_integrand_cov_PP_NG_bK3_py, sizeof(__pyx_k_integrand_cov_PP_NG_bK3_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_bO_py, __pyx_k_integrand_cov_PP_NG_bO_py, sizeof(__pyx_k_integrand_cov_PP_NG_bO_py), 0, 0, 1, 1},
  {&__pyx_n_s_integrand_cov_PP_NG_py, __pyx_k_integrand_cov_PP_NG_py, sizeof(__pyx_k_integrand_cov_PP_NG_py), 0, 0, 1, 1},
  {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
  {&__pyx_n_s_k1, __pyx_k_k1, sizeof(__pyx_k_k1), 0, 0, 1, 1},
  {&__pyx_n_s_k1_dash, __pyx_k_k1_dash, sizeof(__pyx_k_k1_dash), 0, 0, 1, 1},
  {&__pyx_n_s_kbin, __pyx_k_kbin, sizeof(__pyx_k_kbin), 0, 0, 1, 1},
  {&__pyx_n_s_kbin_in, __pyx_k_kbin_in, sizeof(__pyx_k_kbin_in), 0, 0, 1, 1},
  {&__pyx_n_s_kmag, __pyx_k_kmag, sizeof(__pyx_k_kmag), 0, 0, 1, 1},
  {&__pyx_n_s_kmag1, __pyx_k_kmag1, sizeof(__pyx_k_kmag1), 0, 0, 1, 1},
  {&__pyx_n_s_kmax, __pyx_k_kmax, sizeof(__pyx_k_kmax), 0, 0, 1, 1},
  {&__pyx_n_s_kmin, __pyx_k_kmin, sizeof(__pyx_k_kmin), 0, 0, 1, 1},
  {&__pyx_n_s_knl, __pyx_k_knl, sizeof(__pyx_k_knl), 0, 0, 1, 1},
  {&__pyx_n_s_ks, __pyx_k_ks, sizeof(__pyx_k_ks), 0, 0, 1, 1},
  {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {&__pyx_n_s_m, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_n_s, __pyx_k_n_s, sizeof(__pyx_k_n_s), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_ncomp, __pyx_k_ncomp, sizeof(__pyx_k_ncomp), 0, 0, 1, 1},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_nmean, __pyx_k_nmean, sizeof(__pyx_k_nmean), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_num_epsilon, __pyx_k_num_epsilon, sizeof(__pyx_k_num_epsilon), 0, 0, 1, 1},
  {&__pyx_n_s_num_k_bin, __pyx_k_num_k_bin, sizeof(__pyx_k_num_k_bin), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_omega0, __pyx_k_omega0, sizeof(__pyx_k_omega0), 0, 0, 1, 1},
  {&__pyx_n_s_omegab, __pyx_k_omegab, sizeof(__pyx_k_omegab), 0, 0, 1, 1},
  {&__pyx_n_s_parameters, __pyx_k_parameters, sizeof(__pyx_k_parameters), 0, 0, 1, 1},
  {&__pyx_n_s_pk, __pyx_k_pk, sizeof(__pyx_k_pk), 0, 0, 1, 1},
  {&__pyx_n_s_pk2xi_py, __pyx_k_pk2xi_py, sizeof(__pyx_k_pk2xi_py), 0, 0, 1, 1},
  {&__pyx_n_s_pk_0_in, __pyx_k_pk_0_in, sizeof(__pyx_k_pk_0_in), 0, 0, 1, 1},
  {&__pyx_n_s_pk_2_in, __pyx_k_pk_2_in, sizeof(__pyx_k_pk_2_in), 0, 0, 1, 1},
  {&__pyx_n_s_pk_in, __pyx_k_pk_in, sizeof(__pyx_k_pk_in), 0, 0, 1, 1},
  {&__pyx_n_s_pk_num_in, __pyx_k_pk_num_in, sizeof(__pyx_k_pk_num_in), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_rbao, __pyx_k_rbao, sizeof(__pyx_k_rbao), 0, 0, 1, 1},
  {&__pyx_n_s_readInputNoWigglePowerSpectrum_p, __pyx_k_readInputNoWigglePowerSpectrum_p, sizeof(__pyx_k_readInputNoWigglePowerSpectrum_p), 0, 0, 1, 1},
  {&__pyx_n_s_readInputPowerSpectrum_py, __pyx_k_readInputPowerSpectrum_py, sizeof(__pyx_k_readInputPowerSpectrum_py), 0, 0, 1, 1},
  {&__pyx_n_s_readInputPrimordialPowerSpectrum, __pyx_k_readInputPrimordialPowerSpectrum, sizeof(__pyx_k_readInputPrimordialPowerSpectrum), 0, 0, 1, 1},
  {&__pyx_n_s_readNonLinearPowerSpectrum_py, __pyx_k_readNonLinearPowerSpectrum_py, sizeof(__pyx_k_readNonLinearPowerSpectrum_py), 0, 0, 1, 1},
  {&__pyx_n_s_setWigner3j_py, __pyx_k_setWigner3j_py, sizeof(__pyx_k_setWigner3j_py), 0, 0, 1, 1},
  {&__pyx_n_s_set_kmax_py, __pyx_k_set_kmax_py, sizeof(__pyx_k_set_kmax_py), 0, 0, 1, 1},
  {&__pyx_n_s_set_kmin_py, __pyx_k_set_kmin_py, sizeof(__pyx_k_set_kmin_py), 0, 0, 1, 1},
  {&__pyx_n_s_sigma2_b, __pyx_k_sigma2_b, sizeof(__pyx_k_sigma2_b), 0, 0, 1, 1},
  {&__pyx_n_s_sigma2_para, __pyx_k_sigma2_para, sizeof(__pyx_k_sigma2_para), 0, 0, 1, 1},
  {&__pyx_n_s_sigma2_perp, __pyx_k_sigma2_perp, sizeof(__pyx_k_sigma2_perp), 0, 0, 1, 1},
  {&__pyx_n_s_sigma8, __pyx_k_sigma8, sizeof(__pyx_k_sigma8), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_volume, __pyx_k_volume, sizeof(__pyx_k_volume), 0, 0, 1, 1},
  {&__pyx_n_s_xi, __pyx_k_xi, sizeof(__pyx_k_xi), 0, 0, 1, 1},
  {&__pyx_n_s_xi2pk_py, __pyx_k_xi2pk_py, sizeof(__pyx_k_xi2pk_py), 0, 0, 1, 1},
  {&__pyx_n_s_xx_in, __pyx_k_xx_in, sizeof(__pyx_k_xx_in), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(1, 947, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":947
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 947, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":953
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "hitomi.pyx":13
 *     int fftlog_ComputeXiLM(int l, int m, int N, double * k, double * pk, double * r, double * xi)
 * 
 * def pk2xi_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */
  __pyx_tuple__3 = PyTuple_Pack(5, __pyx_n_s_N, __pyx_n_s_k, __pyx_n_s_pk, __pyx_n_s_r, __pyx_n_s_xi); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_pk2xi_py, 13, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) __PYX_ERR(0, 13, __pyx_L1_error)

  /* "hitomi.pyx":23
 * 
 * 
 * def xi2pk_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] r not None,
 */
  __pyx_tuple__5 = PyTuple_Pack(5, __pyx_n_s_N, __pyx_n_s_r, __pyx_n_s_xi, __pyx_n_s_k, __pyx_n_s_pk); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__5, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_xi2pk_py, 23, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) __PYX_ERR(0, 23, __pyx_L1_error)

  /* "hitomi.pyx":33
 * 
 * 
 * def hankel_py(             # <<<<<<<<<<<<<<
 *         int l, int m, int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */
  __pyx_tuple__7 = PyTuple_Pack(7, __pyx_n_s_l, __pyx_n_s_m, __pyx_n_s_N, __pyx_n_s_k, __pyx_n_s_pk, __pyx_n_s_r, __pyx_n_s_xi); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(7, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_hankel_py, 33, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 33, __pyx_L1_error)

  /* "hitomi.pyx":47
 *     int setWigner3j()
 * 
 * def setWigner3j_py():             # <<<<<<<<<<<<<<
 *     return setWigner3j()
 * 
 */
  __pyx_codeobj__9 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_setWigner3j_py, 47, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__9)) __PYX_ERR(0, 47, __pyx_L1_error)

  /* "hitomi.pyx":68
 * 
 * 
 * def f_pk_no_wiggle_integrand_py(double kmag, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 */
  __pyx_tuple__10 = PyTuple_Pack(6, __pyx_n_s_kmag, __pyx_n_s_h, __pyx_n_s_omegab, __pyx_n_s_omega0, __pyx_n_s_Tcmb, __pyx_n_s_n_s); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_codeobj__11 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__10, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_f_pk_no_wiggle_integrand_py, 68, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__11)) __PYX_ERR(0, 68, __pyx_L1_error)

  /* "hitomi.pyx":71
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 * def calcSigma_dd_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcSigma_dd(sigma8)
 * 
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_n_s_sigma8, __pyx_n_s_sigma8); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_codeobj__13 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__12, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_calcSigma_dd_py, 71, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__13)) __PYX_ERR(0, 71, __pyx_L1_error)

  /* "hitomi.pyx":75
 * 
 * 
 * def readInputPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_tuple__14 = PyTuple_Pack(3, __pyx_n_s_kbin_in, __pyx_n_s_pk_in, __pyx_n_s_pk_num_in); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_readInputPowerSpectrum_py, 75, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(0, 75, __pyx_L1_error)

  /* "hitomi.pyx":82
 *     return readInputPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)
 * 
 * def readInputNoWigglePowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_tuple__16 = PyTuple_Pack(3, __pyx_n_s_kbin_in, __pyx_n_s_pk_in, __pyx_n_s_pk_num_in); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);
  __pyx_codeobj__17 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__16, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_readInputNoWigglePowerSpectrum_p, 82, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__17)) __PYX_ERR(0, 82, __pyx_L1_error)

  /* "hitomi.pyx":90
 * 
 * 
 * def readInputPrimordialPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_tuple__18 = PyTuple_Pack(3, __pyx_n_s_kbin_in, __pyx_n_s_pk_in, __pyx_n_s_pk_num_in); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_readInputPrimordialPowerSpectrum, 90, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(0, 90, __pyx_L1_error)

  /* "hitomi.pyx":98
 * 
 * 
 * def readNonLinearPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_0_in not None,
 */
  __pyx_tuple__20 = PyTuple_Pack(4, __pyx_n_s_kbin_in, __pyx_n_s_pk_0_in, __pyx_n_s_pk_2_in, __pyx_n_s_pk_num_in); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__20, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_readNonLinearPowerSpectrum_py, 98, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(0, 98, __pyx_L1_error)

  /* "hitomi.pyx":107
 * 
 * 
 * def initializeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return initializeInputPowerSpectrum()
 * 
 */
  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_initializeInputPowerSpectrum_py, 107, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(0, 107, __pyx_L1_error)

  /* "hitomi.pyx":111
 * 
 * 
 * def finalizeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return finalizeInputPowerSpectrum()
 * 
 */
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_finalizeInputPowerSpectrum_py, 111, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(0, 111, __pyx_L1_error)

  /* "hitomi.pyx":115
 * 
 * 
 * def calcNormalizationUsingSigma8_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcNormalizationUsingSigma8(sigma8)
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_n_s_sigma8, __pyx_n_s_sigma8); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__24, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_calcNormalizationUsingSigma8_py, 115, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(0, 115, __pyx_L1_error)

  /* "hitomi.pyx":119
 * 
 * 
 * def calcNormalizationNoWiggle_py(double sigma8, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return calcNormalizationNoWiggle(sigma8, h, omegab, omega0, Tcmb, n_s)
 * 
 */
  __pyx_tuple__26 = PyTuple_Pack(6, __pyx_n_s_sigma8, __pyx_n_s_h, __pyx_n_s_omegab, __pyx_n_s_omega0, __pyx_n_s_Tcmb, __pyx_n_s_n_s); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(6, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__26, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_calcNormalizationNoWiggle_py, 119, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(0, 119, __pyx_L1_error)

  /* "hitomi.pyx":123
 * 
 * 
 * def set_kmin_py(double kmin):             # <<<<<<<<<<<<<<
 *     return set_kmin(kmin)
 * 
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_s_kmin, __pyx_n_s_kmin); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_set_kmin_py, 123, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(0, 123, __pyx_L1_error)

  /* "hitomi.pyx":127
 * 
 * 
 * def set_kmax_py(double kmax):             # <<<<<<<<<<<<<<
 *     return set_kmax(kmax)
 * 
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_n_s_kmax, __pyx_n_s_kmax); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_set_kmax_py, 127, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(0, 127, __pyx_L1_error)

  /* "hitomi.pyx":912
 *     double dSig2(double rbao, double ks)
 * 
 * def Sig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return Sig2(rbao, ks)
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_n_s_rbao, __pyx_n_s_ks); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_Sig2_py, 912, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 912, __pyx_L1_error)

  /* "hitomi.pyx":916
 *     return Sig2(rbao, ks)
 * 
 * def dSig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return dSig2(rbao, ks)
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_n_s_rbao, __pyx_n_s_ks); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(2, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_dSig2_py, 916, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 916, __pyx_L1_error)

  /* "hitomi.pyx":920
 *     return dSig2(rbao, ks)
 * 
 * def integrand_P_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__36 = PyTuple_Pack(18, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(18, 0, 18, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_LocalMean_py, 920, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(0, 920, __pyx_L1_error)

  /* "hitomi.pyx":934
 *             nmean, volume)
 * 
 * def integrand_P_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__38 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_py, 934, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(0, 934, __pyx_L1_error)

  /* "hitomi.pyx":944
 *             alpha_perp, alpha_parallel, f, b1)
 * 
 * def integrand_P_Damping_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__40 = PyTuple_Pack(13, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(13, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Damping_Tree_py, 944, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(0, 944, __pyx_L1_error)

  /* "hitomi.pyx":954
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 * 
 * def integrand_P_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__42 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_c0, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Counterterm_py, 954, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(0, 954, __pyx_L1_error)

  /* "hitomi.pyx":966
 *             c0, c1, c2, knl)
 * 
 * def integrand_P_Damping_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__44 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_c0, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Damping_Counterterm, 966, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(0, 966, __pyx_L1_error)

  /* "hitomi.pyx":980
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__46 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bG2, __pyx_n_s_bGamma3); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 980, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_1loop_py, 980, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(0, 980, __pyx_L1_error)

  /* "hitomi.pyx":992
 *             b2, bG2, bGamma3)
 * 
 * def integrand_P_Damping_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__48 = PyTuple_Pack(16, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bG2, __pyx_n_s_bGamma3, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(16, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Damping_1loop_py, 992, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(0, 992, __pyx_L1_error)

  /* "hitomi.pyx":1006
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__50 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 1006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Kernel_Tree_py, 1006, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(0, 1006, __pyx_L1_error)

  /* "hitomi.pyx":1017
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__52 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Kernel_Counterterm_p, 1017, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 1017, __pyx_L1_error)

  /* "hitomi.pyx":1028
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__54 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Kernel_1loop_22_py, 1028, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 1028, __pyx_L1_error)

  /* "hitomi.pyx":1039
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_norm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__56 = PyTuple_Pack(10, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(10, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Kernel_1loop_22_norm, 1039, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 1039, __pyx_L1_error)

  /* "hitomi.pyx":1049
 *             f, Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_1loop_13_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__58 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Kernel_1loop_13_py, 1049, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 1049, __pyx_L1_error)

  /* "hitomi.pyx":1060
 *             &parameters[0])
 * 
 * def integrand_P_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__60 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_NoWiggle_py, 1060, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 1060, __pyx_L1_error)

  /* "hitomi.pyx":1070
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_P_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__62 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_BAO_py, 1070, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(0, 1070, __pyx_L1_error)

  /* "hitomi.pyx":1081
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_P_Tree_BAO_Fitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__64 = PyTuple_Pack(26, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_A20, __pyx_n_s_A11, __pyx_n_s_A02, __pyx_n_s_A30, __pyx_n_s_A21, __pyx_n_s_A12, __pyx_n_s_A03, __pyx_n_s_A40, __pyx_n_s_A31, __pyx_n_s_A22, __pyx_n_s_A13, __pyx_n_s_A04); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(26, 0, 26, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_BAO_Fitting_py, 1081, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(0, 1081, __pyx_L1_error)

  /* "hitomi.pyx":1099
 * 
 * 
 * def integrand_P_NonLinearFitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__66 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__66, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_NonLinearFitting_py, 1099, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 1099, __pyx_L1_error)

  /* "hitomi.pyx":1112
 * 
 * 
 * def integrand_P_NonLinearFitting_Window_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__68 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_NonLinearFitting_Win, 1112, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(0, 1112, __pyx_L1_error)

  /* "hitomi.pyx":1126
 *             volume)
 * 
 * def integrand_P_SigmaB_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_tuple__70 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_SigmaB_py, 1126, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(0, 1126, __pyx_L1_error)

  /* "hitomi.pyx":1141
 * 
 * 
 * def integrand_P_sigma2_perp_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_tuple__72 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b1_fid, __pyx_n_s_R); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_sigma2_perp_Reconstr, 1141, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 1141, __pyx_L1_error)

  /* "hitomi.pyx":1154
 * 
 * 
 * def integrand_P_sigma2_para_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_tuple__74 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b1_fid, __pyx_n_s_R); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(0, 1154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__74, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_sigma2_para_Reconstr, 1154, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(0, 1154, __pyx_L1_error)

  /* "hitomi.pyx":1183
 * #
 * #
 * def integrand_P_Tree_BAO_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__76 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 1183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_BAO_b1_b1_py, 1183, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(0, 1183, __pyx_L1_error)

  /* "hitomi.pyx":1196
 * 
 * 
 * def integrand_P_Tree_BAO_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__78 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_BAO_b1_f_py, 1196, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(0, 1196, __pyx_L1_error)

  /* "hitomi.pyx":1209
 * 
 * 
 * def integrand_P_Tree_BAO_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_tuple__80 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 1209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__80, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_P_Tree_BAO_f_f_py, 1209, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(0, 1209, __pyx_L1_error)

  /* "hitomi.pyx":1387
 * 
 * 
 * def integrand_cov_PP_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */
  __pyx_tuple__82 = PyTuple_Pack(16, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(16, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_G_py, 1387, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(0, 1387, __pyx_L1_error)

  /* "hitomi.pyx":1400
 * 
 * 
 * def integrand_cov_PP_NG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__84 = PyTuple_Pack(23, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_b3, __pyx_n_s_bK2, __pyx_n_s_bK3, __pyx_n_s_bDK, __pyx_n_s_bO, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(0, 1400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(23, 0, 23, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_py, 1400, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(0, 1400, __pyx_L1_error)

  /* "hitomi.pyx":1414
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_G_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */
  __pyx_tuple__86 = PyTuple_Pack(18, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(18, 0, 18, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_G_NL_py, 1414, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(0, 1414, __pyx_L1_error)

  /* "hitomi.pyx":1428
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__88 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 1428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__88, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_b1_py, 1428, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(0, 1428, __pyx_L1_error)

  /* "hitomi.pyx":1440
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__90 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_b2_py, 1440, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(0, 1440, __pyx_L1_error)

  /* "hitomi.pyx":1453
 * 
 * 
 * def integrand_cov_PP_NG_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__92 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__92, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_bK2_py, 1453, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) __PYX_ERR(0, 1453, __pyx_L1_error)

  /* "hitomi.pyx":1465
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__94 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_b2_b2_py, 1465, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 1465, __pyx_L1_error)

  /* "hitomi.pyx":1477
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__96 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_b2_bK2_py, 1477, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 1477, __pyx_L1_error)

  /* "hitomi.pyx":1490
 * 
 * 
 * def integrand_cov_PP_NG_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__98 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_bK2_bK2_py, 1490, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 1490, __pyx_L1_error)

  /* "hitomi.pyx":1503
 * 
 * 
 * def integrand_cov_PP_NG_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__100 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_b3_py, 1503, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 1503, __pyx_L1_error)

  /* "hitomi.pyx":1516
 * 
 * 
 * def integrand_cov_PP_NG_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__102 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_bK3_py, 1516, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 1516, __pyx_L1_error)

  /* "hitomi.pyx":1529
 * 
 * 
 * def integrand_cov_PP_NG_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__104 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 1529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_bDK_py, 1529, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 1529, __pyx_L1_error)

  /* "hitomi.pyx":1541
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__106 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 1541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_bO_py, 1541, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(0, 1541, __pyx_L1_error)

  /* "hitomi.pyx":1555
 * #####################################
 * 
 * def integrand_cov_PP_NG_BeatCoupling_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__108 = PyTuple_Pack(23, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_b3, __pyx_n_s_bK2, __pyx_n_s_bK3, __pyx_n_s_bDK, __pyx_n_s_bO, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(23, 0, 23, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling, 1555, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 1555, __pyx_L1_error)

  /* "hitomi.pyx":1569
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__110 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__110)) __PYX_ERR(0, 1569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__110, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_2, 1569, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(0, 1569, __pyx_L1_error)

  /* "hitomi.pyx":1581
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__112 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(0, 1581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_3, 1581, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(0, 1581, __pyx_L1_error)

  /* "hitomi.pyx":1593
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__114 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__114, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_4, 1593, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(0, 1593, __pyx_L1_error)

  /* "hitomi.pyx":1606
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__116 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__116)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__116, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_5, 1606, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(0, 1606, __pyx_L1_error)

  /* "hitomi.pyx":1619
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__118 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_6, 1619, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(0, 1619, __pyx_L1_error)

  /* "hitomi.pyx":1632
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__120 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__120, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_7, 1632, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) __PYX_ERR(0, 1632, __pyx_L1_error)

  /* "hitomi.pyx":1645
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__122 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__122)) __PYX_ERR(0, 1645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__122, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_8, 1645, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(0, 1645, __pyx_L1_error)

  /* "hitomi.pyx":1658
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__124 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(0, 1658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_9, 1658, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 1658, __pyx_L1_error)

  /* "hitomi.pyx":1671
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__126 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(0, 1671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__126, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_10, 1671, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) __PYX_ERR(0, 1671, __pyx_L1_error)

  /* "hitomi.pyx":1684
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__128 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__128)) __PYX_ERR(0, 1684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);
  __pyx_codeobj__129 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__128, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_11, 1684, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__129)) __PYX_ERR(0, 1684, __pyx_L1_error)

  /* "hitomi.pyx":1698
 * #################################
 * 
 * def integrand_cov_PP_NG_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__130 = PyTuple_Pack(23, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_b3, __pyx_n_s_bK2, __pyx_n_s_bK3, __pyx_n_s_bDK, __pyx_n_s_bO, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(0, 1698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(23, 0, 23, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_py, 1698, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(0, 1698, __pyx_L1_error)

  /* "hitomi.pyx":1712
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__132 = PyTuple_Pack(25, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_b3, __pyx_n_s_bK2, __pyx_n_s_bK3, __pyx_n_s_bDK, __pyx_n_s_bO, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__132)) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__132);
  __Pyx_GIVEREF(__pyx_tuple__132);
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(25, 0, 25, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__132, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL, 1712, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) __PYX_ERR(0, 1712, __pyx_L1_error)

  /* "hitomi.pyx":1728
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__134 = PyTuple_Pack(26, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_b3, __pyx_n_s_bK2, __pyx_n_s_bK3, __pyx_n_s_bDK, __pyx_n_s_bO, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume, __pyx_n_s_sigma2_b); if (unlikely(!__pyx_tuple__134)) __PYX_ERR(0, 1728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(26, 0, 26, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__134, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_2, 1728, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(0, 1728, __pyx_L1_error)

  /* "hitomi.pyx":1744
 *             DeltaK, nmean, volume, sigma2_b)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__136 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_3, 1744, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(0, 1744, __pyx_L1_error)

  /* "hitomi.pyx":1759
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__138 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__138)) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_4, 1759, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(0, 1759, __pyx_L1_error)

  /* "hitomi.pyx":1774
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_tuple__140 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_5, 1774, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 1774, __pyx_L1_error)

  /* "hitomi.pyx":1792
 * ################################
 * 
 * def integrand_B_NonGaussian_Local_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__142 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(0, 1792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_NonGaussian_Local_py, 1792, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 1792, __pyx_L1_error)

  /* "hitomi.pyx":1801
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_B_NonGaussian_Equilateral_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__144 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_NonGaussian_Equilate, 1801, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(0, 1801, __pyx_L1_error)

  /* "hitomi.pyx":1811
 * 
 * 
 * def integrand_B_NonGaussian_Orthogonal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__146 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1); if (unlikely(!__pyx_tuple__146)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__146, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_NonGaussian_Orthogon, 1811, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(0, 1811, __pyx_L1_error)

  /* "hitomi.pyx":1821
 * 
 * 
 * def integrand_B_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__148 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_py, 1821, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(0, 1821, __pyx_L1_error)

  /* "hitomi.pyx":1832
 *             b2, bK2)
 * 
 * def integrand_B_Tree_FoG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__150 = PyTuple_Pack(20, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl); if (unlikely(!__pyx_tuple__150)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__150);
  __Pyx_GIVEREF(__pyx_tuple__150);
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(20, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__150, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_FoG_py, 1832, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(0, 1832, __pyx_L1_error)

  /* "hitomi.pyx":1845
 *             c1, c2, knl)
 * 
 * def integrand_B_Tree_DampIvanov_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__152 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_rbao, __pyx_n_s_ks); if (unlikely(!__pyx_tuple__152)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_DampIvanov_py, 1845, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(0, 1845, __pyx_L1_error)

  /* "hitomi.pyx":1858
 *             rbao, ks)
 * 
 * def integrand_B_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */
  __pyx_tuple__154 = PyTuple_Pack(20, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bG2, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(20, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_FoG_Damping_diag_py, 1858, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(0, 1858, __pyx_L1_error)

  /* "hitomi.pyx":1872
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_FoG_Damping_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__156 = PyTuple_Pack(21, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bG2, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__156)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(21, 0, 21, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__156, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_FoG_Damping_py, 1872, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(0, 1872, __pyx_L1_error)

  /* "hitomi.pyx":1886
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_SN_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */
  __pyx_tuple__158 = PyTuple_Pack(20, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_f, __pyx_n_s_b1, __pyx_n_s_c1, __pyx_n_s_c2, __pyx_n_s_knl, __pyx_n_s_Pshot, __pyx_n_s_Bshot, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2); if (unlikely(!__pyx_tuple__158)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__158);
  __Pyx_GIVEREF(__pyx_tuple__158);
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(20, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__158, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_SN_FoG_Damping_diag, 1886, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(0, 1886, __pyx_L1_error)

  /* "hitomi.pyx":1899
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__160 = PyTuple_Pack(17, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2); if (unlikely(!__pyx_tuple__160)) __PYX_ERR(0, 1899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(17, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_py, 1899, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) __PYX_ERR(0, 1899, __pyx_L1_error)

  /* "hitomi.pyx":1911
 *             b2, bK2)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__162 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8); if (unlikely(!__pyx_tuple__162)) __PYX_ERR(0, 1911, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__162);
  __Pyx_GIVEREF(__pyx_tuple__162);
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__162, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp, 1911, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) __PYX_ERR(0, 1911, __pyx_L1_error)

  /* "hitomi.pyx":1919
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__164 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8); if (unlikely(!__pyx_tuple__164)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__164);
  __Pyx_GIVEREF(__pyx_tuple__164);
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__164, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_2, 1919, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) __PYX_ERR(0, 1919, __pyx_L1_error)

  /* "hitomi.pyx":1927
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__166 = PyTuple_Pack(11, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8); if (unlikely(!__pyx_tuple__166)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(11, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_3, 1927, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) __PYX_ERR(0, 1927, __pyx_L1_error)

  /* "hitomi.pyx":1935
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__168 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8, __pyx_n_s_sigma2_perp); if (unlikely(!__pyx_tuple__168)) __PYX_ERR(0, 1935, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__168);
  __Pyx_GIVEREF(__pyx_tuple__168);
  __pyx_codeobj__169 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__168, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D, 1935, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__169)) __PYX_ERR(0, 1935, __pyx_L1_error)

  /* "hitomi.pyx":1943
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__170 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8, __pyx_n_s_sigma2_perp); if (unlikely(!__pyx_tuple__170)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__170);
  __Pyx_GIVEREF(__pyx_tuple__170);
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__170, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_2, 1943, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) __PYX_ERR(0, 1943, __pyx_L1_error)

  /* "hitomi.pyx":1952
 * 
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__172 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_sigma8, __pyx_n_s_sigma2_perp); if (unlikely(!__pyx_tuple__172)) __PYX_ERR(0, 1952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_3, 1952, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) __PYX_ERR(0, 1952, __pyx_L1_error)

  /* "hitomi.pyx":1961
 * 
 * 
 * def integrand_B_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__174 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__174)) __PYX_ERR(0, 1961, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__174);
  __Pyx_GIVEREF(__pyx_tuple__174);
  __pyx_codeobj__175 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__174, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_py, 1961, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__175)) __PYX_ERR(0, 1961, __pyx_L1_error)

  /* "hitomi.pyx":1975
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__176 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_b1_fid, __pyx_n_s_R); if (unlikely(!__pyx_tuple__176)) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__176);
  __Pyx_GIVEREF(__pyx_tuple__176);
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__176, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_Reconstructed_p, 1975, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) __PYX_ERR(0, 1975, __pyx_L1_error)

  /* "hitomi.pyx":1989
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_NoWiggle_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__178 = PyTuple_Pack(19, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_b2, __pyx_n_s_bK2, __pyx_n_s_b1_fid, __pyx_n_s_R); if (unlikely(!__pyx_tuple__178)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(19, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_Recons, 1989, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) __PYX_ERR(0, 1989, __pyx_L1_error)

  /* "hitomi.pyx":2003
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_BAO_Template_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__180 = PyTuple_Pack(15, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__180)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__180);
  __Pyx_GIVEREF(__pyx_tuple__180);
  __pyx_codeobj__181 = (PyObject*)__Pyx_PyCode_New(15, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__180, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_Template_py, 2003, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__181)) __PYX_ERR(0, 2003, __pyx_L1_error)

  /* "hitomi.pyx":2017
 * 
 * 
 * def integrand_B_Tree_BAO_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__182 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__182)) __PYX_ERR(0, 2017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__182);
  __Pyx_GIVEREF(__pyx_tuple__182);
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__182, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1_b1_b1_py, 2017, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) __PYX_ERR(0, 2017, __pyx_L1_error)

  /* "hitomi.pyx":2029
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__184 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__184)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1_b1_f_py, 2029, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) __PYX_ERR(0, 2029, __pyx_L1_error)

  /* "hitomi.pyx":2041
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__186 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__186)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__186);
  __Pyx_GIVEREF(__pyx_tuple__186);
  __pyx_codeobj__187 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__186, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1_f_f_py, 2041, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__187)) __PYX_ERR(0, 2041, __pyx_L1_error)

  /* "hitomi.pyx":2053
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__188 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__188)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__188);
  __Pyx_GIVEREF(__pyx_tuple__188);
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__188, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b2_b1_b1_py, 2053, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) __PYX_ERR(0, 2053, __pyx_L1_error)

  /* "hitomi.pyx":2065
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__190 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__190)) __PYX_ERR(0, 2065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__190, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b2_b1_f_py, 2065, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) __PYX_ERR(0, 2065, __pyx_L1_error)

  /* "hitomi.pyx":2077
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__192 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__192)) __PYX_ERR(0, 2077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);
  __pyx_codeobj__193 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b2_f_f_py, 2077, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__193)) __PYX_ERR(0, 2077, __pyx_L1_error)

  /* "hitomi.pyx":2089
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__194 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__194)) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__194);
  __Pyx_GIVEREF(__pyx_tuple__194);
  __pyx_codeobj__195 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__194, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_bK2_b1_b1_p, 2089, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__195)) __PYX_ERR(0, 2089, __pyx_L1_error)

  /* "hitomi.pyx":2101
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__196 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__196)) __PYX_ERR(0, 2101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__196);
  __Pyx_GIVEREF(__pyx_tuple__196);
  __pyx_codeobj__197 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__196, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_bK2_b1_f_py, 2101, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__197)) __PYX_ERR(0, 2101, __pyx_L1_error)

  /* "hitomi.pyx":2113
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__198 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__198)) __PYX_ERR(0, 2113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__198);
  __Pyx_GIVEREF(__pyx_tuple__198);
  __pyx_codeobj__199 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__198, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_bK2_f_f_py, 2113, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__199)) __PYX_ERR(0, 2113, __pyx_L1_error)

  /* "hitomi.pyx":2125
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__200 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__200)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__200);
  __Pyx_GIVEREF(__pyx_tuple__200);
  __pyx_codeobj__201 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__200, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1f_b1_b1_p, 2125, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__201)) __PYX_ERR(0, 2125, __pyx_L1_error)

  /* "hitomi.pyx":2137
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__202 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__202)) __PYX_ERR(0, 2137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__202);
  __Pyx_GIVEREF(__pyx_tuple__202);
  __pyx_codeobj__203 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__202, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1f_b1_f_py, 2137, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__203)) __PYX_ERR(0, 2137, __pyx_L1_error)

  /* "hitomi.pyx":2149
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__204 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__204)) __PYX_ERR(0, 2149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__204);
  __Pyx_GIVEREF(__pyx_tuple__204);
  __pyx_codeobj__205 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__204, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_b1f_f_f_py, 2149, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__205)) __PYX_ERR(0, 2149, __pyx_L1_error)

  /* "hitomi.pyx":2161
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__206 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__206)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__206);
  __Pyx_GIVEREF(__pyx_tuple__206);
  __pyx_codeobj__207 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__206, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_ff_f_f_py, 2161, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__207)) __PYX_ERR(0, 2161, __pyx_L1_error)

  /* "hitomi.pyx":2173
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__208 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma2_perp, __pyx_n_s_sigma2_para); if (unlikely(!__pyx_tuple__208)) __PYX_ERR(0, 2173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__208);
  __Pyx_GIVEREF(__pyx_tuple__208);
  __pyx_codeobj__209 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__208, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_BAO_f_f_f_py, 2173, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__209)) __PYX_ERR(0, 2173, __pyx_L1_error)

  /* "hitomi.pyx":2189
 * ###################
 * 
 * def integrand_B_Tree_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__210 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__210)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__210);
  __Pyx_GIVEREF(__pyx_tuple__210);
  __pyx_codeobj__211 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__210, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1_b1_b1_py, 2189, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__211)) __PYX_ERR(0, 2189, __pyx_L1_error)

  /* "hitomi.pyx":2199
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__212 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__212)) __PYX_ERR(0, 2199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__212);
  __Pyx_GIVEREF(__pyx_tuple__212);
  __pyx_codeobj__213 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__212, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1_b1_f_py, 2199, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__213)) __PYX_ERR(0, 2199, __pyx_L1_error)

  /* "hitomi.pyx":2209
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__214 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__214)) __PYX_ERR(0, 2209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__214);
  __Pyx_GIVEREF(__pyx_tuple__214);
  __pyx_codeobj__215 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__214, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1_f_f_py, 2209, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__215)) __PYX_ERR(0, 2209, __pyx_L1_error)

  /* "hitomi.pyx":2219
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__216 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__216)) __PYX_ERR(0, 2219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__216);
  __Pyx_GIVEREF(__pyx_tuple__216);
  __pyx_codeobj__217 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__216, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b2_b1_b1_py, 2219, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__217)) __PYX_ERR(0, 2219, __pyx_L1_error)

  /* "hitomi.pyx":2229
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__218 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__218)) __PYX_ERR(0, 2229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__218);
  __Pyx_GIVEREF(__pyx_tuple__218);
  __pyx_codeobj__219 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__218, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b2_b1_f_py, 2229, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__219)) __PYX_ERR(0, 2229, __pyx_L1_error)

  /* "hitomi.pyx":2239
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__220 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__220)) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__220);
  __Pyx_GIVEREF(__pyx_tuple__220);
  __pyx_codeobj__221 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__220, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b2_f_f_py, 2239, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__221)) __PYX_ERR(0, 2239, __pyx_L1_error)

  /* "hitomi.pyx":2249
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__222 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__222)) __PYX_ERR(0, 2249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__222);
  __Pyx_GIVEREF(__pyx_tuple__222);
  __pyx_codeobj__223 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__222, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_bK2_b1_b1_py, 2249, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__223)) __PYX_ERR(0, 2249, __pyx_L1_error)

  /* "hitomi.pyx":2258
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__224 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__224)) __PYX_ERR(0, 2258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__224);
  __Pyx_GIVEREF(__pyx_tuple__224);
  __pyx_codeobj__225 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__224, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_bK2_b1_f_py, 2258, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__225)) __PYX_ERR(0, 2258, __pyx_L1_error)

  /* "hitomi.pyx":2268
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__226 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__226)) __PYX_ERR(0, 2268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__226);
  __Pyx_GIVEREF(__pyx_tuple__226);
  __pyx_codeobj__227 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__226, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_bK2_f_f_py, 2268, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__227)) __PYX_ERR(0, 2268, __pyx_L1_error)

  /* "hitomi.pyx":2278
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__228 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__228)) __PYX_ERR(0, 2278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__228);
  __Pyx_GIVEREF(__pyx_tuple__228);
  __pyx_codeobj__229 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__228, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1f_b1_b1_py, 2278, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__229)) __PYX_ERR(0, 2278, __pyx_L1_error)

  /* "hitomi.pyx":2288
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__230 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__230)) __PYX_ERR(0, 2288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__230);
  __Pyx_GIVEREF(__pyx_tuple__230);
  __pyx_codeobj__231 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__230, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1f_b1_f_py, 2288, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__231)) __PYX_ERR(0, 2288, __pyx_L1_error)

  /* "hitomi.pyx":2298
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__232 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__232)) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__232);
  __Pyx_GIVEREF(__pyx_tuple__232);
  __pyx_codeobj__233 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__232, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_b1f_f_f_py, 2298, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__233)) __PYX_ERR(0, 2298, __pyx_L1_error)

  /* "hitomi.pyx":2308
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__234 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__234)) __PYX_ERR(0, 2308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__234);
  __Pyx_GIVEREF(__pyx_tuple__234);
  __pyx_codeobj__235 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__234, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_ff_f_f_py, 2308, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__235)) __PYX_ERR(0, 2308, __pyx_L1_error)

  /* "hitomi.pyx":2318
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__236 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__236)) __PYX_ERR(0, 2318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__236);
  __Pyx_GIVEREF(__pyx_tuple__236);
  __pyx_codeobj__237 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__236, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_f_f_f_py, 2318, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__237)) __PYX_ERR(0, 2318, __pyx_L1_error)

  /* "hitomi.pyx":2333
 * ###################
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__238 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__238)) __PYX_ERR(0, 2333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__238);
  __Pyx_GIVEREF(__pyx_tuple__238);
  __pyx_codeobj__239 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__238, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1, 2333, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__239)) __PYX_ERR(0, 2333, __pyx_L1_error)

  /* "hitomi.pyx":2343
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__240 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__240)) __PYX_ERR(0, 2343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__240);
  __Pyx_GIVEREF(__pyx_tuple__240);
  __pyx_codeobj__241 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__240, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1_2, 2343, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__241)) __PYX_ERR(0, 2343, __pyx_L1_error)

  /* "hitomi.pyx":2353
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__242 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__242)) __PYX_ERR(0, 2353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__242);
  __Pyx_GIVEREF(__pyx_tuple__242);
  __pyx_codeobj__243 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__242, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_f_f, 2353, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__243)) __PYX_ERR(0, 2353, __pyx_L1_error)

  /* "hitomi.pyx":2363
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__244 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__244)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__244);
  __Pyx_GIVEREF(__pyx_tuple__244);
  __pyx_codeobj__245 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__244, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1, 2363, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__245)) __PYX_ERR(0, 2363, __pyx_L1_error)

  /* "hitomi.pyx":2373
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__246 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__246)) __PYX_ERR(0, 2373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__246);
  __Pyx_GIVEREF(__pyx_tuple__246);
  __pyx_codeobj__247 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__246, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1_2, 2373, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__247)) __PYX_ERR(0, 2373, __pyx_L1_error)

  /* "hitomi.pyx":2383
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__248 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__248)) __PYX_ERR(0, 2383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__248);
  __Pyx_GIVEREF(__pyx_tuple__248);
  __pyx_codeobj__249 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__248, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_f_f, 2383, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__249)) __PYX_ERR(0, 2383, __pyx_L1_error)

  /* "hitomi.pyx":2393
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__250 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__250)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__250);
  __Pyx_GIVEREF(__pyx_tuple__250);
  __pyx_codeobj__251 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__250, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1, 2393, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__251)) __PYX_ERR(0, 2393, __pyx_L1_error)

  /* "hitomi.pyx":2402
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__252 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__252)) __PYX_ERR(0, 2402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__252);
  __Pyx_GIVEREF(__pyx_tuple__252);
  __pyx_codeobj__253 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__252, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1_2, 2402, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__253)) __PYX_ERR(0, 2402, __pyx_L1_error)

  /* "hitomi.pyx":2412
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__254 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__254)) __PYX_ERR(0, 2412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__254);
  __Pyx_GIVEREF(__pyx_tuple__254);
  __pyx_codeobj__255 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__254, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_f, 2412, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__255)) __PYX_ERR(0, 2412, __pyx_L1_error)

  /* "hitomi.pyx":2422
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__256 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__256)) __PYX_ERR(0, 2422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__256);
  __Pyx_GIVEREF(__pyx_tuple__256);
  __pyx_codeobj__257 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__256, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1, 2422, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__257)) __PYX_ERR(0, 2422, __pyx_L1_error)

  /* "hitomi.pyx":2432
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__258 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__258)) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__258);
  __Pyx_GIVEREF(__pyx_tuple__258);
  __pyx_codeobj__259 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__258, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1_2, 2432, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__259)) __PYX_ERR(0, 2432, __pyx_L1_error)

  /* "hitomi.pyx":2442
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__260 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__260)) __PYX_ERR(0, 2442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__260);
  __Pyx_GIVEREF(__pyx_tuple__260);
  __pyx_codeobj__261 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__260, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_f, 2442, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__261)) __PYX_ERR(0, 2442, __pyx_L1_error)

  /* "hitomi.pyx":2452
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__262 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__262)) __PYX_ERR(0, 2452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__262);
  __Pyx_GIVEREF(__pyx_tuple__262);
  __pyx_codeobj__263 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__262, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_ff_f_f, 2452, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__263)) __PYX_ERR(0, 2452, __pyx_L1_error)

  /* "hitomi.pyx":2462
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_tuple__264 = PyTuple_Pack(12, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel); if (unlikely(!__pyx_tuple__264)) __PYX_ERR(0, 2462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__264);
  __Pyx_GIVEREF(__pyx_tuple__264);
  __pyx_codeobj__265 = (PyObject*)__Pyx_PyCode_New(12, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__264, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Tree_NoWiggle_f_f_f, 2462, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__265)) __PYX_ERR(0, 2462, __pyx_L1_error)

  /* "hitomi.pyx":2473
 * 
 * 
 * def integrand_SS_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash,
 */
  __pyx_tuple__266 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_ell1_dash, __pyx_n_s_ell2_dash, __pyx_n_s_ELL_dash, __pyx_n_s_n, __pyx_n_s_m, __pyx_n_s_epsilon, __pyx_n_s_num_epsilon); if (unlikely(!__pyx_tuple__266)) __PYX_ERR(0, 2473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__266);
  __Pyx_GIVEREF(__pyx_tuple__266);
  __pyx_codeobj__267 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__266, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_SS_py, 2473, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__267)) __PYX_ERR(0, 2473, __pyx_L1_error)

  /* "hitomi.pyx":2485
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_SSpow_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ELL, int ELL_dash,
 */
  __pyx_tuple__268 = PyTuple_Pack(9, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_ELL, __pyx_n_s_ELL_dash, __pyx_n_s_n, __pyx_n_s_epsilon, __pyx_n_s_num_epsilon); if (unlikely(!__pyx_tuple__268)) __PYX_ERR(0, 2485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__268);
  __Pyx_GIVEREF(__pyx_tuple__268);
  __pyx_codeobj__269 = (PyObject*)__Pyx_PyCode_New(9, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__268, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_SSpow_py, 2485, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__269)) __PYX_ERR(0, 2485, __pyx_L1_error)

  /* "hitomi.pyx":2497
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_cov_BB_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1, double k1_dash,
 */
  __pyx_tuple__270 = PyTuple_Pack(22, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_ell1_dash, __pyx_n_s_ell2_dash, __pyx_n_s_ELL_dash, __pyx_n_s_k1, __pyx_n_s_k1_dash, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__270)) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__270);
  __Pyx_GIVEREF(__pyx_tuple__270);
  __pyx_codeobj__271 = (PyObject*)__Pyx_PyCode_New(22, 0, 22, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__270, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_BB_G_py, 2497, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__271)) __PYX_ERR(0, 2497, __pyx_L1_error)

  /* "hitomi.pyx":2509
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_BB_G_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1,
 */
  __pyx_tuple__272 = PyTuple_Pack(21, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_ell1_dash, __pyx_n_s_ell2_dash, __pyx_n_s_ELL_dash, __pyx_n_s_k1, __pyx_n_s_alpha_perp, __pyx_n_s_alpha_parallel, __pyx_n_s_sigma8, __pyx_n_s_fz, __pyx_n_s_b1, __pyx_n_s_DeltaK, __pyx_n_s_nmean, __pyx_n_s_volume); if (unlikely(!__pyx_tuple__272)) __PYX_ERR(0, 2509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__272);
  __Pyx_GIVEREF(__pyx_tuple__272);
  __pyx_codeobj__273 = (PyObject*)__Pyx_PyCode_New(21, 0, 21, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__272, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_cov_BB_G_diag_py, 2509, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__273)) __PYX_ERR(0, 2509, __pyx_L1_error)

  /* "hitomi.pyx":2525
 * ################################
 * 
 * def integrand_B_Kernel_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */
  __pyx_tuple__274 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__274)) __PYX_ERR(0, 2525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__274);
  __Pyx_GIVEREF(__pyx_tuple__274);
  __pyx_codeobj__275 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__274, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Kernel_py, 2525, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__275)) __PYX_ERR(0, 2525, __pyx_L1_error)

  /* "hitomi.pyx":2537
 * ################################
 * 
 * def integrand_B_Kernel_SN_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */
  __pyx_tuple__276 = PyTuple_Pack(14, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_kmag1, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__276)) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__276);
  __Pyx_GIVEREF(__pyx_tuple__276);
  __pyx_codeobj__277 = (PyObject*)__Pyx_PyCode_New(14, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__276, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Kernel_SN_py, 2537, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__277)) __PYX_ERR(0, 2537, __pyx_L1_error)

  /* "hitomi.pyx":2549
 * ################################
 * 
 * def integrand_B_Kernel_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_tuple__278 = PyTuple_Pack(13, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__278)) __PYX_ERR(0, 2549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__278);
  __Pyx_GIVEREF(__pyx_tuple__278);
  __pyx_codeobj__279 = (PyObject*)__Pyx_PyCode_New(13, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__278, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Kernel_diag_py, 2549, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__279)) __PYX_ERR(0, 2549, __pyx_L1_error)

  /* "hitomi.pyx":2561
 * ################################
 * 
 * def integrand_B_Kernel_SN_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_tuple__280 = PyTuple_Pack(13, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__280)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__280);
  __Pyx_GIVEREF(__pyx_tuple__280);
  __pyx_codeobj__281 = (PyObject*)__Pyx_PyCode_New(13, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__280, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Kernel_SN_diag_py, 2561, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__281)) __PYX_ERR(0, 2561, __pyx_L1_error)

  /* "hitomi.pyx":2571
 *             &parameters[0])
 * 
 * def integrand_B_Kernel_PNG_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_tuple__282 = PyTuple_Pack(13, __pyx_n_s_xx_in, __pyx_n_s_ndim, __pyx_n_s_ff_out, __pyx_n_s_ncomp, __pyx_n_s_kbin, __pyx_n_s_num_k_bin, __pyx_n_s_ell1, __pyx_n_s_ell2, __pyx_n_s_ELL, __pyx_n_s_f, __pyx_n_s_Sigma2, __pyx_n_s_dSigma2, __pyx_n_s_parameters); if (unlikely(!__pyx_tuple__282)) __PYX_ERR(0, 2571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__282);
  __Pyx_GIVEREF(__pyx_tuple__282);
  __pyx_codeobj__283 = (PyObject*)__Pyx_PyCode_New(13, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__282, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_hitomi_pyx, __pyx_n_s_integrand_B_Kernel_PNG_diag_py, 2571, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__283)) __PYX_ERR(0, 2571, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(1, 200, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(1, 223, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(1, 227, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(1, 239, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_generic) __PYX_ERR(1, 771, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType(__pyx_t_1, "numpy", "number", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_number) __PYX_ERR(1, 773, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_integer) __PYX_ERR(1, 775, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(1, 777, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(1, 779, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(1, 781, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_floating) __PYX_ERR(1, 783, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(1, 785, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(1, 787, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType(__pyx_t_1, "numpy", "character", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_character) __PYX_ERR(1, 789, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(1, 827, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC inithitomipy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC inithitomipy(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_hitomipy(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_hitomipy(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_hitomipy(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'hitomipy' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_hitomipy(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("hitomipy", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_hitomipy) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "hitomipy")) {
      if (unlikely(PyDict_SetItemString(modules, "hitomipy", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "hitomi.pyx":3
 * # cython: c_string_type=unicode, c_string_encoding=utf8
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":13
 *     int fftlog_ComputeXiLM(int l, int m, int N, double * k, double * pk, double * r, double * xi)
 * 
 * def pk2xi_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_1pk2xi_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pk2xi_py, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":23
 * 
 * 
 * def xi2pk_py(             # <<<<<<<<<<<<<<
 *         int N,
 *         np.ndarray[double, ndim=1, mode="c"] r not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_3xi2pk_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_xi2pk_py, __pyx_t_1) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":33
 * 
 * 
 * def hankel_py(             # <<<<<<<<<<<<<<
 *         int l, int m, int N,
 *         np.ndarray[double, ndim=1, mode="c"] k not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_5hankel_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_hankel_py, __pyx_t_1) < 0) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":47
 *     int setWigner3j()
 * 
 * def setWigner3j_py():             # <<<<<<<<<<<<<<
 *     return setWigner3j()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_7setWigner3j_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setWigner3j_py, __pyx_t_1) < 0) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":68
 * 
 * 
 * def f_pk_no_wiggle_integrand_py(double kmag, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_9f_pk_no_wiggle_integrand_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_f_pk_no_wiggle_integrand_py, __pyx_t_1) < 0) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":71
 *     return f_pk_no_wiggle_integrand(kmag, h, omegab, omega0, Tcmb, n_s)
 * 
 * def calcSigma_dd_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcSigma_dd(sigma8)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_11calcSigma_dd_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calcSigma_dd_py, __pyx_t_1) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":75
 * 
 * 
 * def readInputPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_13readInputPowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readInputPowerSpectrum_py, __pyx_t_1) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":82
 *     return readInputPowerSpectrum( & kbin_in[0], & pk_in[0], pk_num_in)
 * 
 * def readInputNoWigglePowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_15readInputNoWigglePowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readInputNoWigglePowerSpectrum_p, __pyx_t_1) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":90
 * 
 * 
 * def readInputPrimordialPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_in not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_17readInputPrimordialPowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readInputPrimordialPowerSpectrum, __pyx_t_1) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":98
 * 
 * 
 * def readNonLinearPowerSpectrum_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] kbin_in not None,
 *         np.ndarray[double, ndim=1, mode="c"] pk_0_in not None,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_19readNonLinearPowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_readNonLinearPowerSpectrum_py, __pyx_t_1) < 0) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":107
 * 
 * 
 * def initializeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return initializeInputPowerSpectrum()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_21initializeInputPowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_initializeInputPowerSpectrum_py, __pyx_t_1) < 0) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":111
 * 
 * 
 * def finalizeInputPowerSpectrum_py():             # <<<<<<<<<<<<<<
 *     return finalizeInputPowerSpectrum()
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_23finalizeInputPowerSpectrum_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_finalizeInputPowerSpectrum_py, __pyx_t_1) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":115
 * 
 * 
 * def calcNormalizationUsingSigma8_py(double sigma8):             # <<<<<<<<<<<<<<
 *     return calcNormalizationUsingSigma8(sigma8)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_25calcNormalizationUsingSigma8_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calcNormalizationUsingSigma8_py, __pyx_t_1) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":119
 * 
 * 
 * def calcNormalizationNoWiggle_py(double sigma8, double h, double omegab, double omega0, double Tcmb, double n_s):             # <<<<<<<<<<<<<<
 *     return calcNormalizationNoWiggle(sigma8, h, omegab, omega0, Tcmb, n_s)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_27calcNormalizationNoWiggle_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_calcNormalizationNoWiggle_py, __pyx_t_1) < 0) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":123
 * 
 * 
 * def set_kmin_py(double kmin):             # <<<<<<<<<<<<<<
 *     return set_kmin(kmin)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_29set_kmin_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_kmin_py, __pyx_t_1) < 0) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":127
 * 
 * 
 * def set_kmax_py(double kmax):             # <<<<<<<<<<<<<<
 *     return set_kmax(kmax)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_31set_kmax_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_set_kmax_py, __pyx_t_1) < 0) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":912
 *     double dSig2(double rbao, double ks)
 * 
 * def Sig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return Sig2(rbao, ks)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_33Sig2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Sig2_py, __pyx_t_1) < 0) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":916
 *     return Sig2(rbao, ks)
 * 
 * def dSig2_py(             # <<<<<<<<<<<<<<
 *         double rbao, double ks):
 *     return dSig2(rbao, ks)
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_35dSig2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dSig2_py, __pyx_t_1) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":920
 *     return dSig2(rbao, ks)
 * 
 * def integrand_P_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_37integrand_P_LocalMean_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_LocalMean_py, __pyx_t_1) < 0) __PYX_ERR(0, 920, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":934
 *             nmean, volume)
 * 
 * def integrand_P_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_39integrand_P_Tree_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_py, __pyx_t_1) < 0) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":944
 *             alpha_perp, alpha_parallel, f, b1)
 * 
 * def integrand_P_Damping_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_41integrand_P_Damping_Tree_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Damping_Tree_py, __pyx_t_1) < 0) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":954
 *             alpha_perp, alpha_parallel, f, b1, Sigma2, dSigma2)
 * 
 * def integrand_P_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_43integrand_P_Counterterm_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Counterterm_py, __pyx_t_1) < 0) __PYX_ERR(0, 954, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":966
 *             c0, c1, c2, knl)
 * 
 * def integrand_P_Damping_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_45integrand_P_Damping_Counterterm_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Damping_Counterterm, __pyx_t_1) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":980
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_47integrand_P_1loop_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 980, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_1loop_py, __pyx_t_1) < 0) __PYX_ERR(0, 980, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":992
 *             b2, bG2, bGamma3)
 * 
 * def integrand_P_Damping_1loop_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_49integrand_P_Damping_1loop_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Damping_1loop_py, __pyx_t_1) < 0) __PYX_ERR(0, 992, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1006
 *             Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_51integrand_P_Kernel_Tree_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1006, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Kernel_Tree_py, __pyx_t_1) < 0) __PYX_ERR(0, 1006, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1017
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_Counterterm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_53integrand_P_Kernel_Counterterm_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Kernel_Counterterm_p, __pyx_t_1) < 0) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1028
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_55integrand_P_Kernel_1loop_22_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Kernel_1loop_22_py, __pyx_t_1) < 0) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1039
 *             &parameters[0])
 * 
 * def integrand_P_Kernel_1loop_22_norm_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_57integrand_P_Kernel_1loop_22_norm_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Kernel_1loop_22_norm, __pyx_t_1) < 0) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1049
 *             f, Sigma2, dSigma2)
 * 
 * def integrand_P_Kernel_1loop_13_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_59integrand_P_Kernel_1loop_13_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Kernel_1loop_13_py, __pyx_t_1) < 0) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1060
 *             &parameters[0])
 * 
 * def integrand_P_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_61integrand_P_Tree_NoWiggle_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_NoWiggle_py, __pyx_t_1) < 0) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1070
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_P_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_63integrand_P_Tree_BAO_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_BAO_py, __pyx_t_1) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1081
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_P_Tree_BAO_Fitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_65integrand_P_Tree_BAO_Fitting_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_BAO_Fitting_py, __pyx_t_1) < 0) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1099
 * 
 * 
 * def integrand_P_NonLinearFitting_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_67integrand_P_NonLinearFitting_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_NonLinearFitting_py, __pyx_t_1) < 0) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1112
 * 
 * 
 * def integrand_P_NonLinearFitting_Window_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_69integrand_P_NonLinearFitting_Window_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_NonLinearFitting_Win, __pyx_t_1) < 0) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1126
 *             volume)
 * 
 * def integrand_P_SigmaB_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_71integrand_P_SigmaB_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_SigmaB_py, __pyx_t_1) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1141
 * 
 * 
 * def integrand_P_sigma2_perp_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_73integrand_P_sigma2_perp_Reconstructed_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_sigma2_perp_Reconstr, __pyx_t_1) < 0) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1154
 * 
 * 
 * def integrand_P_sigma2_para_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_75integrand_P_sigma2_para_Reconstructed_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_sigma2_para_Reconstr, __pyx_t_1) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1183
 * #
 * #
 * def integrand_P_Tree_BAO_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_77integrand_P_Tree_BAO_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_BAO_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 1183, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1196
 * 
 * 
 * def integrand_P_Tree_BAO_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_79integrand_P_Tree_BAO_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_BAO_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1209
 * 
 * 
 * def integrand_P_Tree_BAO_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_81integrand_P_Tree_BAO_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_P_Tree_BAO_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 1209, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1387
 * 
 * 
 * def integrand_cov_PP_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_83integrand_cov_PP_G_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_G_py, __pyx_t_1) < 0) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1400
 * 
 * 
 * def integrand_cov_PP_NG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_85integrand_cov_PP_NG_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_py, __pyx_t_1) < 0) __PYX_ERR(0, 1400, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1414
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_G_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_87integrand_cov_PP_G_NL_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_G_NL_py, __pyx_t_1) < 0) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1428
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_89integrand_cov_PP_NG_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 1428, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1440
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_91integrand_cov_PP_NG_b2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_b2_py, __pyx_t_1) < 0) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1453
 * 
 * 
 * def integrand_cov_PP_NG_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_93integrand_cov_PP_NG_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_bK2_py, __pyx_t_1) < 0) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1465
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_95integrand_cov_PP_NG_b2_b2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_b2_b2_py, __pyx_t_1) < 0) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1477
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_97integrand_cov_PP_NG_b2_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_b2_bK2_py, __pyx_t_1) < 0) __PYX_ERR(0, 1477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1490
 * 
 * 
 * def integrand_cov_PP_NG_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_99integrand_cov_PP_NG_bK2_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_bK2_bK2_py, __pyx_t_1) < 0) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1503
 * 
 * 
 * def integrand_cov_PP_NG_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_101integrand_cov_PP_NG_b3_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_b3_py, __pyx_t_1) < 0) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1516
 * 
 * 
 * def integrand_cov_PP_NG_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_103integrand_cov_PP_NG_bK3_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_bK3_py, __pyx_t_1) < 0) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1529
 * 
 * 
 * def integrand_cov_PP_NG_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_105integrand_cov_PP_NG_bDK_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_bDK_py, __pyx_t_1) < 0) __PYX_ERR(0, 1529, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1541
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_107integrand_cov_PP_NG_bO_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_bO_py, __pyx_t_1) < 0) __PYX_ERR(0, 1541, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1555
 * #####################################
 * 
 * def integrand_cov_PP_NG_BeatCoupling_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_109integrand_cov_PP_NG_BeatCoupling_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling, __pyx_t_1) < 0) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1569
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_111integrand_cov_PP_NG_BeatCoupling_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_2, __pyx_t_1) < 0) __PYX_ERR(0, 1569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1581
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_113integrand_cov_PP_NG_BeatCoupling_b2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_3, __pyx_t_1) < 0) __PYX_ERR(0, 1581, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1593
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_115integrand_cov_PP_NG_BeatCoupling_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_4, __pyx_t_1) < 0) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1606
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_117integrand_cov_PP_NG_BeatCoupling_b2_b2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_5, __pyx_t_1) < 0) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1619
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_119integrand_cov_PP_NG_BeatCoupling_b2_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_6, __pyx_t_1) < 0) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1632
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_121integrand_cov_PP_NG_BeatCoupling_bK2_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_7, __pyx_t_1) < 0) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1645
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_b3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_123integrand_cov_PP_NG_BeatCoupling_b3_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_8, __pyx_t_1) < 0) __PYX_ERR(0, 1645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1658
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bK3_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_125integrand_cov_PP_NG_BeatCoupling_bK3_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_9, __pyx_t_1) < 0) __PYX_ERR(0, 1658, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1671
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bDK_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_127integrand_cov_PP_NG_BeatCoupling_bDK_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_10, __pyx_t_1) < 0) __PYX_ERR(0, 1671, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1684
 * 
 * 
 * def integrand_cov_PP_NG_BeatCoupling_bO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_129integrand_cov_PP_NG_BeatCoupling_bO_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_BeatCoupling_11, __pyx_t_1) < 0) __PYX_ERR(0, 1684, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1698
 * #################################
 * 
 * def integrand_cov_PP_NG_LocalMean_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_131integrand_cov_PP_NG_LocalMean_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_py, __pyx_t_1) < 0) __PYX_ERR(0, 1698, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1712
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_133integrand_cov_PP_NG_LocalMean_NL_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL, __pyx_t_1) < 0) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1728
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_135integrand_cov_PP_NG_LocalMean_NL_Sigma2B_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_2, __pyx_t_1) < 0) __PYX_ERR(0, 1728, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1744
 *             DeltaK, nmean, volume, sigma2_b)
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_137integrand_cov_PP_NG_LocalMean_NL_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_3, __pyx_t_1) < 0) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1759
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_b2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_139integrand_cov_PP_NG_LocalMean_NL_b2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_4, __pyx_t_1) < 0) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1774
 * 
 * 
 * def integrand_cov_PP_NG_LocalMean_NL_bK2_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ELL, int ELL_dash, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_141integrand_cov_PP_NG_LocalMean_NL_bK2_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_PP_NG_LocalMean_NL_5, __pyx_t_1) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1792
 * ################################
 * 
 * def integrand_B_NonGaussian_Local_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_143integrand_B_NonGaussian_Local_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_NonGaussian_Local_py, __pyx_t_1) < 0) __PYX_ERR(0, 1792, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1801
 *             alpha_perp, alpha_parallel, sigma8, fz, b1)
 * 
 * def integrand_B_NonGaussian_Equilateral_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_145integrand_B_NonGaussian_Equilateral_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_NonGaussian_Equilate, __pyx_t_1) < 0) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1811
 * 
 * 
 * def integrand_B_NonGaussian_Orthogonal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_147integrand_B_NonGaussian_Orthogonal_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_NonGaussian_Orthogon, __pyx_t_1) < 0) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1821
 * 
 * 
 * def integrand_B_Tree_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_149integrand_B_Tree_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_py, __pyx_t_1) < 0) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1832
 *             b2, bK2)
 * 
 * def integrand_B_Tree_FoG_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_151integrand_B_Tree_FoG_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_FoG_py, __pyx_t_1) < 0) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1845
 *             c1, c2, knl)
 * 
 * def integrand_B_Tree_DampIvanov_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_153integrand_B_Tree_DampIvanov_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_DampIvanov_py, __pyx_t_1) < 0) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1858
 *             rbao, ks)
 * 
 * def integrand_B_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_155integrand_B_FoG_Damping_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_FoG_Damping_diag_py, __pyx_t_1) < 0) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1872
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_FoG_Damping_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_157integrand_B_FoG_Damping_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_FoG_Damping_py, __pyx_t_1) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1886
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_SN_FoG_Damping_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_159integrand_B_SN_FoG_Damping_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_SN_FoG_Damping_diag, __pyx_t_1) < 0) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1899
 *             Sigma2, dSigma2)
 * 
 * def integrand_B_Tree_NoWiggle_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_161integrand_B_Tree_NoWiggle_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_py, __pyx_t_1) < 0) __PYX_ERR(0, 1899, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1911
 *             b2, bK2)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_163integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Growth_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1911, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp, __pyx_t_1) < 0) __PYX_ERR(0, 1911, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1919
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_165integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Shift_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_2, __pyx_t_1) < 0) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1927
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_167integrand_B_Tree_NoWiggle_RealSpace_DarkMatter_Tidal_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_RealSp_3, __pyx_t_1) < 0) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1935
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_169integrand_B_Tree_BAO_RealSpace_DarkMatter_Growth_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1935, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D, __pyx_t_1) < 0) __PYX_ERR(0, 1935, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1943
 *             &kbin[0], num_k_bin, ell1, ell2, ELL, kmag1, sigma8, sigma2_perp)
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_171integrand_B_Tree_BAO_RealSpace_DarkMatter_Shift_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_2, __pyx_t_1) < 0) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1952
 * 
 * 
 * def integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_173integrand_B_Tree_BAO_RealSpace_DarkMatter_Tidal_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_RealSpace_D_3, __pyx_t_1) < 0) __PYX_ERR(0, 1952, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1961
 * 
 * 
 * def integrand_B_Tree_BAO_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_175integrand_B_Tree_BAO_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1961, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_py, __pyx_t_1) < 0) __PYX_ERR(0, 1961, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1975
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_177integrand_B_Tree_Reconstructed_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_Reconstructed_p, __pyx_t_1) < 0) __PYX_ERR(0, 1975, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1989
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_NoWiggle_Reconstructed_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_179integrand_B_Tree_NoWiggle_Reconstructed_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_Recons, __pyx_t_1) < 0) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2003
 *             b1_fid, R)
 * 
 * def integrand_B_Tree_BAO_Template_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_181integrand_B_Tree_BAO_Template_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_Template_py, __pyx_t_1) < 0) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2017
 * 
 * 
 * def integrand_B_Tree_BAO_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_183integrand_B_Tree_BAO_b1_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2017, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2029
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_185integrand_B_Tree_BAO_b1_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2029, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2041
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_187integrand_B_Tree_BAO_b1_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2041, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2053
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_189integrand_B_Tree_BAO_b2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b2_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2053, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2065
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_191integrand_B_Tree_BAO_b2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b2_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2065, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2077
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_193integrand_B_Tree_BAO_b2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2077, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b2_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2077, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2089
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_195integrand_B_Tree_BAO_bK2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_bK2_b1_b1_p, __pyx_t_1) < 0) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2101
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_197integrand_B_Tree_BAO_bK2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_bK2_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2113
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_199integrand_B_Tree_BAO_bK2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_bK2_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2113, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2125
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_201integrand_B_Tree_BAO_b1f_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1f_b1_b1_p, __pyx_t_1) < 0) __PYX_ERR(0, 2125, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2137
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_203integrand_B_Tree_BAO_b1f_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1f_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2149
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_205integrand_B_Tree_BAO_b1f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_b1f_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2149, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2161
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_207integrand_B_Tree_BAO_ff_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_ff_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2161, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2173
 *             sigma2_perp, sigma2_para)
 * 
 * def integrand_B_Tree_BAO_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_209integrand_B_Tree_BAO_f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_BAO_f_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2173, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2189
 * ###################
 * 
 * def integrand_B_Tree_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_211integrand_B_Tree_b1_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2189, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2199
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_213integrand_B_Tree_b1_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2209
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_215integrand_B_Tree_b1_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2209, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2219
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_217integrand_B_Tree_b2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b2_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2219, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2229
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_219integrand_B_Tree_b2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b2_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2239
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_221integrand_B_Tree_b2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b2_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2239, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2249
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_223integrand_B_Tree_bK2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_bK2_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2249, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2258
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_225integrand_B_Tree_bK2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_bK2_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2268
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_227integrand_B_Tree_bK2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_bK2_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2278
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_229integrand_B_Tree_b1f_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1f_b1_b1_py, __pyx_t_1) < 0) __PYX_ERR(0, 2278, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2288
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_231integrand_B_Tree_b1f_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1f_b1_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2288, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2298
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_233integrand_B_Tree_b1f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_b1f_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2308
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_235integrand_B_Tree_ff_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_ff_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2318
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_237integrand_B_Tree_f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_f_f_f_py, __pyx_t_1) < 0) __PYX_ERR(0, 2318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2333
 * ###################
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_239integrand_B_Tree_NoWiggle_b1_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1, __pyx_t_1) < 0) __PYX_ERR(0, 2333, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2343
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_241integrand_B_Tree_NoWiggle_b1_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_b1_2, __pyx_t_1) < 0) __PYX_ERR(0, 2343, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2353
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_243integrand_B_Tree_NoWiggle_b1_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1_f_f, __pyx_t_1) < 0) __PYX_ERR(0, 2353, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2363
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_245integrand_B_Tree_NoWiggle_b2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1, __pyx_t_1) < 0) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2373
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_247integrand_B_Tree_NoWiggle_b2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_b1_2, __pyx_t_1) < 0) __PYX_ERR(0, 2373, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2383
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_249integrand_B_Tree_NoWiggle_b2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b2_f_f, __pyx_t_1) < 0) __PYX_ERR(0, 2383, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2393
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_251integrand_B_Tree_NoWiggle_bK2_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1, __pyx_t_1) < 0) __PYX_ERR(0, 2393, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2402
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_253integrand_B_Tree_NoWiggle_bK2_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_b1_2, __pyx_t_1) < 0) __PYX_ERR(0, 2402, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2412
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_bK2_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_255integrand_B_Tree_NoWiggle_bK2_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_bK2_f, __pyx_t_1) < 0) __PYX_ERR(0, 2412, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2422
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_b1_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_257integrand_B_Tree_NoWiggle_b1f_b1_b1_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1, __pyx_t_1) < 0) __PYX_ERR(0, 2422, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2432
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_b1_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_259integrand_B_Tree_NoWiggle_b1f_b1_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_b1_2, __pyx_t_1) < 0) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2442
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_b1f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_261integrand_B_Tree_NoWiggle_b1f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_b1f_f, __pyx_t_1) < 0) __PYX_ERR(0, 2442, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2452
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_ff_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_263integrand_B_Tree_NoWiggle_ff_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_ff_f_f, __pyx_t_1) < 0) __PYX_ERR(0, 2452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2462
 *             alpha_perp, alpha_parallel)
 * 
 * def integrand_B_Tree_NoWiggle_f_f_f_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_265integrand_B_Tree_NoWiggle_f_f_f_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Tree_NoWiggle_f_f_f, __pyx_t_1) < 0) __PYX_ERR(0, 2462, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2473
 * 
 * 
 * def integrand_SS_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_267integrand_SS_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_SS_py, __pyx_t_1) < 0) __PYX_ERR(0, 2473, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2485
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_SSpow_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         int ELL, int ELL_dash,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_269integrand_SSpow_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_SSpow_py, __pyx_t_1) < 0) __PYX_ERR(0, 2485, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2497
 *             &epsilon[0], num_epsilon)
 * 
 * def integrand_cov_BB_G_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1, double k1_dash,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_271integrand_cov_BB_G_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_BB_G_py, __pyx_t_1) < 0) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2509
 *             DeltaK, nmean, volume)
 * 
 * def integrand_cov_BB_G_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, int ell1_dash, int ell2_dash, int ELL_dash, double k1,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_273integrand_cov_BB_G_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_cov_BB_G_diag_py, __pyx_t_1) < 0) __PYX_ERR(0, 2509, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2525
 * ################################
 * 
 * def integrand_B_Kernel_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_275integrand_B_Kernel_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Kernel_py, __pyx_t_1) < 0) __PYX_ERR(0, 2525, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2537
 * ################################
 * 
 * def integrand_B_Kernel_SN_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double kmag1, double f,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_277integrand_B_Kernel_SN_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Kernel_SN_py, __pyx_t_1) < 0) __PYX_ERR(0, 2537, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2549
 * ################################
 * 
 * def integrand_B_Kernel_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_279integrand_B_Kernel_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Kernel_diag_py, __pyx_t_1) < 0) __PYX_ERR(0, 2549, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2561
 * ################################
 * 
 * def integrand_B_Kernel_SN_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_281integrand_B_Kernel_SN_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Kernel_SN_diag_py, __pyx_t_1) < 0) __PYX_ERR(0, 2561, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":2571
 *             &parameters[0])
 * 
 * def integrand_B_Kernel_PNG_diag_py(             # <<<<<<<<<<<<<<
 *         np.ndarray[double, ndim=1, mode="c"] xx_in not None, int ndim, np.ndarray[double, ndim=1, mode="c"] ff_out not None, int ncomp,
 *         np.ndarray[double, ndim=1, mode="c"] kbin not None, int num_k_bin, int ell1, int ell2, int ELL, double f,
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_8hitomipy_283integrand_B_Kernel_PNG_diag_py, NULL, __pyx_n_s_hitomipy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_integrand_B_Kernel_PNG_diag_py, __pyx_t_1) < 0) __PYX_ERR(0, 2571, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "hitomi.pyx":1
 * # cython: c_string_type=unicode, c_string_encoding=utf8             # <<<<<<<<<<<<<<
 * 
 * import numpy as np
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../usr/local/anaconda/3.9/lib/python3.9/site-packages/numpy/__init__.pxd":1016
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init hitomipy", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init hitomipy");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* IsLittleEndian */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t <= '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case '?': return "'bool'";
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case '?': case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number, ndim;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    ndim = ctx->head->field->type->ndim;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case '?': case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if ((ctx->enc_type == *ts) && (got_Z == ctx->is_complex) &&
            (ctx->enc_packmode == ctx->new_packmode) && (!ctx->is_valid_array)) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
  static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((size_t)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* BufferIndexError */
  static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* PyErrFetchRestore */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* PyObjectGetAttrStr */
  #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
  static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* GetTopmostException */
  #if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObjectCall */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
  #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* TypeImport */
  #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* Import */
  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* PyDictVersioning */
  #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* CLineInTraceback */
  #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
  static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


  /* CIntFromPyVerify */
  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
  #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
  static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
  static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
